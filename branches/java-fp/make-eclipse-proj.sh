#!/bin/bash
#echo Called as \| $0 $@ \|
if [ -z "$3" ]; then
    echo Usage $0 [--force] project_name depend_prefix external_jar_path
    exit;
fi
NO_FORCE=true;
if [ "--force" = "$1" ]; then
    NO_FORCE=false;
    shift;
fi
if $NO_FORCE && [ -f .project ]; then
    echo This directory already has an eclipse .project file
    echo Move away .project, .classpath and .settings, or use --force
fi
# Get a : separated list of entries with relative paths. Make XML with
# full paths. Also strip out dependent proj jars, as these are included
# as eclipse subprojects

function jarpaths {
    awk -F : -v "args=$*" \
'BEGIN{split(args,subprojs,/[[:space:]]+/);
}
{n=NF;
while(n>0) {
   e = $(NF-n+1)
   if( e != "" ) {
    excluded=0;
    for( ep in subprojs ) {
      excluded += index( e, subprojs[ep] );
      #print "e=" e ", ep=" subprojs[ep] ", excl=" excluded;
    }
    if( excluded == 0 ) {
     ("readlink -f " e ) | getline full_path;
     print "<classpathentry kind=\"lib\" path=\"" full_path "\" />" 
    }
   }
   n--;
  }
}' 
} 

PFX=.
PRI_SRC=`readlink -f .`/src
# Write .project file
cat <<EOF > ${PFX}project
<?xml version="1.0" encoding="UTF-8"?>
<projectDescription>
        <name>$2$1</name>
        <comment>Automaticlly generated by Fuego build system</comment>
        <projects>
        </projects>
        <buildSpec>
                <buildCommand>
                        <name>org.eclipse.jdt.core.javabuilder</name>
                        <arguments>
                        </arguments>
                </buildCommand>
        </buildSpec>
        <natures>
                <nature>org.eclipse.jdt.core.javanature</nature>
        </natures>
        <linkedResources>
                <link>
                        <name>src</name>
                        <type>2</type>
                        <location>${PRI_SRC}</location>
                </link>
        </linkedResources>
</projectDescription>
EOF
DEPPROJS=`cat <<EOF | xsltproc - depend.xml
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
		version="1.0">
  <xsl:output method="text" indent="yes"/>

  <xsl:template match="/">
   <xsl:for-each select="//subproject[1]/depend" >
    <xsl:value-of select="concat('${2}',text())"/>
    <xsl:text>
    </xsl:text>
   </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
EOF
`
#echo DEPPROJS is $DEPPROJS
JARPATHS=`echo $3 | jarpaths $DEPPROJS`
DEPPROJS_XML=`echo $DEPPROJS | awk '{for(i=1;i<=NF;i++) 
print "<classpathentry combineaccessrules=\"false\" kind=\"src\" path=\"/" $(i) "\" />" }'`
cat <<EOF > ${PFX}classpath
<classpath>
  <classpathentry kind="src" path="src"/>
  <classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
  <classpathentry kind="output" path="=build/eclipse-bin"/>
  $DEPPROJS_XML
  $JARPATHS
</classpath>
EOF
# .settings dir
SETTINGS=${PFX}settings
DATE=`date`
mkdir -p $SETTINGS
cat <<EOF > $SETTINGS/org.eclipse.jdt.core.prefs 
# Autogenarated on ${DATE}
eclipse.preferences.version=1
org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.5
org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
org.eclipse.jdt.core.compiler.compliance=1.5
org.eclipse.jdt.core.compiler.debug.lineNumber=generate
org.eclipse.jdt.core.compiler.debug.localVariable=generate
org.eclipse.jdt.core.compiler.debug.sourceFile=generate
org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
org.eclipse.jdt.core.compiler.source=1.5
EOF

# arch-tag: fb085a54-0cfc-438e-bde3-09dc242f9fd5

