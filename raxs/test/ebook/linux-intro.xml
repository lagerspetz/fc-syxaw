<?xml version="1.0" encoding="utf-8" ?>
<!-- The HTML stylesheet and the linked images are for
 realism. RAXS should not lose these in syncs and other 
 data manglings! -->
<?xml-stylesheet type="text/xml" href="simple-docbook.xsl"?>
<book>
    <bookinfo>
        <title>Introduction to Linux</title>
        <subtitle>A Hands on Guide</subtitle>
        <authorgroup>
            <author>
                <firstname>Machtelt</firstname>
                <surname>Garrels</surname>
                <affiliation>
                    <orgname>Xalasys.com</orgname>
                    <address>
                        <email>tille wants no spam _at_ xalasys dot com</email>
                    </address>
                </affiliation>
            </author>
        </authorgroup>
        <edition>Version 1.21 20060314</edition>
        <pubdate>First published December 2002</pubdate>
        <copyright>
            <year>2002</year>
            <year>2003</year>
            <year>2004</year>
	    <year>2005</year>
	    <year>2006</year>
            <holder>Machtelt Garrels</holder>
        </copyright>
        <isbn>ISBN 90-808529-1-0</isbn>
        <keywordset>
            <keyword>Linux</keyword>
            <keyword>Beginners</keyword>
            <keyword>linux</keyword>
            <keyword>start</keyword>
            <keyword>Getting started</keyword>
            <keyword>guide</keyword>
            <keyword>Guide</keyword>
            <keyword>Exercises</keyword>
            <keyword>exercises</keyword>
        </keywordset>
    </bookinfo>
    <preface>
        <title>Introduction</title>
        <section id="intro_01">
            <title>Why this guide?</title>
            <para>Many people still believe that learning Linux is difficult, or that only experts
                can understand how a Linux system works. Though there is a lot of free documentation
                available, the documentation is widely scattered on the Web, and often confusing,
                since it is usually oriented toward experienced UNIX or Linux users. Today, thanks
                to the advancements in development, Linux has grown in popularity both at home and
                at work. The goal of this guide is to show people of all ages that Linux can be
                simple and fun, and used for all kinds of purposes.</para>

<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="images/blank.png" format="PNG"></imagedata>
</imageobject>
</mediaobject>
</informalfigure>
        </section>
        <section id="intro_02">
            <title>Who should read this book?</title>
            <para> This guide was created as an overview of the Linux Operating System, geared
                toward new users as an exploration tour and getting started guide, with exercises at
                the end of each chapter. For more advanced trainees it can be a desktop reference,
                and a collection of the base knowledge needed to proceed with system and network
                administration. This book contains many real life examples derived from the author's
                experience as a Linux system and network administrator, trainer and consultant. We
                hope these examples will help you to get a better understanding of the Linux system
                and that you feel encouraged to try out things on your own.</para>
            <para>Everybody who wants to get a <quote>CLUE</quote>, a Command Line User Experience,
                with Linux (and UNIX in general) will find this book useful.</para>

<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="images/blank.png" format="PNG"></imagedata>
</imageobject>
</mediaobject>
</informalfigure>
        </section>
        <section id="intro_03">
            <title>New versions and availability</title>
            <para>This document is published in the Guides section of the Linux Documentation
                Project collection at <ulink url="http://www.tldp.org/guides.html"></ulink>; you can also
                download PDF and PostScript formatted versions here.</para>
            <para>The most recent edition is available at<ulink url="training/tldp/"> http://tille.xalasys.com/training/tldp/</ulink>.</para>
<para>This guide is available in print from <ulink url="http://fultus.com/">Fultus.com Books</ulink> by Print On Demand.  Fultus <ulink url="http://store.fultus.com/product_info.php?products_id=65">distributes this document</ulink> to many bookstores, including Baker &amp; Taylor and the on-line bookstores <ulink url="http://amazon.com/">Amazon.com</ulink>, <ulink url="http://amazon.co.uk">Amazon.co.uk</ulink>, <ulink url="http://barnesandnoble.com/">BarnesAndNoble.com</ulink> and <ulink url="http://froogle.google.com/froogle?q=0974433934">Google's Froogle</ulink>.</para>
<figure><title>Introduction to Linux front cover</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/itl.jpg" format="JPG"></imagedata>
</imageobject>
<imageobject>
<imagedata fileref="images/itl.eps" format="EPS"></imagedata>
</imageobject>
<textobject>
<phrase>Front cover of the Intro to Linux guide, featuring a baby penguin that has just come out of the egg.</phrase>
</textobject>
</mediaobject>
</figure>

<para>The guide has been <ulink url="http://www.geocities.com/linuxparichay/">translated into Hindi</ulink> by:</para>
<itemizedlist> 
<listitem><para>Alok Kumar</para></listitem>
<listitem><para>Dhananjay Sharma</para></listitem>
<listitem><para>Kapil</para></listitem>
<listitem><para>Puneet Goel</para></listitem>
<listitem><para>Ravikant Yuyutsu</para></listitem>
</itemizedlist> 

<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="images/blank.png" format="PNG"></imagedata>
</imageobject>
</mediaobject>
</informalfigure>
        </section>
        <section id="intro_04">
            <title>Revision History</title>
            <para>
                <revhistory>
		<revision>
		<revnumber>1.21</revnumber>
		<date>2006-03-14</date>
		<authorinitials>MG</authorinitials>
		<revremark>Added exercises in chap11, corrected newline errors, command overview completed for chapter 9, minor corrections in chap10.</revremark>
		</revision>
		<revision>
		<revnumber>1.20</revnumber>
		<date>2006-01-06</date>
		<authorinitials>MG</authorinitials>
		<revremark>Split chap7: audio stuff is now in separate chapter, chap11.xml.  Small revisions, updates for commands like aptitude, more on USB storage, Internet telephony, corrections from readers.</revremark>
		</revision>
<revision>
<revnumber>1.19</revnumber>
<date>2005-09-07</date>
<authorinitials>MG</authorinitials>
<revremark>clarified file descriptors, exercises in chap3, corrected links, added more Debian refs, corrected language errors.</revremark>
</revision>
		    <revision>
		        <revnumber>1.18</revnumber>
			 <date>2005-05-23</date>
			 <authorinitials>MG</authorinitials>
			 <revremark>note about pagers, lots of clarifications, removed quite some RedHat-centric paragraphs, reviewed and updated lots in sound and video, removed xmms-mp3 stuff, added time zone info because I was just dealing with date and time, contrary to the title of the section, removed Mandrake refs.</revremark>
		    </revision>
		    <revision>
			<revnumber>1.17</revnumber>
			<date>2005-03-01</date>
                        <authorinitials>MG</authorinitials>
			<revremark>Lots of little details that were outdated, added several notes, removed tracer image, added info about new apps.</revremark>
		    </revision>
                    <revision>
                        <revnumber>1.16</revnumber>
                        <date>2004-12-06</date>
                        <authorinitials>MG</authorinitials>
                        <revremark>Changes because of domain move, minor corrections.</revremark>
		    </revision>
                    <revision>
                        <revnumber>1.15</revnumber>
                        <date>2004-07-09</date>
                        <authorinitials>MG</authorinitials>
                        <revremark>Added tracer image 1x1 pixel http://tille.xalasys.com/images/blank.png in each section and sect1, corrected wrong links in glossary, added textobjects for all images, made signal list and disk I/O problems list more clear.</revremark>
		    </revision>
		    <revision>
                        <revnumber>1.14</revnumber>
                        <date>2004-06-19</date>
                        <authorinitials>MG</authorinitials>
                        <revremark>Added tee command in chap5, corrected typos, acted upon remarks sent in by readers, added newgrp explanations, explained user private group scheme, added a remark on umask.</revremark>
		    </revision>
                    <revision>
                        <revnumber>1.13</revnumber>
                        <date>2004-04-27</date>
			<authorinitials>MG</authorinitials>
			<revremark>Last read-through before sending everything to Fultus for printout.  Added Fultus referrence in New Versions section, updated Conventions and Organization sections.  Minor changes in chapters 4, 5, 6 and 8, added rdesktop info in chapter 10, updated glossary, replaced references to fileutils with coreutils, thankyou to Hindi translators.</revremark>
		    </revision>
                    <revision>
                        <revnumber>1.12</revnumber>
                        <date>2004-03-13</date>
                        <authorinitials>MG</authorinitials>
                        <revremark>Added KAudioCreator, deleted outdated Xcdroast pic, note on running gnome apps in KDE and vv., added tvtime and mplayer links, added sections about signals and stopping/renicing processes.</revremark>
                    </revision>
                    <revision>
                        <revnumber>1.11</revnumber>
                        <date>2004-02-02</date>
                        <authorinitials>MG</authorinitials>
                        <revremark>Completed bookinfo with ISBN.  Tried indentation and formatting, but oxygen tool didn't recognize screen sections -&gt; had to roll back.</revremark>
                    </revision>
                    <revision>
                        <revnumber>1.10</revnumber>
                        <date>2004-01-06</date>
                        <authorinitials>MG</authorinitials>
                        <revremark>Changed encoding to UTF-8, rearranged revision history. Added a
                            lot of markup in the screen sections to better distinguish prompts from
                            commands; introduced warnings, cautions and tips.</revremark>
                    </revision>
                    <revision>
                        <revnumber>1.9</revnumber>
                        <date>2003-11-29</date>
                        <authorinitials>MG</authorinitials>
                        <revremark>Acted upon remarks from readers to clarify issues with compressed
                            files, removable media; found a couple more spelling errors, added an
                            extra example for cron and one for prompt settings; took out reference
                            to Acrobat Reader and stuffit, which are not Open Source (pointing to a
                            fancy flight simulator instead ;-) More on keyboard layout. Added RPM
                            example, added yum package manager.</revremark>
                    </revision>
                    <revision>
                        <revnumber>1.8</revnumber>
                        <date>2003-09-16</date>
                        <authorinitials>MG</authorinitials>
                        <revremark>Added app5, corrected some minor details.</revremark>
                    </revision>
                    <revision>
                        <revnumber>1.7</revnumber>
                        <date>2003-07-26</date>
                        <authorinitials>MG</authorinitials>
                        <revremark>Added RPM and apt-get examples, corrected issues with tar
                            incremental backup. Updated glossary and added links to sections within document.</revremark>
                    </revision>
                    <revision>
                        <revnumber>1.6</revnumber>
                        <date>2003-07-21</date>
                        <authorinitials>MG</authorinitials>
                        <revremark>Corrected details in chap 1 to 5, tried shorter lines in intro
                            and chap1 to make it easier on translators using CVS. See what this
                            gives: next update diffs should be more readable for these parts.</revremark>
                    </revision>
                    <revision>
                        <revnumber>1.5</revnumber>
                        <date>2003-06-17</date>
                        <authorinitials>MG</authorinitials>
                        <revremark>Redo of chapter 10 on Networking, left out some sections that
                            were too complicated.</revremark>
                    </revision>
                    <revision>
                        <revnumber>1.4</revnumber>
                        <date>2003-04-27</date>
                        <authorinitials>MG</authorinitials>
                        <revremark>Added sound and video playing, chat/conference; got rid of
                            redhat-config image and redhat printtool gui stuff; bash key
                            combinations in chap2; XML keycap tag on all key combinations, parameter
                            tag on arguments, guibutton tag for graphical buttons, menuchoice,
                            guimenu and guimenuitem tags for GUI menu selections; replaced pico with
                            ed, added piece about Linux in the office, replaced abiword image with
                            openoffice screenshot; added conventions and organization sections in
                            introduction; added konqueror screenshot in chap2; replaced
                            system-monitor screenshot in chap4 with something more up to date;
                            summary for chap2, checked exercises; added bash in app3 differing
                            features; License section is now only invariant section.</revremark>
                    </revision>
                    <revision>
                        <revnumber>1.3</revnumber>
                        <date>2003-03-26</date>
                        <authorinitials>MG</authorinitials>
                        <revremark>grep and escape characters; exporting variables; more consequent
                            about security issues; init and cron revised; window and desktop
                            managers explanation; removed some more too RedHat specific stuff; added
                            piece about (x)inetd; local authentication; text conversions and
                            encoding; graphical help, graphical file managers, note on internet
                            connections; spell check.</revremark>
                    </revision>
                    <revision>
                        <revnumber>1.2</revnumber>
                        <date>2003-02-28</date>
                        <authorinitials>MG</authorinitials>
                        <revremark>ps a bit better explained; more in getting started: --help,
                            whatis, apropos explained; more on find; chmod and umask still contained
                            a couple of errors and incompletenesses; resized images that were too
                            large to be printed; resized oversized text boxes for better print
                            quality; updated glossary.</revremark>
                    </revision>
                    <revision>
                        <revnumber>1.1</revnumber>
                        <date>2003-01-22</date>
                        <authorinitials>MG</authorinitials>
                        <revremark>Bug fixes; removed some more too RedHat specific stuff; corrected
                            minor errors; moved most recent version to decent URL; improved tar
                            section, added something about jar.</revremark>
                    </revision>
                    <revision>
                        <revnumber>1.0</revnumber>
                        <date>2002-12-29</date>
                        <authorinitials>MG</authorinitials>
                        <revremark>Initial release for TLDP</revremark>
                    </revision>
                </revhistory>
            </para>

<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="images/blank.png" format="PNG"></imagedata>
</imageobject>
</mediaobject>
</informalfigure>
        </section>
        <section id="intro_05">
            <title>Contributions</title>
            <para> Many thanks to all the people who shared their experiences. And especially to the
                Belgian Linux users for hearing me out every day and always
                being generous in their comments.</para>
            <para>Also a special thought for Tabatha Marshall for doing a really thorough revision,
                spell check and styling, and to Eugene Crosser for spotting the errors that we two
                looked over.</para>
            <para>And thanks to all the readers who notified me about missing topics and who helped
                to pick out the last errors, unclear definitions and typos by going through the
                trouble of mailing me all their remarks. These are also the people who help me keep
                this guide up to date, like Filipus Klutiero who did a complete review in 2005, and Alexey Eremenko who sent me the foundation for chapter 11.</para>
            <para>Finally, a big thank you for the volunteers who are currently translating this
                document in French, Swedish, German, Farsi, Hindi and more. It is a big work that should
                not be underestimated; I admire your courage.</para>

<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="images/blank.png" format="PNG"></imagedata>
</imageobject>
</mediaobject>
</informalfigure>
        </section>
        <section id="intro_06">
            <title>Feedback</title>
            <para> Missing information, missing links, missing characters? Mail it to the maintainer
                of this document: <address>
                    <email>tille wants no spam _at_ xalasys dot com</email>
                </address>
            </para>
            <para>Don't forget to check with the <ulink url="training/tldp/">latest version</ulink> first!</para>

<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="images/blank.png" format="PNG"></imagedata>
</imageobject>
</mediaobject>
</informalfigure>
        </section>
        <section id="intro_07">
            <title>Copyright information</title>
            <para>© 2002-2004 Machtelt Garrels.</para>
            <para> Permission is granted to copy, distribute and/or modify this document under the
                terms of the GNU Free Documentation License, Version 1.1 or any later version
                published by the Free Software Foundation; with the Invariant Sections being the
                    <quote>Copyright information</quote> and <quote>Feedback</quote> sections, with
                no Front-Cover Texts and no Back-Cover Texts. A copy of the license is included in
                    <xref linkend="app4"></xref> entitled <quote>GNU Free Documentation License</quote>.</para>
            <para>Read <ulink url="http://www.fsf.org/gnu/manifesto.html">The GNU Manifesto</ulink>
                if you want to know why this license was chosen for this book.</para>
            <para>The author and publisher have made every effort in the preparation of this book to
                ensure the accuracy of the information. However, the information contained in this
                book is offered without warranty, either express or implied. Neither the author nor
                the publisher nor any dealer or distributor will be held liable for any damages
                caused or alleged to be caused either directly or indirectly by this book.</para>
            <para>The logos, trademarks and symbols used in this book are the properties of their
                respective owners.</para>

<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="images/blank.png" format="PNG"></imagedata>
</imageobject>
</mediaobject>
</informalfigure>
        </section>
        <section id="intro_08">
            <title>What do you need?</title>
            <para>You will require a computer and a medium containing a Linux distribution. Most of
                this guide applies to all Linux distributions - and UNIX in general. Apart from
                time, there are no further specific requirements.</para>
            <para>The <ulink url="http://www.tldp.org/HOWTO/Installation-HOWTO/"> Installation
                HOWTO</ulink> contains helpful information on how to obtain Linux software and
                install it on your computer. Hardware requirements and coexistence with other
                operating systems are also discussed.</para>
            <para>CD images can be downloaded from <ulink url="http://www.linux-iso.com/">
                linux-iso.com</ulink> and many other locations, see <xref linkend="app1"></xref>.</para>
            <para>An interesting alternative for those who don't dare to take the step of an actual
                Linux installation on their machine are the Linux distributions that you can run
                from a CD, such as the <ulink url="http://www.knoppix.com/"> Knoppix</ulink> distribution.</para>

<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="images/blank.png" format="PNG"></imagedata>
</imageobject>
</mediaobject>
</informalfigure>
        </section>
        <section id="intro_09">
            <title>Conventions used in this document</title>
            <para>The following typographic and usage conventions occur in this text:</para>
            <table frame="all" id="conventions">
                <title>Typographic and usage conventions</title>
                <tgroup align="left" cols="2" colsep="1" rowsep="1">
                    <thead>
                        <row>
                            <entry>Text type</entry>
                            <entry>Meaning</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <quote>Quoted text</quote>
                            </entry>
                            <entry>Quotes from people, quoted computer output.</entry>
                        </row>
                        <row>
                            <entry>
                                <screen>terminal view</screen>
                            </entry>
                            <entry>Literal computer input and output captured from the terminal,
                                usually rendered with a light grey background.</entry>
                        </row>
                        <row>
                            <entry>
                                <command>command</command>
                            </entry>
                            <entry>Name of a command that can be entered on the command line.</entry>
                        </row>
                        <row>
                            <entry>
                                <varname>VARIABLE</varname>
                            </entry>
                            <entry>Name of a variable or pointer to content of a variable, as in <varname>$VARNAME</varname>.</entry>
                        </row>
                        <row>
                            <entry>
                                <option>option</option>
                            </entry>
                            <entry>Option to a command, as in <quote>the <option>-a</option> option
                                    to the <command>ls</command> command</quote>.</entry>
                        </row>
                        <row>
                            <entry>
                                <parameter>argument</parameter>
                            </entry>
                            <entry>Argument to a command, as in <quote>read <command>man <parameter>ls</parameter>
                                    </command>
                                </quote>.</entry>
                        </row>
                        <row>
                            <entry>
                                <prompt>prompt</prompt>
                            </entry>
                            <entry>
                                User prompt, usually followed by a command that you type in a terminal window, like in <prompt>hilda@home&gt;</prompt> <command>ls <option>-l</option></command>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <cmdsynopsis>
                                    <command>command <option>options</option>
                                        <parameter>arguments</parameter>
                                    </command>
                                </cmdsynopsis>
                            </entry>
                            <entry>Command synopsis or general usage, on a separated line.</entry>
                        </row>
                        <row>
                            <entry>
                                <filename>filename</filename>
                            </entry>
                            <entry>Name of a file or directory, for example <quote>Change to
                                    the <filename>/usr/bin</filename> directory.</quote>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <keycap>Key</keycap>
                            </entry>
                            <entry>Keys to hit on the keyboard, such as <quote>type
                                    <keycap>Q</keycap> to quit</quote>.</entry>
                        </row>
                        <row>
                            <entry>
                                <guibutton>Button</guibutton>
                            </entry>
                            <entry>Graphical button to click, like the <guibutton>OK</guibutton> button.</entry>
                        </row>
                        <row>
                            <entry>
                                <menuchoice>
                                    <guimenu>Menu</guimenu>
                                    <guimenuitem>Choice</guimenuitem>
                                </menuchoice>
                            </entry>
                            <entry>Choice to select from a graphical menu, for instance: <quote>Select<menuchoice>
                                        <guimenu>Help</guimenu>
                                        <guimenuitem>About Mozilla</guimenuitem>
                                    </menuchoice> in your browser.</quote>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <emphasis>Terminology</emphasis>
                            </entry>
                            <entry>Important term or concept: <quote>The Linux
                                    <emphasis>kernel</emphasis> is the heart of the system.</quote>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <screen>\</screen>
                            </entry>
                            <entry>The backslash in a terminal view or command synopsis indicates an
                                unfinished line. In other words, if you see a long command that is
                                cut into multiple lines, \ means <quote>Don't press
                                    <keycap>Enter</keycap> yet!</quote>
                            </entry>
                        </row>
                        <row>
                            <entry>See <xref linkend="chap_01"></xref>
                            </entry>
                            <entry>link to related subject within this guide.</entry>
                        </row>
                        <row>
                            <entry>
                                <ulink url="http://tille.xalasys.com">The author</ulink>
                            </entry>
                            <entry>Clickable link to an external web resource.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <para>The following images are used:</para>
            <note>
                <title>This is a note</title>
                <para>It contains additional information or remarks.</para>
            </note>
            <caution>
                <title>This is a caution</title>
                <para>It means be careful.</para>
            </caution>
            <warning>
                <title>This is a warning</title>
                <para>Be <emphasis>very</emphasis> careful.</para>
            </warning>
            <tip>
                <title>This is a tip</title>
                <para>Tips and tricks.</para>
            </tip>

<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="images/blank.png" format="PNG"></imagedata>
</imageobject>
</mediaobject>
</informalfigure>
        </section>
        <section id="intro_10">
            <title>Organization of this document</title>
            <para>This guide aims to be the foundation for all other materials that you can get from
                The Linux Documentation Project. As such, it provides you with the fundamental
                knowledge needed by anyone who wants to start working with a Linux system, while at
                the same time it tries to consciously avoid re-inventing the hot water. Thus, you
                can expect this book to be incomplete and full of links to sources of additional
                information on your system, on the Internet and in your system documentation.</para>
            <para>The first chapter is an introduction to the subject on Linux; the next two discuss
                absolute basic commands. Chapters 4 and 5 discuss some more advanced but still basic
                topics. Chapter 6 is needed for continuing with the rest, since it discusses editing
                files, an ability you need to pass from Linux newbie to Linux user. The following
                chapters discuss somewhat more advanced topics that you will have to deal with in
                everyday Linux use.</para>
            <para>All chapters come with exercises that will test your preparedness for the next chapter.</para>
            <itemizedlist>
                <listitem>
                    <para>
                        <xref linkend="chap_01"></xref>: What is Linux, how did it come into existence, advantages and disadvantages, what does the future hold for Linux, 
                        who should use it, installing your computer.</para>
                </listitem>
                <listitem>
                    <para>
                        <xref linkend="chap_02"></xref>: Getting started, connecting to the system, basic
                        commands, where to find help.</para>
                </listitem>
                <listitem>
                    <para>
                        <xref linkend="chap_03"></xref>: The filesystem, important files and directories,
                        managing files and directories, protecting your data.</para>
                </listitem>
                <listitem>
                    <para>
                        <xref linkend="chap_04"></xref>: Understanding and managing processes, boot and
                        shutdown procedures, postponing tasks, repetitive tasks.</para>
                </listitem>
                <listitem>
                    <para>
                        <xref linkend="chap_05"></xref>: What are standard input, output and error and how
                        are these features used from the command line.</para>
                </listitem>
                <listitem>
                    <para>
                        <xref linkend="chap_06"></xref>: Why you should learn to work with an editor,
                        discussion of the most common editors.</para>
                </listitem>
                <listitem>
                    <para>
                        <xref linkend="chap_07"></xref>: Configuring your graphical, text and audio
                        environment, settings for the non-native English speaking Linux user, tips
                        for adding extra software.</para>
                </listitem>
                <listitem>
                    <para>
                        <xref linkend="chap_08"></xref>: Converting files to a printable format, getting
                        them out of the printer, hints for solving print problems.</para>
                </listitem>
                <listitem>
                    <para>
                        <xref linkend="chap_09"></xref>: Preparing data to be backed up, discussion of
                        various tools, remote backup.</para>
                </listitem>
                <listitem>
                    <para>
                        <xref linkend="chap_10"></xref>: Overview of Linux networking tools and user
                        applications, with a short discussion of the underlying service daemon
                        programs and secure networking.</para>
                </listitem>
		<listitem>
		<para><xref linkend="chap_11"></xref>: Sound and video, including Voice over IP and sound recording is discussed in this chapter.</para></listitem>
                <listitem>
                    <para>
                        <xref linkend="app1"></xref>: Which books to read and sites to visit when you have
                        finished reading this one.</para>
                </listitem>
                <listitem>
                    <para>
                        <xref linkend="app2"></xref>: A comparison.</para>
                </listitem>
                <listitem>
                    <para>
                        <xref linkend="app3"></xref>: If you ever get stuck, these tables might be an
                        outcome. Also a good argument when your boss insists that YOU should use HIS
                        favorite shell.</para>
                </listitem>
                <listitem>
                    <para>
                        <xref linkend="app4"></xref>: What you can do with this guide, from the legal perspective.</para>
                </listitem>
		<listitem><para><xref linkend="app5"></xref>: documentation about the <filename>/proc</filename> file system.</para></listitem>
            </itemizedlist>

<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="images/blank.png" format="PNG"></imagedata>
</imageobject>
</mediaobject>
</informalfigure>
        </section>
    </preface>
    <toc></toc> 
<chapter id="chap_01"><title>What is Linux?</title>

<abstract>
<para>We will start with an overview of how Linux became the operating system 
it is today.  We will discuss past and future development and take a closer look
 at the advantages and disadvantages of this system.  We will talk about 
distributions, about Open Source in general and try to explain a little 
something about GNU.</para>
<para>This chapter answers questions like:</para>
<para>
<itemizedlist>
<listitem><para>What is Linux?
</para></listitem>
<listitem><para>Where and how did Linux start?
</para></listitem>
<listitem><para>Isn't Linux that system where everything is done in text mode?
</para></listitem>
<listitem><para>Does Linux have a future or is it just hype?
</para></listitem>
<listitem><para>What are the advantages of using Linux?
</para></listitem>
<listitem><para>What are the disadvantages?
</para></listitem>
<listitem><para>What kinds of Linux are there and how do I choose the one that 
fits me?
</para></listitem>
<listitem><para>What are the Open Source and GNU movements?
</para></listitem>
</itemizedlist>
</para>
</abstract>

<sect1 id="sect_01_01"> 
<title>History</title>

<sect2 id="sect_01_01_01"><title>UNIX</title>
<para>
In order to understand the popularity of Linux, we need to travel back in time, 
about 30 years ago...  
</para>
<para>Imagine computers as big as houses, even stadiums.  While the sizes of 
those computers posed substantial problems, there was one thing that made this 
even worse:  every computer had a different operating system.  Software was 
always customized to serve a specific purpose, and software for one given system
didn't run on another system.  Being able to work with one system didn't 
automatically mean that you could work with another.  It was difficult, both 
for the users and the system administrators.
</para>
<para>Computers were extremely expensive then, and sacrifices had to be made 
even after the original purchase just to get the users to understand how they 
worked.  The total cost per unit of computing power was enormous.
</para>
<para>Technologically the world was not quite that advanced, so they had to live
with the size for another decade.  In 1969, a team of developers in the Bell 
Labs laboratories started working on a solution for the software problem, to 
address these compatibility issues.  They developed a new operating system, 
which was
</para>
<orderedlist>
<listitem><para>Simple and elegant.
</para></listitem> 
<listitem><para>Written in the C programming language instead of in assembly 
code.
</para></listitem> 
<listitem><para>Able to recycle code.
</para></listitem> 
</orderedlist>

<para>The Bell Labs developers named their project <quote>UNIX.</quote></para>
<para>
The code recycling features were very important.  Until then, all commercially 
available computer systems were written in a code specifically developed for one
system.  UNIX on the other hand needed only a small piece of that special code, 
which is now commonly named the kernel.  This kernel is the only piece of code 
that needs to be adapted for every specific system and forms the base of the 
UNIX system.  The operating system and all other functions were built around 
this kernel and written in a higher programming language, C.  This language was 
especially developed for creating the UNIX system.  Using this new technique, it
was much easier to develop an operating system that could run on many different 
types of hardware.
</para>
<para>The software vendors were quick to adapt, since they could sell ten times 
more software almost effortlessly.  Weird new situations came in existence:  
imagine for instance computers from different vendors communicating in the same 
network, or users working on different systems without the need for extra 
education to use another computer.  UNIX did a great deal to help users become 
compatible with different systems.
</para>
<para>Throughout the next couple of decades the development of UNIX continued.  
More things became possible to do and more hardware and software vendors added 
support for UNIX to their products.
</para>
<para>UNIX was initially found only in very large environments with mainframes 
and minicomputers (note that a PC is a <quote>micro</quote> computer).  You had 
to work at a university, for the government or for large financial corporations 
in order to get your hands on a UNIX system.
</para>
<para>But smaller computers were being developed, and by the end of the 80's, 
many people had home computers.  By that time, there were several versions of 
UNIX available for the PC architecture, but none of them were truly free and more important: they were all terribly slow, so most people ran MS DOS or Windows 3.1 on their home PCs.
</para>
</sect2>

<sect2 id="sect_01_01_02"><title>Linus and Linux</title>
<para>By the beginning of the 90s home PCs were finally powerful enough to run a full blown UNIX.  Linus Torvalds, a young man studying computer science at the university of
Helsinki, thought it would be a good idea to have some sort of freely available 
academic version of UNIX, and promptly started to code.  
</para>
<para>He started to ask questions, looking for answers and solutions that would 
help him get UNIX on his PC.  Below is one of his first posts in comp.os.minix, 
dating from 1991:
</para>
<screen>
From: torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds)
Newsgroups: comp.os.minix
Subject: Gcc-1.40 and a posix-question
Message-ID: &lt;1991Jul3.100050.9886@klaava.Helsinki.FI&gt;
Date: 3 Jul 91 10:00:50 GMT
Hello netlanders,
Due to a project I'm working on (in minix), I'm interested in the posix
standard definition. Could somebody please point me to a (preferably)
machine-readable format of the latest posix rules? Ftp-sites would be
nice.
</screen>
<para>From the start, it was Linus' goal to have a free system that was 
completely compliant with the original UNIX.  That is why he asked for POSIX 
standards, POSIX still being the standard for UNIX.
</para>
<para>In those days plug-and-play wasn't invented yet, but so many people were 
interested in having a UNIX system of their own, that this was only a small 
obstacle.  New drivers became available for all kinds of new hardware, at a 
continuously rising speed.  Almost as soon as a new piece of hardware became 
available, someone bought it and submitted it to the Linux test, as the system 
was gradually being called, releasing more free code for an ever wider range of 
hardware.  These coders didn't stop at their PC's;  every piece of hardware they
could find was useful for Linux.</para>
<para>Back then, those people were called <quote>nerds</quote> or 
<quote>freaks</quote>, but it didn't matter to them, as long as the supported 
hardware list grew longer and longer.  Thanks to these people, Linux is now not 
only ideal to run on new PC's, but is also the system of choice for old and 
exotic hardware that would be useless if Linux didn't exist.
</para>
<para>Two years after Linus' post, there were 12000 Linux users.  The project, 
popular with hobbyists, grew steadily, all the while staying within the bounds 
of the POSIX standard.  All the features of UNIX were added over the next couple
of years, resulting in the mature operating system Linux has become today.  
Linux is a full UNIX clone, fit for use on workstations as well as on 
middle-range and high-end servers.  Today, a lot of the important players on the 
hard- and software market each have their team of Linux developers; at your 
local dealer's you can even buy pre-installed Linux systems with official 
support - eventhough there is still a lot of hard- and software that is not supported, too.
</para>
</sect2>

<sect2 id="sect_01_01_03">
<title>Current application of Linux systems</title>
<para>Today Linux has joined the desktop market.  Linux developers concentrated 
on networking and services in the beginning, and office applications have been 
the last barrier to be taken down.  We don't like to admit that Microsoft is 
ruling this market, so plenty of alternatives have been started over the last 
couple of years to make Linux an acceptable choice as a workstation, providing 
an easy user interface and MS compatible office applications like word 
processors, spreadsheets, presentations and the like.
</para>
<para>On the server side, Linux is well-known as a stable and reliable platform,
providing database and trading services for companies like Amazon, the 
well-known online bookshop, US Post Office, the German army and such.  
Especially Internet providers and Internet service providers have grown fond of 
Linux as firewall, proxy- and web server, and you will find a Linux box within 
reach of every UNIX system administrator who appreciates a comfortable 
management station.  Clusters of Linux machines are used in the creation of 
movies such as <quote>Titanic</quote>, <quote>Shrek</quote> and others.  In 
post offices, they are the nerve centers that route mail and in large search 
engine, clusters are used to perform internet searches.These are only a few of 
the thousands of heavy-duty jobs that Linux is performing day-to-day across the 
world.
</para>
<para>It is also worth to note that modern Linux not only runs on workstations, 
mid- and high-end servers, but also on <quote>gadgets</quote> like PDA's, 
mobiles, a shipload of embedded applications and even on experimental 
wristwatches.  This makes Linux the only operating system in the world covering 
such a wide range of hardware.</para>
</sect2>

</sect1>

<sect1 id="sect_01_02">
<title>The user interface</title>

<sect2 id="sect_01_02_01">
<title>Is Linux difficult?</title>
<para>Whether Linux is difficult to learn depends on the person you're asking.  
Experienced UNIX users will say no, because Linux is an ideal operating system 
for power-users and programmers, because it has been and is being developed by 
such people.
</para>
<para>Everything a good programmer can wish for is available: compilers, 
libraries, development and debugging tools.  These packages come with every 
standard Linux distribution.  The C-compiler is included for free - as opposed to many UNIX distributions demanding licensing fees for this tool.  All the 
documentation and manuals are there, and examples are often included to help you
get started in no time.  It feels like UNIX and switching between UNIX and 
Linux is a natural thing.
</para>
<para>In the early days of Linux, being an expert was kind of required to start 
using the system.  Those who mastered Linux felt better than the rest of the 
<quote>lusers</quote> who hadn't seen the light yet.  It was common practice to 
tell a beginning user to <quote>RTFM</quote> (read the manuals).  While the 
manuals were on every system, it was difficult to find the documentation, and 
even if someone did, explanations were in such technical terms that the new user
became easily discouraged from learning the system.
</para>
<para>The Linux-using community started to realize that if Linux was ever to be 
an important player on the operating system market, there had to be some serious
changes in the accessibility of the system.
</para>
</sect2>

<sect2 id="sect_01_02_02">
<title>Linux for non-experienced users</title>
<para>Companies such as RedHat, SuSE and Mandriva have sprung up, providing 
packaged Linux distributions suitable for mass consumption.  They integrated a 
great deal of graphical user interfaces (GUIs), developed by the community, in 
order to ease management of programs and services.  As a Linux user today you 
have all the means of getting to know your system inside out, but it is no 
longer necessary to have that knowledge in order to make the system comply to 
your requests.
</para>
<para>Nowadays you can log in graphically and start all required applications 
without even having to type a single character, while you still have the ability
to access the core of the system if needed.  Because of its structure, Linux 
allows a user to grow into the system: it equally fits new and experienced 
users.  New users are not forced to do difficult things, while experienced users
are not forced to work in the same way they did when they first started learning
Linux.
</para>
<para>While development in the service area continues, great things are being 
done for desktop users, generally considered as the group least likely to know 
how a system works.  Developers of desktop applications are making incredible 
efforts to make the most beautiful desktops you've ever seen, or to make your 
Linux machine look just like your former MS Windows or MacIntosh workstation.  
The latest developments also include 3D acceleration support and support for USB
devices, single-click updates of system and packages, and so on.  Linux has 
these, and tries to present all available services in a logical form that 
ordinary people can understand.  Below is a short list containing some great 
examples; these sites have a lot of screenshots that will give you a glimpse of 
what Linux on the desktop can be like:
</para>
<itemizedlist>
<listitem><para><ulink url="http://www.gnome.org"></ulink>
</para></listitem>
<listitem><para><ulink url="http://kde.org/screenshots/"></ulink>
</para></listitem>
<listitem><para><ulink url="http://www.openoffice.org"></ulink>
</para></listitem>
<listitem><para><ulink url="http://www.mozilla.org"></ulink></para></listitem>
</itemizedlist>
</sect2>

</sect1>

<sect1 id="sect_01_03"><title>Does Linux have a future?</title>
<sect2 id="sect_01_03_01"><title>Open Source</title>
<para>The idea behind Open Source software is rather simple: when programmers 
can read, distribute and change code, the code will mature.  People can adapt 
it, fix it, debug it, and they can do it at a speed that dwarfs the performance 
of software developers at conventional companies.  This software will be more 
flexible and of a better quality than software that has been developed using 
the conventional channels, because more people have tested it in more different 
conditions than the closed software developer ever can.
</para>
<para>The Open Source initiative started to make this clear to the commercial 
world, and very slowly, commercial vendors are starting to see the point.  While
lots of academics and technical people have already been convinced for 20 years 
now that this is the way to go, commercial vendors needed applications like the 
Internet to make them realize they can profit from Open Source.  Now Linux has 
grown past the stage where it was almost exclusively an academic system, useful 
only to a handful of people with a technical background.  Now Linux provides 
more than the operating system: there is an entire infrastructure supporting the
chain of effort of creating an operating system, of making and testing programs 
for it, of bringing everything to the users, of supplying maintenance, updates 
and support and customizations, etcetera.  Today, Linux is ready to accept the 
challenge of a fast-changing world.
</para>
</sect2>

<sect2 id="sect_01_03_02"><title>Ten years of experience at your service</title>
<para>While Linux is probably the most well-known Open Source initiative, there 
is another project that contributed enormously to the popularity of the Linux 
operating system.  This project is called SAMBA, and its achievement is the 
reverse engineering of the Server Message Block (SMB)/Common Internet File 
System (CIFS) protocol used for file- and print-serving on PC-related machines, 
natively supported by MS Windows NT and OS/2, and Linux.  Packages are now 
available for almost every system and provide interconnection solutions in mixed
environments using MS Windows protocols: Windows-compatible (up to and includingWinXP) file- and print-servers.
</para>
<para>Maybe even more successful than the SAMBA project is the Apache HTTP 
server project.  The server runs on UNIX, Windows NT and many other operating 
systems.  Originally known as <quote>A PAtCHy server</quote>, based on existing 
code and a series of <quote>patch files</quote>, the name for the matured code 
deserves to be connoted with the native American tribe of the Apache, well-known
for their superior skills in warfare strategy and inexhaustible endurance.  
Apache has been shown to be substantially faster, more stable and more 
feature-full than many other web servers.  Apache is run on sites that get 
millions of visitors per day, and while no official support is provided by the 
developers, the Apache user community provides answers to all your questions.  
Commercial support is now being provided by a number of third parties.
</para>
<para>In the category of office applications, a choice of MS Office suite clones
is available, ranging from partial to full implementations of the applications 
available on MS Windows workstations.  These initiatives helped a great deal to 
make Linux acceptable for the desktop market, because the users don't need extra
training to learn how to work with new systems.  With the desktop comes the 
praise of the common users, and not only their praise, but also their specific 
requirements, which are growing more intricate and demanding by the day.
</para>
<para>The Open Source community, consisting largely of people who have been 
contributing for over half a decade, assures Linux' position as an important 
player on the desktop market as well as in general IT application.  Paid 
employees and volunteers alike are working diligently so that Linux can maintain
a position in the market.  The more users, the more questions.  The Open Source 
community makes sure answers keep coming, and watches the quality of the answers
with a suspicious eye, resulting in ever more stability and accessibility.
</para>
<para>Listing all the available Linux software is beyond the scope of this 
guide, as there are tens of thousands of packages.  Throughout this course we 
will present you with the most common packages, which are almost all freely 
available.  In order to take away some of the fear of the beginning user, here's
a screenshot of one of your most-wanted programs.  You can see for yourself that
no effort has been spared to make users who are switching from Windows feel at 
home:
</para>

<figure><title>OpenOffice MS-compatible Spreadsheet</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/openoffice.png" format="PNG"></imagedata>
</imageobject>
<imageobject>
<imagedata fileref="images/openoffice.eps" format="EPS"></imagedata>
</imageobject>
<textobject>
<phrase>OpenOffice spreadsheet looks just like MS Office .xls file.</phrase>
</textobject>
</mediaobject>
</figure>
</sect2>

</sect1>

<sect1 id="sect_01_04"><title>Properties of Linux</title>

<sect2 id="sect_01_04_01"><title>Linux Pros</title>

<para>A lot of the advantages of Linux are a consequence of Linux' origins, 
deeply rooted in UNIX, except for the first advantage, of course:
</para>

<itemizedlist>
	<listitem>
	<para>Linux is free:</para>
<para>As in free beer, they say.  If you want to spend absolutely nothing, you 
don't even have to pay the price of a CD.  Linux can be downloaded in its 
entirety from the Internet completely for free.  No registration fees, no costs 
per user, free updates, and freely available source code in case you want to 
change the behavior of your system.
</para>
<para>Most of all, Linux is free as in free speech:</para>
<para>The license commonly used is the GNU Public License (GPL).  The license 
says that anybody who may want to do so, has the right to change Linux and 
eventually to redistribute a changed version, on the one condition that the code
is still available after redistribution.  In practice, you are free to grab a 
kernel image, for instance to add support for teletransportation machines or 
time travel and sell your new code, as long as your customers can still have a 
copy of that code.
</para>
	</listitem>
	<listitem>
	<para>Linux is portable to any hardware platform:</para>
<para>A vendor who wants to sell a new type of computer and who doesn't know 
what kind of OS his new machine will run (say the CPU in your car or washing 
machine), can take a Linux kernel and make it work on his hardware, because 
documentation related to this activity is freely available.
</para>
	</listitem>
	<listitem>
	<para>Linux was made to keep on running:</para>
<para>As with UNIX, a Linux system expects to run without rebooting all the 
time.  That is why a lot of tasks are being executed at night or scheduled 
automatically for other calm moments, resulting in higher availability during 
busier periods and a more balanced use of the hardware.  This property allows 
for Linux to be applicable also in environments where people don't have the time
or the possibility to control their systems night and day.
</para>
	</listitem>
	<listitem>
	<para>Linux is secure and versatile:</para>
<para>The security model used in Linux is based on the UNIX idea of security, 
which is known to be robust and of proven quality.  But Linux is not only fit 
for use as a fort against enemy attacks from the Internet:  it will adapt 
equally to other situations, utilizing the same high standards for security.  
Your development machine or control station will be as secure as your firewall.
</para> 
	</listitem>
	<listitem>
	<para>Linux is scalable:</para>
<para>From a Palmtop with 2 MB of memory to a petabyte storage cluster with 
hundreds of nodes: add or remove the appropriate packages and Linux fits all.  
You don't need a supercomputer anymore, because you can use Linux to do big 
things using the building blocks provided with the system.  If you want to do 
little things, such as making an operating system for an embedded processor or 
just recycling your old 486, Linux will do that as well.
</para>
	</listitem>
        <listitem>
        <para>The Linux OS and quite some Linux applications have very short debug-times:
</para>
<para>Because Linux has been developed and tested by thousands of people, both 
errors and people to fix them are usually found rather quickly.  It sometimes happens that 
there are only a couple of hours between discovery and fixing of a bug.  
</para>
	</listitem>	
</itemizedlist>
</sect2>

<sect2 id="sect_01_04_02"><title>Linux Cons</title>

<itemizedlist>
	<listitem>
	<para>There are far too many different distributions:</para>
<para>"Quot capites, tot rationes", as the Romans already said:  the more 
people, the more opinions.  At first glance, the amount of Linux distributions 
can be frightening, or ridiculous, depending on your point of view.  But it also
means that everyone will find what he or she needs.  You don't need to be an 
expert to find a suitable release.
</para>
<para>When asked, generally every Linux user will say that the best distribution
is the specific version he is using.  So which one should you choose?  Don't 
worry too much about that: all releases contain more or less the same set of 
basic packages.  On top of the basics, special third party software is added 
making, for example, TurboLinux more suitable for the small and medium 
enterprise, RedHat for servers and SuSE for workstations.  However, the 
differences are likely to be very superficial.  The best strategy is to test a 
couple of distributions; unfortunately not everybody has the time for this.  
Luckily, there is plenty of advice on the subject of choosing your Linux.  
A quick search on <ulink url="http://www.google.com/linux">Google</ulink>, using the keywords <quote>choosing your distribution</quote> brings up tens of
links to good advise.  
The <ulink url="http://www.tldp.org/HOWTO/Installation-HOWTO/">
Installation HOWTO</ulink> also discusses choosing your distribution.
</para>
	</listitem>
	<listitem>
	<para>Linux is not very user friendly and confusing for beginners:
</para>
<para>
It must be said that Linux, at least the core system, is less userfriendly to use than MS Windows and certainly more difficult than MacOS, but...  
In light of its popularity, considerable effort has been made to make Linux 
even easier to use, especially for new users. More information is being released
daily, such as this guide, to help fill the gap for documentation available to
users at all levels.
</para>
	</listitem>
	<listitem>
        <para>Is an Open Source product trustworthy?</para>
<para>How can something that is free also be reliable?  Linux users have the 
choice whether to use Linux or not, which gives them an enormous advantage 
compared to users of proprietary software, who don't have that kind of freedom. 
After long periods of testing, most Linux users come to the conclusion that 
Linux is not only as good, but in many cases better and faster that the 
traditional solutions.  If Linux were not trustworthy, it would have been long 
gone, never knowing the popularity it has now, with millions of users.  Now 
users can influence their systems and share their remarks with the community, 
so the system gets better and better every day.  It is a project that is never 
finished, that is true, but in an ever changing environment, Linux is also a 
project that continues to strive for perfection.
</para>
        </listitem>
</itemizedlist>
</sect2>

</sect1>

<sect1 id="sect_01_05"><title>Linux Flavors</title>
<sect2 id="sect_01_05_01"><title>Linux and GNU</title>

<para>
Although there are a large number of Linux implementations, you will find a lot 
of similarities in the different distributions, if only because every Linux 
machine is a box with building blocks that you may put together following your 
own needs and views.  Installing the system is only the beginning of a longterm 
relationship.  Just when you think you have a nice running system, Linux will 
stimulate your imagination and creativeness, and the more you realize what 
power the system can give you, the more you will try to redefine its limits. 
</para>
<para>Linux may appear different depending on the distribution, your hardware 
and personal taste, but the fundamentals on which all graphical and other 
interfaces are built, remain the same.  The Linux system is based on GNU tools 
(Gnu's Not UNIX), which provide a set of standard ways to handle and use the 
system.  All GNU tools are open source, so they can be installed on any system. 
Most distributions offer pre-compiled packages of most common tools, such as RPM
packages on RedHat and Debian packages (also called deb or dpkg) on Debian, so you needn't be a programmer 
to install a package on your system.  However, if you are and like doing things 
yourself, you will enjoy Linux all the better, since most distributions come 
with a complete set of development tools, allowing installation of new software 
purely from source code.  This setup also allows you to install software even if
it does not exist in a pre-packaged form suitable for your system.
</para> 
<para>A list of common GNU software:</para>
<itemizedlist>
<listitem><para>Bash: The GNU shell
</para></listitem>
<listitem><para>GCC: The GNU C Compiler
</para></listitem>
<listitem><para>GDB: The GNU Debugger
</para></listitem>
<listitem><para>coreutils: a set of basic UNIX-style utilities, such as <command>ls</command>, <command>cat</command> and <command>chmod</command></para></listitem>
<listitem><para>Findutils: to search and find files
</para></listitem>
<listitem><para>Fontutils: to convert fonts from one format to another or make 
new fonts
</para></listitem>
<listitem><para>The Gimp: GNU Image Manipulation Program
</para></listitem>
<listitem><para>Gnome: the GNU desktop environment
</para></listitem>
<listitem><para>Emacs: a very powerful editor
</para></listitem>
<listitem><para>Ghostscript and Ghostview: interpreter and graphical frontend 
for PostScript files.
</para></listitem>
<listitem><para>GNU Photo: software for interaction with digital cameras
</para></listitem>
<listitem><para>Octave: a programming language, primarily intended to perform numerical computations and image processing.
</para></listitem>
<listitem><para>GNU SQL: relational database system
</para></listitem>
<listitem><para>Radius: a remote authentication and accounting server
</para></listitem>
<listitem><para>...
</para></listitem>
</itemizedlist>
<para>Many commercial applications are available for Linux, and for more 
information about these packages we refer to their specific documentation.  
Throughout this guide we will only discuss freely available software, which 
comes (in most cases) with a GNU license.
</para>
<para>To install missing or new packages, you will need some form of software 
management.  The most common implementations include RPM, dpkg and Ximian Red 
Carpet.  RPM is the RedHat Package Manager, which is used on a variety of Linux 
systems, eventhough the name does not suggest this.  Dpkg is the Debian package 
management system, which uses an interface called <command>apt-get</command>, 
that can manage RPM packages as well.  Ximian Red Carpet is a third party 
implementation of RPM with a graphical front-end.  Other third party software 
vendors may have their own installation procedures, sometimes resembling the 
InstallShield and such, as known on MS Windows and other platforms.  As you 
advance into Linux, you will likely get in touch with one or more of these 
programs.
</para>
</sect2>
<sect2 id="sect_01_05_02"><title>GNU/Linux</title>
<para>The Linux kernel (the <emphasis>bones</emphasis> of your system, see 
<xref linkend="sect_03_02_03_01"></xref>) is not part of the GNU project but uses the
same license as GNU software.  A great majority of utilities and development 
tools (the <emphasis>meat</emphasis> of your system), which are not 
Linux-specific, are taken from the GNU project.  Because any usable system must 
contain both the kernel and at least a minimal set of utilities, some people 
argue that such a system should be called a <emphasis>GNU/Linux</emphasis> 
system.
</para>
<para>In order to obtain the highest possible degree of independence between 
distributions, this is the sort of Linux that we will discuss throughout this 
course.  If we are not talking about a GNU/Linux system, the specific 
distribution, version or program name will be mentioned.
</para>
</sect2>
<sect2 id="sect_01_05_03"><title>Which distribution should I install?</title>
<para>Prior to installation, the most important factor is your hardware.  Since 
every Linux distribution contains the basic packages and can be built to meet 
almost any requirement (because they all use the Linux kernel), you only need to
consider if the distribution will run on your hardware.  LinuxPPC for example 
has been made to run on MacIntosh and other PowerPCs and does not run on an 
ordinary x86 based PC.  LinuxPPC does run on the new Macs, but you can't use it 
for some of the older ones with ancient bus technology.  Another tricky case is 
Sun hardware, which could be an old SPARC CPU or a newer UltraSparc, both 
requiring different versions of Linux.</para>
<para>Some Linux distributions are optimized for certain processors, such as 
Athlon CPUs, while they will at the same time run decent enough on the standard 
486, 586 and 686 Intel processors.  Sometimes distributions for special CPUs 
are not as reliable, since they are tested by fewer people.
</para>
<para>Most Linux distributions offer a set of programs for generic PCs with 
special packages containing optimized kernels for the x86 Intel based CPUs.  
These distributions are well-tested and maintained on a regular basis, focusing 
on reliant server implementation and easy installation and update procedures.  
Examples are Debian, Ubuntu, Fedora, SuSE and Mandriva, which are by far the most popular Linux 
systems and generally considered easy to handle for the beginning user, while 
not blocking professionals from getting the most out of their Linux machines.  
Linux also runs decently on laptops and middle-range servers.  Drivers for new 
hardware are included only after extensive testing, which adds to the stability 
of a system.</para>
<para>While the standard desktop might be Gnome on one system, another might 
offer KDE by default.  Generally, both Gnome and KDE are available for all major Linux distributions.   Other window and desktop managers are available for more advanced users.</para>
<para>The standard installation process allows users to choose between different basic
setups, such as a workstation, where all packages needed for everyday use and 
development are installed, or a server installation, where different network 
services can be selected.  Expert users can install every combination of 
packages they want during the initial installation process.
</para>
<para>The goal of this guide is to apply to all Linux distributions.  For your 
own convenience, however, it is strongly advised that beginners stick to a 
mainstream distribution, supporting all common hardware and applications by 
default.  The following are very good choices for novices:
</para>
<itemizedlist>
<listitem><para><ulink url="http://fedora.redhat.com">Fedora Core</ulink>
</para></listitem>
<listitem><para><ulink url="http://www.debian.org">Debian</ulink>
</para></listitem>
<listitem><para><ulink url="http://www.suse.de">SuSE Linux</ulink>
</para></listitem>
<listitem><para><ulink url="http://www.mandrake.com">Mandriva (former MandrakeSoft)</ulink>
</para></listitem>
<listitem><para><ulink url="http://www.knoppix.com">Knoppix</ulink>: an 
operating system that runs from your CD-ROM, you don't need to install anything.
</para></listitem>
</itemizedlist>
<para>Downloadable ISO-images can be obtained from <ulink url="http://www.linuxiso.org">LinuxISO.org</ulink>.  The main distributions can be purchased in any decent computer shop.
</para>
</sect2>

</sect1>

<sect1 id="sect_01_06"><title>Summary</title>
<para>In this chapter, we learned that:</para>
<itemizedlist>
<listitem><para>Linux is an implementation of UNIX.
</para></listitem>
<listitem><para>The Linux operating system is written in the C programming 
language.
</para></listitem>
<listitem><para><quote>De gustibus et coloribus non disputandum est</quote>: there's a Linux 
for everyone.
</para></listitem>
<listitem><para>Linux uses GNU tools, a set of freely available standard tools 
for handling the operating system.
</para></listitem>
</itemizedlist>

</sect1>

<sect1 id="sect_01_07"><title>Exercises</title>
<para>
A practical exercise for starters: install Linux on your PC.  Read the 
installation manual for your distribution and/or the Installation HOWTO and do 
it.</para>

<note>
<title>Read the docs!</title>
<para>
Most errors stem from not reading the information provided during the install.  
Reading the installation messages carefully is the first step on the road to 
success.
</para>
</note>

<para>Things you must know BEFORE starting a Linux installation:
</para>
<itemizedlist>
<listitem><para>Will this distribution run on my hardware?</para>
<para>Check with 
<ulink url="http://www.tldp.org/HOWTO/Hardware-HOWTO/index.html">
http://www.tldp.org/HOWTO/Hardware-HOWTO/index.html</ulink> when in doubt
about compatibility of your hardware.
</para>
</listitem>
<listitem><para>What kind of keyboard do I have (number of keys, layout)?  What 
kind of mouse (serial/parallel, number of buttons)?  How many MB of RAM?
</para></listitem>
<listitem><para>Will I install a basic workstation or a server, or will I need 
to select specific packages myself?
</para></listitem>
<listitem><para>Will I install from my hard disk, from a CD-ROM, or using the 
network?  Should I adapt the BIOS for any of this?  Does the installation method
require a boot disk?
</para></listitem>
<listitem><para>Will Linux be the only system on this computer, or will it be a 
dual boot installation?  Should I make a large partition in order to install 
virtual systems later on, or is this a virtual installation itself?
</para></listitem>
<listitem><para>Is this computer in a network?  What is its hostname, IP 
address?  Are there any gateway servers or other important networked machines 
my box should communicate with?
</para>

<caution><title>Linux expects to be networked</title>
<para>Not using the network or configuring it incorrectly may result in slow 
startup.
</para>
</caution>

</listitem>
<listitem><para>Is this computer a gateway/router/firewall?  (If you have to 
think about this question, it probably isn't.)
</para></listitem>
<listitem><para>Partitioning: let the installation program do it for you this 
time, we will discuss partitions in detail in <xref linkend="chap_03"></xref>.  There
is system-specific documentation available if you want to know everything about 
it.  If your Linux distribution does not offer default partitioning, that probably means it is not suited for beginners.
</para></listitem>
<listitem><para>Will this machine start up in text mode or in graphical mode?
</para></listitem>
<listitem><para>Think of a good password for the administrator of this machine 
(root).  Create a non-root user account (non-privileged access to the system).
</para></listitem>
<listitem><para>Do I need a rescue disk?  (recommended)
</para></listitem>
<listitem><para>Which languages do I want?
</para></listitem>
</itemizedlist>
<para>The full checklist can be found at 
<ulink url="http://www.tldp.org/HOWTO/Installation-HOWTO/index.html">
http://www.tldp.org/HOWTO/Installation-HOWTO/index.html</ulink>.
</para>
<para>In the following chapters we will find out if the installation has been 
successful.
</para>

</sect1>
</chapter>
 
<chapter id="chap_02"><title>Quickstart</title>
<abstract>
<para>In order to get the most out of this guide, we will immediately start with
a practical chapter on connecting to the Linux system and doing some basic 
things.
</para>
<para>We will discuss:</para>
<para>
<itemizedlist>
<listitem><para>Connecting to the system
</para></listitem>
<listitem><para>Disconnecting from the system
</para></listitem>
<listitem><para>Text and graphic mode
</para></listitem>
<listitem><para>Changing your password
</para></listitem>
<listitem><para>Navigating through the file system
</para></listitem>
<listitem><para>Determining file type
</para></listitem>
<listitem><para>Looking at text files
</para></listitem>
<listitem><para>Finding help
</para></listitem>
</itemizedlist>
</para>

</abstract>
<sect1 id="sect_02_01"><title>Logging in, activating the user interface and 
logging out</title>
<sect2 id="sect_02_01_01"><title>Introduction</title>
<para>In order to work on a Linux system directly, you will need to provide a 
user name and password.  You always need to authenticate to the system.  As we 
already mentioned in the exercise from <xref linkend="chap_01"></xref>, most PC-based
Linux systems have two basic modes for a system to run in: either quick and 
sober in text console mode, which looks like DOS with mouse, multitasking and 
multi-user features, or in graphical mode, which looks better but eats 
more system resources.
</para>
</sect2>
<sect2 id="sect_02_01_02"><title>Graphical mode</title>
<para>This is the default nowadays on most desktop computers.  You know you will connect to the system using graphical mode when you are first asked for your user name, and then, in a new window, to type your password.</para>
<para>To log in, make sure the mouse pointer is in the login window, provide your user name and password to the system and click <guibutton>OK</guibutton> or press <keycap>Enter</keycap>.</para>
<warning><title>Careful with that root account!</title>
<para>It is generally considered a bad idea to connect (graphically) using the <emphasis>root</emphasis> user name, the system adminstrator's account, since the use of graphics includes running a lot of extra programs, in root's case with a lot of extra permissions.  To keep all risks as low as possible, use a normal user account to connect graphically.  But there are enough risks to keep this in mind as a general advice, for all use of the root account: only log in as root when extra privileges are required.</para>
</warning>
<para>After entering your user name/password combination, it can take a little while before the graphical environment is started, depending on the CPU speed of your computer, on the software you use and on your personal settings.</para>
<para>To continue, you will need to open a <emphasis>terminal window</emphasis> or <emphasis>xterm</emphasis> for short (X being the name for the underlying software supporting the graphical environment).  This program can be found in the <menuchoice><guimenu>Applications</guimenu><guimenuitem>Utilities</guimenuitem></menuchoice>, <menuchoice><guimenuitem>System Tools</guimenuitem></menuchoice> or <menuchoice><guimenuitem>Internet</guimenuitem></menuchoice> menu, depending on what window manager you are using.  There might be icons that you can use as a shortcut to get an xterm window as well, and clicking the right mouse button on the desktop background will usually present you with a menu containing a terminal window application.</para>
<para>While browsing the menus, you will notice that a lot of things can be done without entering commands via the keyboard.  For most users, the good old point-'n'-click method of dealing with the computer will do.  But this guide is for future network and system administrators, who will need to meddle with the heart of the system.  They need a stronger tool than a mouse to handle all the tasks they will face.  This tool is the shell, and when in graphical mode, we activate our shell by opening a terminal window.</para>
<para>The terminal window is your control panel for the system.  Almost everything that follows is done using this simple but powerful text tool.  A terminal window should always show a command prompt when you open one.  This terminal shows a standard prompt, which displays the user's login name, and the current working directory, represented by the twiddle (<filename>~</filename>):</para>
<figure><title>Terminal window</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/xterm.eps" format="EPS"></imagedata>
</imageobject>
<imageobject>
<imagedata fileref="images/xterm.png" format="PNG"></imagedata>
</imageobject>
<textobject>
<phrase>X terminal window when just opened displays a prompt.</phrase>
</textobject>
</mediaobject>
</figure>
<para>Another common form for a prompt is this one:</para>
<screen>
<prompt>[user@host dir]</prompt>
</screen>
<para>In the above example, <emphasis>user</emphasis> will be your login name, <emphasis>hosts</emphasis> the name of the machine you are working on, and <emphasis>dir</emphasis> an indication of your current location in the file system.</para>
<para>Later we will discuss prompts and their behavior in detail.  For now, it suffices to know that prompts can display all kinds of information, but that they are not part of the commands you are giving to your system.</para>
<para>To disconnect from the system in graphical mode, you need to close all terminal windows and other applications.  After that, hit the logout icon or find <menuchoice><guimenuitem>Log Out</guimenuitem></menuchoice> in the menu.  Closing everything is not really necessary, and the system can do this for you, but session management might put all currently open applications back on your screen when you connect again, which takes longer and is not always the desired effect.  However, this behavior is configurable.</para>
<para>When you see the login screen again, asking to enter user name and password, logout was successful.</para>
</sect2>

<sect2 id="sect_02_01_03"><title>Text mode</title>
<para>You know you're in text mode when the whole screen is black, showing (in most cases white) characters.  A text mode login screen typically shows some information about the machine you are working on, the name of the machine and a prompt waiting for you to log in:</para>

<screen>

RedHat Linux Release 8.0 (Psyche)

blast login: _




</screen>
<para>The login is different from a graphical login, in that you have to hit the <keycap>Enter</keycap> key after providing your user name, because there are no buttons on the screen that you can click with the mouse.  Then you should type your password, followed by another <keycap>Enter</keycap>.  You won't see any indication that you are entering something, not even an asterisk, and you won't see the cursor move.  But this is normal on Linux and is done for security reasons.</para>
<para>When the system has accepted you as a valid user, you may get some more information, called the <emphasis>message of the day</emphasis>, which can be anything.  Additionally, it is popular on UNIX systems to display a fortune cookie, which contains some general wise or unwise (this is up to you) thoughts.  After that, you will be given a shell, indicated with the same prompt that you would get in graphical mode.</para>
<warning><title>Don't log in as root</title>
<para>Also in text mode: log in as root only to do setup and configuration that absolutely requires administrator privileges, such as adding users, installing software packages, and performing network and other system configuration.  Once you are finished, immediately leave the special account and resume your work as a non-privileged user.</para>
</warning>

<para>Logging out is done by entering the <command>logout</command> command, followed by <keycap>Enter</keycap>.  You are successfully disconnected from the system when you see the login screen again.</para>
<caution><title>Don't hit the power button!</title>
<para>Don't power-off the computer after logging out.  It is not meant to be shut off without application of the proper procedures for halting the system.  Powering it off without going through the halting process might cause severe damage!  For now, use the <menuchoice><guimenu>Shut down</guimenu></menuchoice> option when you log out from the graphical interface, or, when on the login screen (where you have to give your user name and password) look around for a shutdown button.</para></caution>
<para>Now that we know how to connect to and disconnect from the system, we're ready for our first commands.</para>
</sect2>

</sect1>

<sect1 id="sect_02_02"><title>Absolute basics</title>
<sect2 id="sect_02_02_01"><title>The commands</title>
<para>These are the quickies, which we need to get started; we will discuss them later in more detail.</para>
<table frame="all" id="tab_02_01">
<title>Quickstart commands</title>
<tgroup align="left" cols="2" colsep="1" rowsep="1">
<thead>
<row>
<entry>Command</entry>
<entry>Meaning</entry>
</row>
</thead>

<tbody>

<row>
<entry><command>ls</command></entry>
<entry><para>Displays a list of files in the current working directory, like the <command>dir</command> command in DOS</para></entry>
</row>

<row>
<entry><command>cd <filename>directory</filename></command></entry>
<entry><para>change directories</para></entry>
</row>

<row>
<entry><command>passwd</command></entry>
<entry>change the password for the current user</entry>
</row>   

<row>
<entry><command>file <filename>filename</filename></command></entry>
<entry>display file type of file with name <filename>filename</filename></entry>
</row>
<row>
<entry><command>cat <filename>textfile</filename></command></entry>
<entry>throws content of <filename>textfile</filename> on the screen</entry>
</row>
<row><entry><command>pwd</command></entry>
<entry>display present working directory</entry>
</row>
<row>
<entry><command>exit</command> or <command>logout</command></entry>
<entry>leave this session</entry>
</row>   
<row>
<entry><command>man <parameter>command</parameter></command></entry>
<entry>read man pages on <command>command</command></entry>
</row>
<row>
<entry><command>info <parameter>command</parameter></command></entry>
<entry>read Info pages on <command>command</command></entry>
</row>
<row>
<entry><command>apropos <parameter>string</parameter></command></entry>
<entry>search the <emphasis>whatis</emphasis> database for strings</entry>
</row>

</tbody>
</tgroup>
</table>
</sect2>
<sect2 id="sect_02_02_02"><title>General remarks</title>
<para>You type these commands after the prompt, in a terminal window in graphical mode or in text mode, followed by <keycap>Enter</keycap>.</para>
<para>Commands can be issued by themselves, such as <command>ls</command>.  A command behaves different when you specify an <emphasis>option</emphasis>, usually preceded with a dash (-), as in <command>ls -a</command>.  The same option character may have a different meaning for another command.  GNU programs take long options, preceded by two dashes (--), like <command>ls --all</command>.  Some commands have no options.</para>
<para>The argument(s) to a command are specifications for the object(s) on which you want the command to take effect.  An example is <command>ls <parameter>/etc</parameter></command>, where the directory <filename>/etc</filename> is the argument to the <command>ls</command> command.  This indicates that you want to see the content of that directory, instead of the default, which would be the content of the current directory, obtained by just typing <command>ls</command> followed by <keycap>Enter</keycap>.  Some commands require arguments, sometimes arguments are optional.</para>
<para>You can find out whether a command takes options and arguments, and which ones are valid, by checking the online help for that command, see <xref linkend="sect_02_03"></xref>.</para>
<para>In Linux, like in UNIX, directories are separated using forward slashes, like the ones used in web addresses (URLs).  We will discuss directory structure in-depth later.</para>
<para>The symbols . and .. have special meaning when directories are concerned.  We will try to find out about those during the exercises, and more in the next chapter.</para>
<para>Try to avoid logging in with or using the system administrator's account, <emphasis>root</emphasis>.  Besides doing your normal work, most tasks, including checking the system, collecting information etc., can be executed using a normal user account with no special permissions at all.  If needed, for instance when creating a new user or installing new software, the preferred way of obtaining root access is by switching user IDs, see <xref linkend="sect_03_02_01"></xref> for an example.</para>  
<para>Almost all commands in this book can be executed without system administrator privileges.  In most cases, when issuing a command or starting a program as a non-privileged user, the system will warn you or prompt you for the root password when root access is required.  Once you're done, leave the application or session that gives you root privileges immediately.</para>
<para>Reading documentation should become your second nature.  Especially in the beginning, it is important to read system documentation, manuals for basic commands, HOWTOs and so on.  Since the amount of documentation is so enormous, it is impossible to include all related documentation.  This book will try to guide you to the most appropriate documentation on every subject discussed, in order to stimulate the habit of reading the man pages.</para>
</sect2>
<sect2 id="sect_02_02_03"><title>Using Bash features</title>
<para>Several special key combinations allow you to do things easier and faster with the GNU shell, Bash, which is the default on almost any Linux system, see <xref linkend="sect_03_02_03_02"></xref>.  Below is a list of the most commonly used features; you are strongly suggested to make a habit out of using them, so as to get the most out of your Linux experience from the very beginning.</para>

<table frame="all" id="tab_02_02"><title>Key combinations in Bash</title>
<tgroup align="left" cols="2" colsep="1" rowsep="1">
<thead>
<row><entry>Key or key combination</entry><entry>Function</entry></row>
</thead>
<tbody>
<row><entry><keycap>Ctrl</keycap>+<keycap>A</keycap></entry><entry>Move cursor to the beginning of the command line.</entry></row>
<row><entry><keycap>Ctrl</keycap>+<keycap>C</keycap></entry><entry>End a running program and return the prompt, see <xref linkend="chap_04"></xref>.</entry></row>
<row><entry><keycap>Ctrl</keycap>+<keycap>D</keycap></entry><entry>Log out of the current shell session, equal to typing <command>exit</command> or <command>logout</command>.</entry></row>
<row><entry><keycap>Ctrl</keycap>+<keycap>E</keycap></entry><entry>Move cursor to the end of the command line.</entry></row>
<row><entry><keycap>Ctrl</keycap>+<keycap>H</keycap></entry><entry>Generate backspace character.</entry></row>
<row><entry><keycap>Ctrl</keycap>+<keycap>L</keycap></entry><entry>Clear this terminal.</entry></row>
<row><entry><keycap>Ctrl</keycap>+<keycap>R</keycap></entry><entry>Search command history, see <xref linkend="sect_03_03_03_04"></xref>.</entry></row>
<row><entry><keycap>Ctrl</keycap>+<keycap>Z</keycap></entry><entry>Suspend a program, see <xref linkend="chap_04"></xref>.</entry></row>
<row><entry><keycap>ArrowLeft</keycap> and <keycap>ArrowRight</keycap></entry><entry>Move the cursor one place to the left or right on the command line, so that you can insert characters at other places than just at the beginning and the end.</entry></row>
<row><entry><keycap>ArrowUp</keycap> and <keycap>ArrowDown</keycap></entry><entry>Browse history.  Go to the line that you want to repeat, eventually edit details, and press <keycap>Enter</keycap> to save time.</entry></row>
<row><entry><keycap>Shift</keycap>+<keycap>PageUp</keycap> and <keycap>Shift</keycap>+<keycap>PageDown</keycap></entry><entry>Browse terminal buffer (to see text that has "scrolled off" the screen).</entry></row>
<row><entry><keycap>Tab</keycap></entry><entry>Command or filename completion; when multiple choices are possible, the system will either signal with an audio or visual bell, or, if too many choices are possible, ask you if you want to see them all.</entry></row>
<row><entry><keycap>Tab</keycap> <keycap>Tab</keycap></entry><entry>Shows file or command completion possibilities.</entry></row>
</tbody>
</tgroup>
</table>

<para>The last two items in the above table may need some extra explanantions.  For instance, if you want to change into the directory <filename>directory_with_a_very_long_name</filename>, you are not going to type that very long name, no.  You just type on the command line <command>cd dir</command>, then you press <keycap>Tab</keycap> and the shell completes the name for you, if no other files are starting with the same three characters.  Of course, if there are no other items starting with <quote>d</quote>, then you might just as wel type <command>cd d</command> and then <keycap>Tab</keycap>.  If more than one file starts with the same characters, the shell will signal this to you, upon which you can hit <keycap>Tab</keycap> twice with short interval, and the shell presents the choices you have:</para>
<screen>
<prompt>your_prompt&gt;</prompt> <command>cd st</command>
starthere	 stuff		stuffit
</screen>
<para>In the above example, if you type <quote>a</quote> after the first two characters and hit <keycap>Tab</keycap> again, no other possibilities are left, and the shell completes the directory name, without you having to type the string <quote>rthere</quote>:</para>
<screen>
<prompt>your_prompt&gt;</prompt> <command>cd starthere</command>
</screen>
<para>Of course, you'll still have to hit <keycap>Enter</keycap> to accept this choice.</para>
<para>In the same example, if you type <quote>u</quote>, and then hit <keycap>Tab</keycap>, the shell will add the <quote>ff</quote> for you, but then it protests again, because multiple choices are possible.  If you type <keycap>Tab</keycap> <keycap>Tab</keycap> again, you'll see the choices; if you type one or more characters that make the choice unambiguous to the system, and <keycap>Tab</keycap> again, or <keycap>Enter</keycap> when you've reach the end of the file name that you want to choose, the shell completes the file name and changes you into that directory - if indeed it is a directory name.</para>
<para>This works for all file names that are arguments to commands.</para>
<para>The same goes for command name completion.  Typing <command>ls</command> and then hitting the <keycap>Tab</keycap> key twice, lists all the commands in your <varname>PATH</varname> (see <xref linkend="sect_03_02_01"></xref>) that start with these two characters:</para>
<screen>
<prompt>your_prompt&gt;</prompt> <command>ls</command>
ls           lsdev        lspci        lsraid       lsw
lsattr       lsmod        lspgpot      lss16toppm
lsb_release  lsof         lspnp        lsusb
</screen>
</sect2>

</sect1>
<sect1 id="sect_02_03"><title>Getting help</title>
<sect2 id="sect_02_03_01"><title>Be warned</title>
<para>GNU/Linux is all about becoming more self-reliant.  And as usual with this system, there are several ways to achieve the goal.  A common way of getting help is finding someone who knows, and however patient and peace-loving the Linux-using community will be, almost everybody will expect you to have tried one or more of the methods in this section before asking them, and the ways in which this viewpoint is expressed may be rather harsh if you prove not to have followed this basic rule.</para>
</sect2>
<sect2 id="sect_02_03_02"><title>The man pages</title>
<para>A lot of beginning users fear the man (manual) pages, because they are an overwhelming source of documentation.  They are, however, very structured, as you will see from the example below on: <command>man <option>man</option></command>.</para>
<para>Reading man pages is usually done in a terminal window when in graphical mode, or just in text mode if you prefer it.  Type the command like this at the prompt, followed by <keycap>Enter</keycap>:</para>
<screen>
<prompt>yourname@yourcomp ~&gt;</prompt> <command>man <parameter>man</parameter></command>
</screen>
<para>The documentation for <command>man</command> will be displayed on your screen after you press <keycap>Enter</keycap>:</para>  
<screen>
man(1)                                                         man(1)



NAME
 man - format and display the on-line manual pages
 manpath - determine user's search path for man pages

SYNOPSIS
 man [-acdfFhkKtwW] [--path] [-m system] [-p string] [-C config_file]
 [-M pathlist] [-P pager] [-S section_list] [section] name ...


DESCRIPTION
 man formats and displays the on-line manual pages.  If you specify
 section, man only looks in that section of the manual.  
 name is normally the name of the manual page, which is typically the 
 name of a  command, function, or file.  However, if name contains a 
 slash (/) then man interprets it as a file specification, so that you
 can do man ./foo.5 or even man /cd/foo/bar.1.gz.

 See  below  for  a  description  of where man looks for the manual
 page files.

OPTIONS
 -C  config_file
lines 1-27
</screen>
<para>Browse to the next page using the space bar.  You can go back to the previous page using the b-key.  When you reach the end, <command>man</command> will usually quit and you get the prompt back.  Type <keycap>q</keycap> if you want to leave the man page before reaching the end, or if the viewer does not quit automatically at the end of the page.</para>
<note><title>Pagers</title>
<para>The available key combinations for manipulating the man pages depend on the <emphasis>pager</emphasis> used in your distribution.  Most distributions use <command>less</command> to view the man pages and to scroll around.  See <xref linkend="sect_03_03_04_02"></xref> for more info on pagers.</para>
</note>
<para>Each man page usually contains a couple of standard sections, as we can see from the <command>man <option>man</option></command> example:</para>
<itemizedlist>
<listitem><para>The first line contains the name of the command you are reading about, and the id of the section in which this man page is located.  The man pages are ordered in chapters.  Commands are likely to have multiple man pages, for example the man page from the user section, the man page from the system admin section, and the man page from the programmer section.</para></listitem>
<listitem><para>The name of the command and a short description are given, which is used for building an index of the man pages.  You can look for any given search string in this index using the <command>apropos</command> command.</para></listitem>
<listitem><para>The synopsis of the command provides a technical notation of all the options and/or arguments this command can take.  You can think of an option as a way of executing the command.  The argument is what you execute it on.  Some commands have no options or no arguments.  Optional options and arguments are put in between <quote>[</quote> and <quote>]</quote> to indicate that they can be left out.</para></listitem>
<listitem><para>A longer description of the command is given.</para></listitem>
<listitem><para>Options with their descriptions are listed.  Options can usually be combined.  If not so, this section will tell you about it.</para></listitem>
<listitem><para>Environment describes the shell variables that influence the behavior of this command (not all commands have this).</para></listitem>
<listitem><para>Sometimes sections specific to this command are provided, such as the CAT PAGES section in the example.</para></listitem>
<listitem><para>A reference to other man pages is given in the <quote>SEE ALSO</quote> section.  In between parentheses is the number of the man page section in which to find this command.  Experienced users often switch to the <quote>SEE ALSO</quote> part using the <command>/</command> command followed by the search string <literal>SEE</literal> and press <keycap>Enter</keycap>.</para></listitem>
<listitem><para>Usually there is also information about known bugs (anomalies) and where to report new bugs you may find.</para></listitem>
<listitem><para>There might also be author and copyright information.</para></listitem>
</itemizedlist>
<para>Some commands have multiple man pages.  For instance, the <command>passwd</command> command has a man page in section 1 and another in section 5.  By default, the man page with the lowest number is shown.  If you want to see another section than the default, specify it after the <command>man</command> command:</para>
<cmdsynopsis><command>man <option>5</option> <parameter>passwd</parameter></command></cmdsynopsis>
<para>If you want to see all man pages about a command, one after the other, use the <option>-a</option> to man:</para>
<cmdsynopsis><command>man <option>-a</option> <parameter>passwd</parameter></command></cmdsynopsis>
<para>This way, when you reach the end of the first man page and press <keycap>SPACE</keycap> again, the man page from the next section will be displayed.</para>
</sect2>
<sect2 id="sect_02_03_03"><title>More info</title>
<sect3 id="sect_02_03_03_01"><title>The Info pages</title>
<para>In addition to the man pages, you can read the info pages about a command, using the <command>info</command> command.  These usually contain more recent information and are somewhat easier to use.  The man pages for some commands refer to the info pages.</para>
<para>Get started by typing <command>info <parameter>info</parameter></command> in a terminal window:</para>  
<screen>
File: info.info,  Node: Top,  Next: Getting Started,  Up: (dir)

Info: An Introduction
*********************

   Info is a program, which you are using now, for reading
documentation of computer programs.  The GNU Project distributes most
of its on-line manuals in the Info format, so you need a program called
"Info reader" to read the manuals.  One of such programs you are using
now.

   If you are new to Info and want to learn how to use it, type the
command `h' now.  It brings you to a programmed instruction sequence.

   To learn advanced Info commands, type `n' twice.  This brings you to
`Info for Experts', skipping over the `Getting Started' chapter.

* Menu:

* Getting Started::             Getting started using an Info reader.
* Advanced Info::               Advanced commands within Info.
* Creating an Info File::       How to make your own Info file.
--zz-Info: (info.info.gz)Top, 24 lines --Top-------------------------------
Welcome to Info version 4.2. Type C-h for help, m for menu item.
</screen>
<para>Use the arrow keys to browse through the text and move the cursor on a line starting with an asterisk, containing the keyword about which you want info, then hit <keycap>Enter</keycap>.  Use the <keycap>P</keycap> and <keycap>N</keycap> keys to go to the previous or next subject.  The space bar will move you one page further, no matter whether this starts a new subject or an info page for another command.  Use <keycap>Q</keycap> to quit.  The <command>info</command> program has more information.</para>
</sect3>
<sect3 id="sect_02_03_03_02"><title>The whatis and apropos commands</title>
<para>A short index of explanations for commands is available using the <command>whatis</command> command, like in the examples below:</para>
<screen>
<prompt>[your_prompt]</prompt> <command>whatis ls</command>
ls                   (1)  - list directory contents
</screen>
<para>This displays short information about a command, and the first section in the collection of man pages that contains an appropriate page.</para>
<para>If you don't know where to get started and which man page to read, <command>apropos</command> gives more information.  Say that you don't know how to start a browser, then you could enter the following command:</para>
<screen>
<prompt>another prompt&gt;</prompt> <command>apropos browser</command>
Galeon [galeon](1)  - gecko-based GNOME web browser
lynx           (1)  - a general purpose distributed information browser 
	            for the World Wide Web
ncftp          (1)  - Browser program for the File Transfer Protocol
opera          (1)  - a graphical web browser
pilot          (1)  - simple file system browser in the style of the 
		    Pine Composer
pinfo          (1)  - curses based lynx-style info browser
pinfo [pman]   (1)  - curses based lynx-style info browser
viewres        (1x)  - graphical class browser for Xt
</screen>
<para>After pressing <keycap>Enter</keycap> you will see that a lot of browser related stuff is on your machine: not only web browsers, but also file and FTP browsers, and browsers for documentation.  If you have development packages installed, you may also have the accompanying man pages dealing with writing programs having to do with browsers.  Generally, a command with a man page in section one, so one marked with <quote>(1)</quote>, is suitable for trying out as a user.  The user who issued the above <command>apropos</command> might consequently try to start the commands <command>galeon</command>, <command>lynx</command> or <command>opera</command>, since these clearly have to do with browsing the world wide web.</para>
</sect3>
<sect3 id="sect_02_03_03_03"><title>The --help option</title>
<para>Most GNU commands support the <option>--help</option>, which gives a short explanation about how to use the command and a list of available options.  Below is the output of this option with the <command>cat</command> command:</para>
<screen>
<prompt>userprompt@host:</prompt> <command>cat --help</command>
Usage: cat [OPTION] [FILE]...
Concatenate FILE(s), or standard input, to standard output.

  -A, --show-all           equivalent to -vET
  -b, --number-nonblank    number nonblank output lines
  -e                       equivalent to -vE
  -E, --show-ends          display $ at end of each line
  -n, --number             number all output lines
  -s, --squeeze-blank      never more than one single blank line
  -t                       equivalent to -vT
  -T, --show-tabs          display TAB characters as ^I
  -u                       (ignored)
  -v, --show-nonprinting   use ^ and M- notation, 
			   except for LFD and TAB
      --help     display this help and exit
      --version  output version information and exit

With no FILE, or when FILE is -, read standard input.

Report bugs to &lt;bug-textutils@gnu.org&gt;.
</screen>
</sect3>
<sect3 id="sect_02_03_04"><title>Graphical help</title>
<para>Don't despair if you prefer a graphical user interface.  Konqueror, the default KDE file manager, provides painless and colourful access to the man and Info pages.  You may want to try <quote>info:info</quote> in the <emphasis>Location</emphasis> address bar, and you will get a browsable Info page about the <command>info</command> command.  Similarly, <quote>man:ls</quote> will present you with the man page for the <command>ls</command> command.  You even get command name completion: you will see the man pages for all the commands starting with <quote>ls</quote> in a scroll-down menu.  Entering <quote>info:/dir</quote> in the address location toolbar displays all the Info pages, arranged in utility categories.  Excellent <menuchoice><guimenu>Help</guimenu></menuchoice> content, including the Konqueror Handbook.  Start up from the menu or by typing the command <command>konqueror</command> in a terminal window, followed by <keycap>Enter</keycap>; see the screenshot below.</para>

<figure><title>Konqueror as help browser</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/konqueror.eps" format="EPS"></imagedata></imageobject><imageobject>
<imagedata fileref="images/konqueror.png" format="PNG"></imagedata>
</imageobject>
<textobject>
<phrase>Type "man:cat" in the location toolbar of Konqueror to display the cat man page.</phrase>
</textobject>
</mediaobject>
</figure>
<para>The Gnome Help Browser is very user friendly as well.  You can start it selecting <menuchoice><guimenu>Applications</guimenu><guimenuitem>Help</guimenuitem></menuchoice> from the Gnome menu, by clicking the lifeguard icon on your desktop or by entering the command <command>gnome-help</command> in a terminal window.  The system documentation and man pages are easily browsable with a plain interface.</para>
<para>The <command>nautilus</command> file manager provides a searchable index of the man and Info pages, they are easily browsable and interlinked.  Nautilus is started from the command line, or clicking your home directory icon, or from the Gnome menu.</para>
<para>The big advantage of GUIs for system documentation is that all information is completely interlinked, so you can click through in the <quote>SEE ALSO</quote> sections and wherever links to other man pages appear, and thus browse and acquire knowledge without interruption for hours at the time.</para> 
</sect3>
<sect3 id="sect_02_03_05"><title>Exceptions</title>
<para>Some commands don't have separate documentation, because they are part of another command.  <command>cd</command>, <command>exit</command>, <command>logout</command> and <command>pwd</command> are such exceptions.  They are part of your shell program and are called <emphasis>shell built-in</emphasis> commands.  For information about these, refer to the man or info page of your shell.  Most beginning Linux users have a Bash shell.  See <xref linkend="sect_03_02_03_02"></xref> for more about shells.</para>
<para>If you have been changing your original system configuration, it might also be possible that man pages are still there, but not visible because your shell environment has changed.  In that case, you will need to check the <varname>MANPATH</varname> variable.  How to do this is explained in <xref linkend="sect_07_02_02"></xref>.</para>
<para>Some programs or packages only have a set of instructions or references in the directory <filename>/usr/share/doc</filename>.  See <xref linkend="sect_03_03_04"></xref> to display.</para>
<para>In the worst case, you may have removed the documentation from your system by accident (hopefully by accident, because it is a very bad idea to do this on purpose).  In that case, first try to make sure that there is really nothing appropriate left using a search tool, read on in <xref linkend="sect_03_03_03"></xref>.  If so, you may have to re-install the package that contains the command to which the documentation applied, see <xref linkend="sect_07_06"></xref>.</para>
</sect3>
</sect2>

</sect1>
<sect1 id="sect_02_04"><title>Summary</title>
<para>Linux traditionally operates in text mode or in graphical mode.  Since CPU power and RAM are not the cost anymore these days, every Linux user can afford to work in graphical mode and will usually do so.  This does not mean that you don't have to know about text mode: we will work in the text environment throughout this course, using a terminal window.</para>
<para>Linux encourages its users to acquire knowledge and to become independent.  Inevitably, you will have to read a lot of documentation to achieve that goal; that is why, as you will notice, we refer to extra documentation for almost every command, tool and problem listed in this book.  The more docs you read, the easier it will become and the faster you will leaf through manuals.  Make reading documentation a habit as soon as possible.  When you don't know the answer to a problem, refering to the documentation should become a second nature.</para>

</sect1>
<sect1 id="sect_02_05"><title>Exercises</title>
<para>Most of what we learn is by making mistakes and by seeing how things can go wrong.  These exercises are made to get you to read some error messages.  The order in which you do these exercises is important.</para>
<para>Don't forget to use the Bash features on the command line: try to do the exercises typing as few characters as possible!</para>
<sect2 id="sect_02_05_01"><title>Connecting and disconnecting</title>
<para>
<itemizedlist>
<listitem><para>Determine whether you are working in text or in graphical mode.</para>
<para>I am working in text/graphical mode.  (cross out what's not applicable)</para>
</listitem>
<listitem><para>Log in with the user name and password you made for yourself during the installation.</para>
</listitem>
<listitem><para>Log out.</para></listitem>
<listitem><para>Log in again, using a non-existent user name</para>
<para>-&gt; What happens?</para>
</listitem>
</itemizedlist>
</para>
</sect2>

<sect2 id="sect_02_05_02"><title>Passwords</title>
<para>Log in again with your user name and password.</para>
<itemizedlist>
<listitem><para>Change your password into <emphasis>P6p3.aa!</emphasis> and hit the <keycap>Enter</keycap> key.</para>
<para>-&gt; What happens?</para>
</listitem>
<listitem><para>Try again, this time enter a password that is ridiculously easy, like <emphasis>123</emphasis> or <emphasis>aaa</emphasis>.</para>
<para>-&gt; What happens?</para>
</listitem>
<listitem><para>Try again, this time don't enter a password but just hit the <keycap>Enter</keycap> key.</para>
<para>-&gt; What happens?</para>
</listitem>
<listitem><para>Try the command <command>psswd</command> instead of <command>passwd</command></para>
<para>-&gt; What happens?</para>
</listitem>
</itemizedlist>

<warning><title>New password</title>
<para>Unless you change your password back again to what it was before this exercise, it will be <quote>P6p3.aa!</quote>.  Change your password after this exercise!</para>
<para>Note that some systems might not allow to recycle passwords, i.e. restore the original one within a certain amount of time or a certain amount of password changes, or both.</para>
</warning>

</sect2>

<sect2 id="sect_02_05_03"><title>Directories</title>
<para>These are some exercises to help you get the feel.</para>
<itemizedlist>
<listitem><para>Enter the command <command>cd <filename>blah</filename></command></para>
<para>-&gt; What happens?</para>
</listitem>
<listitem><para>Enter the command <command>cd <filename>..</filename></command></para>
<para>Mind the space between "cd" and ".."!  Use the <command>pwd</command> command.</para>
<para>-&gt; What happens?</para>
</listitem>
<listitem><para>List the directory contents with the <command>ls</command> command.</para>
<para>-&gt; What do you see?</para>
<para>-&gt; What do you think these are?</para>
<para>-&gt; Check using the <command>pwd</command> command.</para>
</listitem>
<listitem><para>Enter the <command>cd</command> command.</para>
<para>-&gt; What happens?</para>
</listitem>
<listitem><para>Repeat step 2 two times.</para>
<para>-&gt; What happens?</para>
</listitem>
<listitem><para>Display the content of this directory.</para></listitem>
<listitem><para>Try the command <command>cd <filename>root</filename></command></para>
<para>-&gt; What happens?</para>
<para>-&gt; To which directories do you have access?</para>
</listitem>
<listitem><para>Repeat step 4.</para>
<para>Do you know another possibility to get where you are now?</para>
</listitem>
</itemizedlist>
</sect2>
<sect2 id="sect_02_05_04"><title>Files</title>
<itemizedlist>
<listitem><para>Change directory to <filename>/</filename> and then to <filename>etc</filename>.  Type <command>ls</command>; if the output is longer than your screen, make the window longer, or try <keycap>Shift</keycap>+<keycap>PageUp</keycap> and <keycap>Shift</keycap>+<keycap>PageDown</keycap>.</para>
<para>The file <filename>inittab</filename> contains the answer to the first question in this list.  Try the <command>file</command> command on it.</para>
<para>-&gt; The file type of my <filename>inittab</filename> is  .....</para>
</listitem>
<listitem><para>Use the command <command>cat <filename>inittab</filename></command> and read the file.</para>
<para>-&gt; What is the default mode of your computer?</para>
</listitem>
<listitem><para>Return to your home directory using the <command>cd</command> command.</para></listitem>
<listitem><para>Enter the command <command>file <filename>.</filename></command></para>
<para>-&gt; Does this help to find the meaning of <quote>.</quote>? </para>
</listitem>
<listitem><para>Can you look at "." using the <command>cat</command> command?</para>
<para></para>
</listitem>
<listitem><para>Display help for the <command>cat</command> program, using the <option>--help</option> option.  Use the option for numbering of output lines to count how many users are listed in the file <filename>/etc/passwd</filename>.</para>
</listitem>
</itemizedlist>
</sect2>
<sect2 id="sect_02_05_05"><title>Getting help</title>
<itemizedlist>
<listitem><para>Read <command>man <parameter>intro</parameter></command></para></listitem>
<listitem><para>Read <command>man <parameter>ls</parameter></command></para></listitem>
<listitem><para>Read <command>info <parameter>passwd</parameter></command></para></listitem>
<listitem><para>Enter the <command>apropos <option>pwd</option></command> command.</para></listitem>
<listitem><para>Try <command>man</command> or <command>info</command> on <command>cd</command>.</para>
<para>-&gt; How would you find out more about <command>cd</command>? </para>
</listitem>
<listitem><para>Read <command>ls <option>--help</option></command> and try it out.</para></listitem>
</itemizedlist>
</sect2>

</sect1>
</chapter>
 
<chapter id="chap_03">
<title>About files and the file system</title>
<abstract>
<para>After the initial exploration in <xref linkend="chap_02"></xref>, we are ready to discuss the files and directories on a Linux system in more detail.  Many users have difficulties with Linux because they lack an overview of what kind of data is kept in which locations.  We will try to shine some light on the organization of files in the file system.
</para>
<para>We will also list the most important files and directories and use different methods of viewing the content of those files, and learn how files and directories can be created, moved and deleted.</para>
<para>After completion of the exercises in this chapter, you will be able to:</para>
<para>
<itemizedlist>
<listitem><para>Describe the layout of a Linux file system</para></listitem>
<listitem><para>Display and set paths</para></listitem>
<listitem><para>Describe the most important files, including kernel and shell</para></listitem>
<listitem><para>Find lost and hidden files</para></listitem>
<listitem><para>Create, move and delete files and directories</para></listitem>
<listitem><para>Display contents of files</para></listitem>
<listitem><para>Understand and use different link types</para></listitem>
<listitem><para>Find out about file properties and change file permissions</para></listitem> 
</itemizedlist>
</para>
</abstract>

<sect1 id="sect_03_01"><title>General overview of the Linux file system</title>
<sect2 id="sect_03_01_01"><title>Files</title>
<sect3 id="sect_03_01_01_01"><title>General</title>
<para>A simple description of the UNIX system, also applicable to Linux, is this:</para>
<para><quote>On a UNIX system, everything is a file; if something is not a file, it is a process.</quote></para>
<para>This statement is true because there are special files that are more than just files (named pipes and sockets, for instance), but to keep things simple, saying that everything is a file is an acceptable generalization.  A Linux system, just like UNIX, makes no difference between a file and a directory, since a directory is just a file containing names of other files.  Programs, services, texts, images, and so forth, are all files.  Input and output devices, and generally all devices, are considered to be files, according to the system.</para>
<para>In order to manage all those files in an orderly fashion, man likes to think of them in an ordered tree-like structure on the hard disk, as we know from MS-DOS (Disk Operating System) for instance.  The large branches contain more branches, and the branches at the end contain the tree's leaves or normal files.  For now we will use this image of the tree, but we will find out later why this is not a fully accurate image.</para>
</sect3>
<sect3 id="sect_03_01_01_02"><title>Sorts of files</title>
<para>Most files are just files, called <emphasis>regular</emphasis> files; they contain normal data, for example text files, executable files or programs, input for or output from a program and so on.</para>
<para>While it is reasonably safe to suppose that everything you encounter on a Linux system is a file, there are some exceptions.</para>
<itemizedlist>
<listitem><para><emphasis>Directories</emphasis>: files that are lists of other files.</para></listitem>
<listitem><para><emphasis>Special files</emphasis>: the mechanism used for input and output.  Most special files are in <filename>/dev</filename>, we will discuss them later.</para></listitem>
<listitem><para><emphasis>Links</emphasis>: a system to make a file or directory visible in multiple parts of the system's file tree.  We will talk about links in detail.</para></listitem>
<listitem><para><emphasis>(Domain) sockets</emphasis>: a special file type, similar to TCP/IP sockets, providing inter-process networking protected by the file system's access control.</para></listitem>
<listitem><para><emphasis>Named pipes</emphasis>: act more or less like sockets and form a way for processes to communicate with each other, without using network socket semantics.</para></listitem>
</itemizedlist>
<para>The <option>-l</option> option to <command>ls</command> displays the file type, using the first character of each input line:</para>
<screen>
<prompt>jaime:~/Documents&gt;</prompt> <command>ls -l</command>
total 80
-rw-rw-r--   1 jaime   jaime   31744 Feb 21 17:56 intro Linux.doc
-rw-rw-r--   1 jaime   jaime   41472 Feb 21 17:56 Linux.doc
drwxrwxr-x   2 jaime   jaime    4096 Feb 25 11:50 course
</screen>
<para>This table gives an overview of the characters determining the file type:</para>
<table frame="all">
<title>File types in a long list</title>
<tgroup align="left" cols="2" colsep="1" rowsep="1">
<thead>
<row>
<entry>Symbol</entry>
<entry>Meaning</entry>
</row>
</thead>
<tbody>
<row>
<entry>-</entry><entry>Regular file</entry>
</row>
<row>
<entry>d</entry><entry>Directory</entry>
</row>
<row>
<entry>l</entry><entry>Link</entry>
</row>
<row>
<entry>c</entry><entry>Special file</entry>
</row>
<row>
<entry>s</entry><entry>Socket</entry>
</row>
<row>
<entry>p</entry><entry>Named pipe</entry>
</row>
<row>
<entry>b</entry><entry>Block device</entry>
</row>
</tbody>
</tgroup>
</table>

<para>In order not to always have to perform a long listing for seeing the file type, a lot of systems by default don't issue just <command>ls</command>, but <command>ls <option>-F</option></command>, which suffixes file names with one of the characters <quote>/=*|@</quote> to indicate the file type.  To make it extra easy on the beginning user, both the <option>-F</option> and <option>--color</option> options are usually combined, see <xref linkend="sect_03_03_01_01"></xref>.  We will use <command>ls <option>-F</option></command> throughout this document for better readability.</para>

<para>As a user, you only need to deal directly with plain files, executable files, directories and links.  The special file types are there for making your system do what you demand from it and are dealt with by system administrators and programmers.</para>


<para>
Now, before we look at the important files and directories, we need to know more about partitions.</para>
</sect3>
</sect2>
<sect2 id="sect_03_01_02"><title>About partitioning</title>
<sect3 id="sect_03_01_02_01"><title>Why partition?</title>
<para>Most people have a vague knowledge of what partitions are, since every operating system has the ability to create or remove them.  It may seem strange that Linux uses more than one partition on the same disk, even when using the standard installation procedure, so some explanation is called for.</para>
<para>One of the goals of having different partitions is to achieve higher data security in case of disaster.  By dividing the hard disk in partitions, data can be grouped and separated.  When an accident occurs, only the data in the partition that got the hit will be damaged, while the data on the other partitions will most likely survive. </para>
<para>This principle dates from the days when Linux didn't have journaled file systems and power failures might have lead to disaster.  The use of partitions remains for security and robustness reasons, so a breach on one part of the system doesn't automatically mean that the whole computer is in danger.  This is currently the most important reason for partitioning.  A simple example: a user creates a script, a program or a web application that starts filling up the disk.  If the disk contains only one big partition, the entire system will stop functioning if the disk is full.  If the user stores the data on a separate partition, then only that (data) partition will be affected, while the system partitions and possible other data partitions keep functioning.</para>
<para>Mind that having a journaled file system only provides data security in case of power failure and sudden disconnection of storage devices.  This does not protect your data against bad blocks and logical errors in the file system.  In those cases, you should use a RAID (Redundant Array of Inexpensive Disks) solution.</para>
</sect3>
<sect3 id="sect_03_01_02_02"><title>Partition layout and types</title>
<para>There are two kinds of major partitions on a Linux system:</para>
<itemizedlist>
<listitem><para><emphasis>data partition</emphasis>: normal Linux system data, including the <emphasis>root partition</emphasis> containing all the data to start up and run the system; and </para></listitem>
<listitem><para><emphasis>swap partition</emphasis>: expansion of the computer's physical memory, extra memory on hard disk.</para></listitem>
</itemizedlist>
<para>Most systems contain a root partition, one or more data partitions and one or more swap partitions.  Systems in mixed environments may contain partitions for other system data, such as a partition with a FAT or VFAT file system for MS Windows data.</para>
<para>Most Linux systems use <command>fdisk</command> at installation time to set the partition type.  As you may have noticed during the exercise from Chapter 1, this usually happens automatically.  On some occasions, however, you may not be so lucky.  In such cases, you will need to select the partition type manually and even manually do the actual partitioning.  The standard Linux partitions have number 82 for swap and 83 for data, which can be journaled (ext3) or normal (ext2, on older systems).  The <command>fdisk</command> utility has built-in help, should you forget these values.</para>
<para>Apart from these two, Linux supports a variety of other file system types, such as the relatively new Reiser file system, JFS, NFS, FATxx and many other file systems natively available on other (proprietary) operating systems.</para>

<para>The standard root partition (indicated with a single forward slash, <emphasis>/</emphasis>) is about 100-500 MB, and contains the system configuration files, most basic commands and server programs, system libraries, some temporary space and the home directory of the administrative user.  A standard installation requires about 250 MB for the root partition.</para>
<para>Swap space (indicated with <emphasis>swap</emphasis>) is only accessible for the system itself, and is hidden from view during normal operation.  Swap is the system that ensures, like on normal UNIX systems, that you can keep on working, whatever happens.  On Linux, you will virtually never see irritating messages like <emphasis>Out of memory, please close some applications first and try again</emphasis>, because of this extra memory.  The swap or virtual memory procedure has long been adopted by operating systems outside the UNIX world by now.</para>
<para>Using memory on a hard disk is naturally slower than using the real memory chips of a computer, but having this little extra is a great comfort.  We will learn more about swap when we discuss Processes in <xref linkend="chap_04"></xref>.</para>
<para>Linux generally counts on having twice the amount of physical memory in the form of swap space on the hard disk.  When installing a system, you have to know how you are going to do this.  An example on a system with 512 MB of RAM:</para>
<itemizedlist>
<listitem><para>1st possibility: one swap partition of 1 GB</para></listitem>
<listitem><para>2nd possibility: two swap partitions of 512 MB</para></listitem>
<listitem><para>3rd possibility: with two hard disks: 1 partition of 512 MB on each disk.</para></listitem>
</itemizedlist>
<para>The last option will give the best results when a lot of I/O is to be expected.</para>
<para>Read the software documentation for specific guidelines.  Some applications, such as databases, might require more swap space.  Others, such as some handheld systems, might not have any swap at all by lack of a hard disk.  Swap space may also depend on your kernel version.</para>
<para>The kernel is on a separate partition as well in many distributions, because it is the most important file of your system.  If this is the case, you will find that you also have a <emphasis>/boot</emphasis> partition, holding your kernel(s) and accompanying data files.</para>
<para>The rest of the hard disk(s) is generally divided in data partitions, although it may be that all of the non-system critical data resides on one partition, for example when you perform a standard workstation installation.  When non-critical data is separated on different partitions, it usually happens following a set pattern:</para>
<itemizedlist>
<listitem><para>a partition for user programs (<emphasis>/usr</emphasis>)</para></listitem>
<listitem><para>a partition containing the users' personal data (<emphasis>/home</emphasis>)</para></listitem>
<listitem><para>a partition to store temporary data like print- and mail-queues (<emphasis>/var</emphasis>)</para></listitem>
<listitem><para>a partition for third party and extra software (<emphasis>/opt</emphasis>)</para></listitem>
</itemizedlist>
<para>Once the partitions are made, you can only add more.  Changing sizes or properties of existing partitions is possible but not advisable.</para>
<para>The division of hard disks into partitions is determined by the system administrator.  On larger systems, he or she may even spread one partition over several hard disks, using the appropriate software.  Most distributions allow for standard setups optimized for workstations (average users) and for general server purposes, but also accept customized partitions.  During the installation process you can define your own partition layout using either your distribution specific tool, which is usually a straight forward graphical interface, or <command>fdisk</command>, a text-based tool for creating partitions and setting their properties.</para>
<para>A workstation or client installation is for use by mainly one and the same person.  The selected software for installation reflects this and the stress is on common user packages, such as nice desktop themes, development tools, client programs for E-mail, multimedia software, web and other services.  Everything is put together on one large partition, swap space twice the amount of RAM is added and your generic workstation is complete, providing the largest amount of disk space possible for personal use, but with the disadvantage of possible data integrity loss during problem situations.</para>
<para>On a server, system data tends to be separate from user data.  Programs that offer services are kept in a different place than the data handled by this service.  Different partitions will be created on such systems:</para>
<itemizedlist> 
<listitem><para>a partition with all data necessary to boot the machine</para></listitem>
<listitem><para>a partition with configuration data and server programs</para></listitem>
<listitem><para>one or more partitions containing the server data such as database tables, user mails, an ftp archive etc.</para></listitem>
<listitem><para>a partition with user programs and applications</para></listitem>
<listitem><para>one or more partitions for the user specific files (home directories)</para></listitem>
<listitem><para>one or more swap partitions (virtual memory)</para></listitem>
</itemizedlist> 

<para>Servers usually have more memory and thus more swap space.  Certain server processes, such as databases, may require more swap space than usual; see the specific documentation for detailed information.  For better performance, swap is often divided into different swap partitions.</para>
</sect3>
<sect3 id="sect_03_01_02_03"><title>Mount points</title>
<para>All partitions are attached to the system via a mount point.  The mount point defines the place of a particular data set in the file system.  Usually, all partitions are connected through the <emphasis>root</emphasis> partition.  On this partition, which is indicated with the slash (/), directories are created.  These empty directories will be the starting point of the partitions that are attached to them.  An example: given a partition that holds the following directories:</para>
<screen>
videos/		cd-images/	pictures/
</screen>
<para>We want to attach this partition in the filesystem in a directory called <filename>/opt/media</filename>.  In order to do this, the system administrator has to make sure that the directory <filename>/opt/media</filename> exists on the system.  Preferably, it should be an empty directory.  How this is done is explained lateron in this chapter.  Then, using the <command>mount</command> command, the administrator can attach the partition to the system.  When you look at the content of the formerly empty directory <filename>/opt/media</filename>, it will contain the files and directories that are on the mounted medium (hard disk oor partition of a hard disk, CD, DVD, flash card, USB or other storage device).</para>
<para>During system startup, all the partitions are thus mounted, as described in the file <filename>/etc/fstab</filename>.  Some partitions are not mounted by default, for instance if they are not constantly connected to the system, such like the storage used by your digital camera.  If well configured, the device will be mounted as soon as the system notices that it is connected, or it can be user-mountable, i.e. you don't need to be system administrator to attach and detach the device to and from the system.  There is an example in <xref linkend="sect_09_03"></xref>.</para>

<para>On a running system, information about the partitions and their mount points can be displayed using the <command>df</command> command (which stands for <emphasis>disk full</emphasis> or <emphasis>disk free</emphasis>).  In Linux, <command>df</command> is the GNU version, and supports the <option>-h</option> or <emphasis>human readable</emphasis> option which greatly improves readability.  Note that commercial UNIX machines commonly have their own versions of <command>df</command> and many other commands.  Their behavior is usually the same, though GNU versions of common tools often have more and better features.</para>
<para>The <command>df</command> command only displays information about active non-swap partitions.  These can include partitions from other networked systems, like in the example below where the home directories are mounted from a file server on the network, a situation often encountered in corporate environments.</para>
<screen>
<prompt>freddy:~&gt;</prompt> <command>df -h</command>
Filesystem          Size  Used Avail Use% Mounted on
/dev/hda8           496M  183M  288M  39% /
/dev/hda1           124M  8.4M  109M   8% /boot
/dev/hda5            19G   15G  2.7G  85% /opt
/dev/hda6           7.0G  5.4G  1.2G  81% /usr
/dev/hda7           3.7G  2.7G  867M  77% /var
fs1:/home           8.9G  3.7G  4.7G  44% /.automount/fs1/root/home
</screen>
</sect3>
</sect2>
<sect2 id="sect_03_01_03"><title>More file system layout</title>
<sect3 id="sect_03_01_03_01"><title>Visual</title>
<para>For convenience, the Linux file system is usually thought of in a tree structure.  On a standard Linux system you will find the layout generally follows the scheme presented below.</para>
<figure><title>Linux file system layout</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/FS-layout.eps" format="EPS"></imagedata>
</imageobject>
<imageobject>
<imagedata fileref="images/FS-layout.png" format="PNG"></imagedata>
</imageobject>
<textobject>
<phrase>Graphical overview of Linux top level directories and most important subdirectories.</phrase>
</textobject>
</mediaobject>
</figure>
<para>This is a layout from a RedHat system.  Depending on the system admin, the operating system and the mission of the UNIX machine, the structure may vary, and directories may be left out or added at will.  The names are not even required; they are only a convention.</para>
<para>The tree of the file system starts at the trunk or <emphasis>slash</emphasis>, indicated by a forward slash (/).  This directory, containing all underlying directories and files, is also called the <emphasis>root directory</emphasis> or <quote>the root</quote> of the file system.</para>
<para>Directories that are only one level below the root directory are often preceded by a slash, to indicate their position and prevent confusion with other directories that could have the same name.  When starting with a new system, it is always a good idea to take a look in the root directory.  Let's see what you could run into:</para>
<screen>
<prompt>emmy:~&gt;</prompt> <command>cd /</command>
<prompt>emmy:/&gt;</prompt> <command>ls</command>
bin/   dev/  home/    lib/         misc/  opt/     root/  tmp/  var/
boot/  etc/  initrd/  lost+found/  mnt/   proc/    sbin/  usr/
</screen>
<table frame="all">
<title>Subdirectories of the root directory</title>
<tgroup align="left" cols="2" colsep="1" rowsep="1">
<thead>
<row>
<entry>Directory</entry>
<entry>Content</entry>
</row>
</thead>
<tbody>
<row>
<entry>/bin</entry>
<entry>Common programs, shared by the system, the system administrator and the users.</entry>
</row>

<row>
<entry>/boot</entry>
<entry>The startup files and the kernel, <filename>vmlinuz</filename>.  In some recent distributions also <filename>grub</filename> data.  Grub is the GRand Unified Boot loader and is an attempt to get rid of the many different boot-loaders we know today.</entry>
</row>
<row><entry>/dev</entry>
<entry>Contains references to all the CPU peripheral hardware, which are represented as files with special properties.</entry>
</row>
<row><entry>/etc</entry>
<entry>Most important system configuration files are in <filename>/etc</filename>, this directory contains data similar to those in the Control Panel in Windows</entry></row>
<row><entry>/home</entry>
<entry>Home directories of the common users.</entry>
</row>
<row><entry>/initrd</entry>
<entry>(on some distributions) Information for booting.  Do not remove!</entry>
</row>
<row><entry>/lib</entry>
<entry>Library files, includes files for all kinds of programs needed by the system and the users.</entry>
</row>
<row><entry>/lost+found</entry>
<entry>Every partition has a <filename>lost+found</filename> in its upper directory.  Files that were saved during failures are here.</entry>
</row>
<row><entry>/misc</entry>
<entry>For miscellaneous purposes.</entry>
</row>
<row><entry>/mnt</entry>
<entry>Standard mount point for external file systems, e.g. a CD-ROM or a digital camera.</entry>
</row>
<row><entry>/net</entry>
<entry>Standard mount point for entire remote file systems</entry>
</row>
<row><entry>/opt</entry>
<entry>Typically contains extra and third party software.</entry>
</row>
<row><entry>/proc</entry>
<entry>A virtual file system containing information about system resources.  More information about the meaning of the files in <filename>proc</filename> is obtained by entering the command <command>man <parameter>proc</parameter></command> in a terminal window.  The file <filename>proc.txt</filename> discusses the virtual file system in detail.  If you don't have a Linux machine at hand on which to locate this file, it is included in <xref linkend="app5"></xref> for your convenience.</entry>
</row>
<row><entry>/root</entry>
<entry>The administrative user's home directory.  Mind the difference between /, the root directory and /root, the home directory of the <emphasis>root</emphasis> user.</entry>
</row>
<row><entry>/sbin</entry>
<entry>Programs for use by the system and the system administrator.</entry>
</row>
<row><entry>/tmp</entry>
<entry>Temporary space for use by the system, cleaned upon reboot, so don't use this for saving any work!</entry>
</row>
<row><entry>/usr</entry>
<entry>Programs, libraries, documentation etc. for all user-related programs.</entry>
</row>
<row><entry>/var</entry>
<entry>Storage for all variable files and temporary files created by users, such as log files, the mail queue, the print spooler area, space for temporary storage of files downloaded from the Internet, or to keep an image of a CD before burning it.</entry>
</row>
</tbody>
</tgroup>
</table>
<para>How can you find out which partition a directory is on?  Using the <command>df</command> command with a dot (.) as an option shows the partition the current directory belongs to, and informs about the amount of space used on this partition:</para>
<screen>
<prompt>sandra:/lib&gt;</prompt> <command>df -h .</command>
Filesystem            Size  Used Avail Use% Mounted on
/dev/hda7             980M  163M  767M  18% /
</screen>
<para>As a general rule, every directory under the root directory is on the root partition, unless it has a separate entry in the full listing from <command>df</command> (or <command>df <option>-h</option></command> with no other options).</para>
<para>Read more in <command>man <parameter>hier</parameter></command>.</para>
</sect3>

<sect3 id="sect_03_01_03_02"><title>The file system in reality</title>
<para>For most users and for most common system administration tasks, it is enough to accept that files and directories are ordered in a tree-like structure.  The computer, however, doesn't understand a thing about trees or tree-structures.</para> 
<para>Every partition has its own file system.  By imagining all those file systems together, we can form an idea of the tree-structure of the entire system, but it is not as simple as that.  In a file system, a file is represented by an <emphasis>inode</emphasis>, a kind of serial number containing information about the actual data that makes up the file: to whom this file belongs, and where is it located on the hard disk.</para>
<para>Every partition has its own set of inodes; throughout a system with multiple partitions, files with the same inode number can exist.</para>
<para>Each inode describes a data structure on the hard disk, storing the properties of a file, including the physical location of the file data.  When a hard disk is initialized to accept data storage, usually during the initial system installation process or when adding extra disks to an existing system, a fixed number of inodes per partition is created.  This number will be the maximum amount of files, of all types (including directories, special files, links etc.) that can exist at the same time on the partition.  We typically count on having 1 inode per 2 to 8 kilobytes of storage.</para>
<para>At the time a new file is created, it gets a free inode.  In that inode is the following information:</para>
<itemizedlist>
<listitem><para>Owner and group owner of the file.</para></listitem>
<listitem><para>File type (regular, directory, ...)</para></listitem>
<listitem><para>Permissions on the file <xref linkend="sect_03_04_01"></xref></para></listitem>
<listitem><para>Date and time of creation, last read and change.</para></listitem>
<listitem><para>Date and time this information has been changed in the inode.</para></listitem>
<listitem><para>Number of links to this file (see later in this chapter).</para></listitem>
<listitem><para>File size</para></listitem>
<listitem><para>An address defining the actual location of the file data.</para></listitem>
</itemizedlist>

<para>The only information not included in an inode, is the file name and directory.  These are stored in the special directory files.  By comparing file names and inode numbers, the system can make up a tree-structure that the user understands.  Users can display inode numbers using the <option>-i</option> option to ls.  The inodes have their own separate space on the disk.</para>
</sect3>
</sect2>

</sect1>
<sect1 id="sect_03_02"><title>Orientation in the file system</title>
<sect2 id="sect_03_02_01"><title>The path</title>
<para>When you want the system to execute a command, you almost never have to give the full path to that command.  For example, we know that the <command>ls</command> command is in the <filename>/bin</filename> directory (check with <command>which <option>-a</option> <parameter>ls</parameter></command>), yet we don't have to enter the command <command>/bin/ls</command> for the computer to list the content of the current directory.</para>
<para>The <varname>PATH</varname> environment variable takes care of this.  This variable lists those directories in the system where executable files can be found, and thus saves the user a lot of typing and memorizing locations of commands.  So the path naturally contains a lot of directories containing <filename>bin</filename> somewhere in their names, as the user below demonstrates.  The <command>echo</command> command is used to display the content (<quote>$</quote>) of the variable <varname>PATH</varname>:</para>
<screen>
<prompt>rogier:&gt;</prompt> <command>echo $PATH</command>
/opt/local/bin:/usr/X11R6/bin:/usr/bin:/usr/sbin/:/bin
</screen>
<para>In this example, the directories <filename>/opt/local/bin</filename>, <filename>/usr/X11R6/bin</filename>, <filename>/usr/bin</filename>, <filename>/usr/sbin</filename> and <filename>/bin</filename> are subsequently searched for the required program.  As soon as a match is found, the search is stopped, even if not every directory in the path has been searched.  This can lead to strange situations.  In the first example below, the user knows there is a program called <command>sendsms</command> to send an SMS message, and another user on the same system can use it, but she can't.  The difference is in the configuration of the <varname>PATH</varname> variable:</para>
<screen>
<prompt>[jenny@blob jenny]$</prompt> <command>sendsms</command>
bash: sendsms: command not found
[jenny@blob jenny]$ echo $PATH
/bin:/usr/bin:/usr/bin/X11:/usr/X11R6/bin:/home/jenny/bin
[jenny@blob jenny]$ su - tony
Password:
tony:~&gt;which sendsms
sendsms is /usr/local/bin/sendsms

tony:~&gt;echo $PATH
/home/tony/bin.Linux:/home/tony/bin:/usr/local/bin:/usr/local/sbin:\
/usr/X11R6/bin:/usr/bin:/usr/sbin:/bin:/sbin
</screen>
<para>Note the use of the <command>su</command> (switch user) facility, which allows you to run a shell in the environment of another user, on the condition that you know the user's password.</para>
<para>A backslash indicates the continuation of a line on the next, without an <keycap>Enter</keycap> separating one line from the other.</para>
<para>In the next example, a user wants to call on the <command>wc</command> (word count) command to check the number of lines in a file, but nothing happens and he has to break off his action using the <keycap>Ctrl</keycap>+<keycap>C</keycap> combination:</para>
<screen>
<prompt>jumper:~&gt;</prompt> <command>wc -l test</command>

(Ctrl-C)
<prompt>jumper:~&gt;</prompt> <command>which wc</command>
wc is hashed (/home/jumper/bin/wc)

<prompt>jumper:~&gt;</prompt> <command>echo $PATH</command>
/home/jumper/bin:/usr/local/bin:/usr/local/sbin:/usr/X11R6/bin:\
/usr/bin:/usr/sbin:/bin:/sbin
</screen>
<para>The use of the <command>which</command> command shows us that this user has a <filename>bin</filename>-directory in his home directory, containing a program that is also called <command>wc</command>.  Since the program in his home directory is found first when searching the paths upon a call for <command>wc</command>, this <quote>home-made</quote> program is executed, with input it probably doesn't understand, so we have to stop it.  To resolve this problem there are several ways (there are always several ways to solve a problem in UNIX/Linux): one answer could be to rename the user's <command>wc</command> program, or the user can give the full path to the exact command he wants, which can be found by using the <option>-a</option> to the <command>which</command> command:</para>
<screen>
<prompt>jumper:~&gt;</prompt> <command>/usr/bin/wc -l test</command>
       10 test
</screen>
<para>If the user uses programs in the other directories more frequently, he can change his path to look in his own directories last:</para>
<screen>
<prompt>jumper:~&gt;</prompt> <command>export PATH=/usr/local/bin:/usr/local/sbin:/usr/X11R6/bin:\
/usr/bin:/usr/sbin:/bin:/sbin:/home/jumper/bin</command>
</screen>
<note><title>Changes are not permanent!</title>
<para>Note that when using the <command>export</command> command in a shell, the changes are temporary and only valid for this session (until you log out).  Opening new sessions, even while the current one is still running, will not result in a new path in the new session.  We will see in <xref linkend="sect_07_02"></xref> how we can make these kinds of changes to the environment permanent, adding these lines to the shell configuration files.</para></note>

</sect2>
<sect2 id="sect_03_02_02"><title>Absolute and relative paths</title>
<para>A path, which is the way you need to follow in the tree structure to reach a given file, can be described as starting from the trunk of the tree (the / or root directory).  In that case, the path starts with a slash and is called an absolute path, since there can be no mistake: only one file on the system can comply.</para>
<para>In the other case, the path doesn't start with a slash and confusion is possible between <filename>~/bin/wc</filename> (in the user's home directory) and <filename>bin/wc</filename> in <filename>/usr</filename>, from the previous example.  Paths that don't start with a slash are always relative.</para>
<para>In relative paths we also use the . and .. indications for the current and the parent directory.  A couple of practical examples:</para>
<itemizedlist>
<listitem>
<para>When you want to compile source code, the installation documentation often instructs you to run the command <command>./configure</command>, which runs the <emphasis>configure</emphasis> program located in the current directory (that came with the new code), as opposed to running another configure program elsewhere on the system.</para></listitem>
<listitem><para>In HTML files, relative paths are often used to make a set of pages easily movable to another place:</para>
<screen>
&lt;img alt="Garden with trees" src="../images/garden.jpg"&gt;
</screen>
</listitem>
<listitem><para>Notice the difference one more time:</para>
<screen>
<prompt>theo:~&gt;</prompt> <command>ls /mp3</command>
ls: /mp3: No such file or directory
theo:~&gt;ls mp3/
oriental/  pop/  sixties/
</screen>
</listitem>
</itemizedlist>
</sect2>
<sect2 id="sect_03_02_03"><title>The most important files and directories</title>
<sect3 id="sect_03_02_03_01"><title>The kernel</title>
<para>The kernel is the heart of the system.  It manages the communication between the underlying hardware and the peripherals.  The kernel also makes sure that processes and daemons (server processes) are started and stopped at the exact right times.  The kernel has a lot of other important tasks, so many that there is a special kernel-development mailing list on this subject only, where huge amounts of information are shared.  It would lead us too far to discuss the kernel in detail.  For now it suffices to know that the kernel is the most important file on the system.</para>
</sect3>
<sect3 id="sect_03_02_03_02"><title>The shell</title>
<sect4><title>What is a shell?</title>
<para>When I was looking for an appropriate explanation on the concept of a <emphasis>shell</emphasis>, it gave me more trouble than I expected.  All kinds of definitions are available, ranging from the simple comparison that <quote>the shell is the steering wheel of the car</quote>, to the vague definition in the Bash manual which says that <quote>bash is an sh-compatible command language interpreter,</quote> or an even more obscure expression, <quote>a shell manages the interaction between the system and its users</quote>.  A shell is much more than that.</para>
<para>A shell can best be compared with a way of talking to the computer, a language.  Most users do know that other language, the point-and-click language of the desktop.  But in that language the computer is leading the conversation, while the user has the passive role of picking tasks from the ones presented.  It is very difficult for a programmer to include all options and possible uses of a command in the GUI-format.  Thus, GUIs are almost always less capable than the command or commands that form the backend.</para>
<para>The shell, on the other hand, is an advanced way of communicating with the system, because it allows for two-way conversation and taking initiative.  Both partners in the communication are equal, so new ideas can be tested.  The shell allows the user to handle a system in a very flexible way. An additional asset is that the shell allows for task automation.</para>
</sect4>
<sect4><title>Shell types</title>
<para>Just like people know different languages and dialects, the computer knows different shell types:</para>
<itemizedlist>
<listitem><para><command>sh</command> or Bourne Shell: the original shell still used on UNIX systems and in UNIX related environments.  This is the basic shell, a small program with few features.  When in POSIX-compatible mode, <command>bash</command> will emulate this shell.</para></listitem>
<listitem><para><command>bash</command> or Bourne Again shell: the standard GNU shell, intuitive and flexible.  Probably most advisable for beginning users while being at the same time a powerful tool for the advanced and professional user.  On Linux, <command>bash</command> is the standard shell for common users.  This shell is a so-called <emphasis>superset</emphasis> of the Bourne shell, a set of add-ons and plug-ins.  This means that the Bourne Again shell is compatible with the Bourne shell: commands that work in <command>sh</command>, also work in <command>bash</command>.  However, the reverse is not always the case.  All examples and exercises in this book use <command>bash</command>.</para></listitem>
<listitem><para><command>csh</command> or C shell: the syntax of this shell resembles that of the C programming language.  Sometimes asked for by programmers.</para></listitem>
<listitem><para><command>tcsh</command> or Turbo C shell: a superset of the common C shell, enhancing user-friendliness and speed.</para></listitem>
<listitem><para><command>ksh</command> or the Korn shell: sometimes appreciated by people with a UNIX background.  A superset of the Bourne shell; with standard configuration a nightmare for beginning users.</para></listitem>
</itemizedlist>

<para>The file <filename>/etc/shells</filename> gives an overview of known shells on a Linux system:</para>
<screen>
<prompt>mia:~&gt;</prompt> <command>cat /etc/shells</command>
/bin/bash
/bin/sh
/bin/tcsh
/bin/csh
</screen>
<note><title>Fake Bourne shell</title>
<para>Note that <filename>/bin/sh</filename> is usually a link to Bash, which will execute in Bourne shell compatible mode when called on this way.</para>
</note>
<para>Your default shell is set in the <filename>/etc/passwd</filename> file, like this line for user <emphasis>mia</emphasis>:</para>
<screen>
mia:L2NOfqdlPrHwE:504:504:Mia Maya:/home/mia:/bin/bash
</screen>
<para>To switch from one shell to another, just enter the name of the new shell in the active terminal.  The system finds the directory where the name occurs using the <varname>PATH</varname> settings, and since a shell is an executable file (program), the current shell activates it and it gets executed.  A new prompt is usually shown, because each shell has its typical appearance:</para>
<screen>
<prompt>mia:~&gt;</prompt> <command>tcsh</command>
<prompt>[mia@post21 ~]$</prompt>
</screen>
</sect4>
<sect4><title>Which shell am I using?</title>
<para>If you don't know which shell you are using, either check the line for your account in <filename>/etc/passwd</filename> or type the command</para>
<cmdsynopsis><command>echo <varname>$SHELL</varname></command></cmdsynopsis>
</sect4>
</sect3>
<sect3 id="sect_03_02_03_03"><title>Your home directory</title>

<para>Your home directory is your default destination when connecting to the system.  In most cases it is a subdirectory of <filename>/home</filename>, though this may vary.  Your home directory may be located on the hard disk of a remote file server; in that case your home directory may be found in <filename>/nethome/your_user_name</filename>.  In another case the system administrator may have opted for a less comprehensible layout and your home directory may be on <filename>/disk6/HU/07/jgillard</filename>.</para>
<para>Whatever the path to your home directory, you don't have to worry too much about it.  The correct path to your home directory is stored in the <varname>HOME</varname> environment variable, in case some program needs it.  With the <command>echo</command> command you can display the content of this variable:</para>
<screen>
<prompt>orlando:~&gt;</prompt> <command>echo $HOME</command>
/nethome/orlando
</screen>
<para>You can do whatever you like in your home directory.  You can put as many files in as many directories as you want, although the total amount of data and files is naturally limited because of the hardware and size of the partitions, and sometimes because the system administrator has applied a quota system.  Limiting disk usage was common practice when hard disk space was still expensive.  Nowadays, limits are almost exclusively applied in large environments.  You can see for yourself if a limit is set using the <command>quota</command> command:</para>
<screen>
<prompt>pierre@lamaison:/&gt;</prompt> <command>quota -v</command>
Diskquotas for user pierre (uid 501): none
</screen>
<para>In case quotas have been set, you get a list of the limited partitions and their specific limitations.  Exceeding the limits may be tolerated during a grace period with fewer or no restrictions at all.  Detailed information can be found using the <command>info <parameter>quota</parameter></command> or <command>man <parameter>quota</parameter></command> commands.</para>
<note><title>No Quota?</title>
<para>If your system can not find the <command>quota</command>, then no limitation of file system usage is being applied.</para>
</note>
<para>Your home directory is indicated by a tilde (~), shorthand for <filename>/path_to_home/user_name</filename>.  This same path is stored in the <varname>HOME</varname> variable, so you don't have to do anything to activate it.  A simple application: switch from <filename>/var/music/albums/arno/2001</filename> to <filename>images</filename> in your home directory using one elegant command:</para>
<screen>
<prompt>rom:/var/music/albums/arno/2001&gt;</prompt> <command>cd ~/images</command>

<prompt>rom:~/images&gt;</prompt> <command>pwd</command>
/home/rom/images
</screen>
<para>Later in this chapter we will talk about the commands for managing files and directories in order to keep your home directory tidy.</para>
</sect3>
</sect2>
<sect2 id="sect_03_02_04"><title>The most important configuration files</title>
<para>As we mentioned before, most configuration files are stored in the <filename>/etc</filename> directory.  Content can be viewed using the <command>cat</command> command, which sends text files to the standard output (usually your monitor).  The syntax is straight forward:</para>
<cmdsynopsis><command>cat <filename>file1</filename> <filename>file2</filename> ... <filename>fileN</filename></command></cmdsynopsis>
<para>In this section we try to give an overview of the most common configuration files.  This is certainly not a complete list.  Adding extra packages may also add extra configuration files in <filename>/etc</filename>.  When reading the configuration files, you will find that they are usually quite well commented and self-explanatory.  Some files also have man pages which contain extra documentation, such as <command>man <parameter>group</parameter></command>.</para>

<table frame="all">
<title>Most common configuration files</title>
<tgroup align="left" cols="2" colsep="1" rowsep="1">
<thead>
<row>
<entry>File</entry>
<entry>Information/service</entry>
</row>
</thead>
<tbody>
<row>
<entry><filename>aliases</filename>
                </entry>
                <entry>Mail aliases file for use with the Sendmail and Postfix mail server.  Running a mail server on each and every system has long been common use in the UNIX world, and almost every Linux distribution still comes with a Sendmail package.  In this file local user names are matched with real names as they occur in E-mail addresses, or with other local addresses.    
</entry>
                </row>
                <row><entry>
                <filename>apache</filename>
                </entry><entry>Config files for the Apache web server.
                </entry>
                </row>
        <row><entry>
                <filename>bashrc</filename>
                </entry><entry>The system-wide configuration file for the Bourne Again SHell.  Defines functions and aliases for all users.  Other shells may have their own system-wide config files, like <filename>cshrc</filename>.
</entry>
                </row>

                <row><entry>
                <filename>crontab</filename> and the <filename>cron.*</filename> directories
                </entry><entry>Configuration of tasks that need to be executed periodically -  backups, updates of the system databases, cleaning of the system, rotating logs etc.  
                </entry>
                </row>

                <row><entry>
                <filename>default</filename>
                </entry><entry>Default options for certain commands, such as <command>useradd</command>.
</entry>
                </row>

                <row><entry>
                <filename>filesystems</filename>
                </entry><entry>Known file systems: ext3, vfat, iso9660 etc.
                </entry>
                </row>

                <row><entry>
                <filename>fstab</filename>
                </entry><entry>Lists partitions and their <emphasis>mount points</emphasis>.
                </entry>
                </row>

                <row><entry>
                <filename>ftp*</filename>
                </entry><entry>Configuration of the ftp-server: who can connect, what parts of the system are accessible etc.
                </entry>
                </row>

                <row><entry>
                <filename>group</filename>
                </entry><entry>Configuration file for user groups.  Use the shadow utilities <command>groupadd</command>, <command>groupmod</command> and <command>groupdel</command> to edit this file.  Edit manually only if you really know what you are doing.
                </entry>
                </row>

                <row><entry>
                <filename>hosts</filename>
                </entry><entry>A list of machines that can be contacted using the network, but without the need for a domain name service.  This has nothing to do with the system's network configuration, which is done in <filename>/etc/sysconfig</filename>.
                </entry>
                </row>

                <row><entry>
                <filename>inittab</filename>
                </entry><entry>Information for booting: mode, number of text consoles etc.
                </entry>
                </row>

                <row><entry>
                <filename>issue</filename>
                </entry><entry>Information about the distribution (release version and/or kernel info).
                </entry>
                </row>

                <row><entry>
                <filename>ld.so.conf</filename>
                </entry><entry>Locations of library files.
                </entry>
                </row>

                <row><entry>
                <filename>lilo.conf</filename>, <filename>silo.conf</filename>, <filename>aboot.conf</filename> etc.
                </entry><entry>Boot information for the LInux LOader, the system for booting that is now gradually being replaced with GRUB.
                </entry>
                </row>

                <row><entry>
                <filename>logrotate.*</filename>
                </entry><entry>Rotation of the logs, a system preventing the collection of huge amounts of log files.
                </entry>
                </row>
<row><entry>
                <filename>mail</filename>
                </entry>
<entry>Directory containing instructions for the behavior of the mail server.</entry>
                </row>


                <row><entry>
                <filename>modules.conf</filename>
</entry><entry>Configuration of modules that enable special features (drivers).
                </entry>
                </row>

                <row><entry>
                <filename>motd</filename>
                </entry><entry>Message Of The Day: Shown to everyone who connects to the system (in text mode), may be used by the system admin to announce system services/maintenance etc.
                </entry>
                </row>

                <row><entry>
                <filename>mtab</filename>
                </entry><entry>Currently mounted file systems.  It is advised to never edit this file.
                </entry>
                </row>

                <row><entry>
                <filename>nsswitch.conf</filename>
                </entry><entry>Order in which to contact the name resolvers when a process demands resolving of a host name.
                </entry>
                </row>

                <row><entry>
                <filename>pam.d</filename>
                </entry><entry>Configuration of authentication modules.
                </entry>
                </row>

                <row><entry>
                <filename>passwd</filename>
                </entry><entry>Lists local users.  Use the shadow utilities <command>useradd</command>, <command>usermod</command> and <command>userdel</command> to edit this file.  Edit manually only when you really know what you are doing.
                </entry>
                </row>

                <row><entry>
                <filename>printcap</filename>
                </entry><entry>Outdated but still frequently used printer configuration file.  Don't edit this manually unless you really know what you are doing.
                </entry>
                </row>

                <row><entry>
                <filename>profile</filename>
                </entry><entry>System wide configuration of the shell environment: variables, default properties of new files, limitation of resources etc.
                </entry>
                </row>

                <row><entry>
                <filename>rc*</filename>
                </entry><entry>Directories defining active services for each run level.
                </entry>
                </row>

                <row><entry>
                <filename>resolv.conf</filename>
                </entry><entry>Order in which to contact DNS servers (Domain Name Servers only).
                </entry>
                </row>

                <row><entry>
                <filename>sendmail.cf</filename>
                </entry><entry>Main config file for the Sendmail server.
                </entry>
                </row>

                <row><entry>
                <filename>services</filename>
                </entry><entry>Connections accepted by this machine (open ports).
                </entry>
                </row>

                <row><entry>
                <filename>sndconfig</filename> or <filename>sound</filename>
                </entry><entry>Configuration of the sound card and sound events.
                </entry>
                </row>

                <row><entry>
                <filename>ssh</filename>
                </entry><entry>Directory containing the config files for secure shell client and server.
                </entry>
                </row>

                <row><entry>
                <filename>sysconfig</filename>
                </entry><entry>Directory containing the system configuration files: mouse, keyboard, network, desktop, system clock, power management etc. (specific to RedHat)
                </entry>
                </row>

                <row><entry>
                <filename>X11</filename>
                </entry><entry>Settings for the graphical server, X.  RedHat uses XFree, which is reflected in the name of the main configuration file, XFree86Config.  Also contains the general directions for the window managers available on the system, for example <command>gdm</command>, <command>fvwm</command>, <command>twm</command>, etc.
                </entry>
                </row>

                <row><entry>
                <filename>xinetd.*</filename> or <filename>inetd.conf</filename>
                </entry>
<entry>Configuration files for Internet services that are run from the system's (extended) Internet services daemon (servers that don't run an independent daemon).</entry>
                </row>

</tbody>
</tgroup>
</table>

<para>Throughout this guide we will learn more about these files and study some of them in detail.</para>

</sect2>
<sect2 id="sect_03_02_05"><title>The most common devices</title>
<para>Devices, generally every peripheral attachment of a PC that is not the CPU itself, is presented to the system as an entry in the <filename>/dev</filename> directory.  One of the advantages of this UNIX-way of handling devices is that neither the user nor the system has to worry much about the specification of devices.</para>
<para>Users that are new to Linux or UNIX in general are often overwhelmed by the amount of new names and concepts they have to learn.  That is why a list of common devices is included in this introduction.</para>
<table frame="all"><title>Common devices</title>
                <tgroup align="left" cols="2" colsep="1" rowsep="1">
                <thead>
                <row>

                <entry>Name</entry><entry>Device</entry></row>
</thead>
<tbody>
                <row><entry><filename>cdrom</filename></entry><entry>CD drive</entry></row>
                <row><entry><filename>console</filename></entry><entry>Special entry for the currently used console.</entry></row>
                <row><entry><filename>cua*</filename></entry><entry>Serial ports</entry></row>
<row><entry><filename>dsp*</filename></entry><entry>Devices for sampling and recording</entry></row>
                <row><entry><filename>fd*</filename></entry><entry>Entries for most kinds of floppy drives, the default is <filename>/dev/fd0</filename>, a floppy drive for 1.44 MB floppies.</entry></row>
                <row><entry><filename>hd[a-t][1-16]</filename></entry><entry>Standard support for IDE drives with maximum amount of partitions each.</entry></row>
                <row><entry><filename>ir*</filename></entry><entry>Infrared devices</entry></row>
                <row><entry><filename>isdn*</filename></entry><entry>Management of ISDN connections</entry></row>
                <row><entry><filename>js*</filename></entry><entry>Joystick(s)</entry></row>
                <row><entry><filename>lp*</filename></entry><entry>Printers</entry></row>
                <row><entry><filename>mem</filename></entry><entry>Memory</entry></row>
                <row><entry><filename>midi*</filename></entry><entry>midi player</entry></row>
                <row><entry><filename>mixer*</filename> and <filename>music</filename></entry><entry>Idealized model of a mixer (combines or adds signals)</entry></row>
                <row><entry><filename>modem</filename></entry><entry>Modem</entry></row>
                <row><entry><filename>mouse</filename> (also msmouse, logimouse, psmouse, input/mice, psaux)</entry><entry>All kinds of mouses</entry></row>
                <row><entry><filename>null</filename></entry><entry>Bottomless garbage can</entry></row>
                <row><entry><filename>par*</filename></entry><entry>Entries for parallel port support</entry></row>
                <row><entry><filename>pty*</filename></entry><entry>Pseudo terminals</entry></row>
                <row><entry><filename>radio*</filename></entry><entry>For Radio Amateurs (HAMs).</entry></row>
                <row><entry><filename>ram*</filename></entry><entry>boot device</entry></row>
                <row><entry><filename>sd*</filename></entry><entry>SCSI disks with their partitions</entry></row>
                <row><entry><filename>sequencer</filename></entry><entry>For audio applications using the synthesizer features of the sound card (MIDI-device controller)</entry></row>
                <row><entry><filename>tty*</filename></entry><entry>Virtual consoles simulating vt100 terminals.</entry></row>
                <row><entry><filename>usb*</filename></entry><entry>USB card and scanner</entry></row>
                <row><entry><filename>video*</filename></entry><entry>For use with a graphics card supporting video.</entry></row>
</tbody>
</tgroup>
</table>

</sect2>

<sect2 id="sect_03_02_06"><title>The most common variable files</title>

<para>In the <filename>/var</filename> directory we find a set of directories for storing specific non-constant data (as opposed to the ls program or the system configuration files, which change relatively infrequently or never at all).  All files that change frequently, such as log files, mailboxes, lock files, spoolers etc. are kept in a subdirectory of <filename>/var</filename>.</para>
<para>As a security measure these files are usually kept in separate parts from the main system files, so we can keep a close eye on them and set stricter permissions where necessary.  A lot of these files also need more permissions than usual, like <filename>/var/tmp</filename>, which needs to be writable for everyone.  A lot of user activity might be expected here, which might even be generated by anonymous Internet users connected to your system.  This is one reason why the <filename>/var</filename> directory, including all its subdirectories, is usually on a separate partition.  This way, there is for instance no risk that a mail bomb, for instance, fills up the rest of the file system, containing more important data such as your programs and configuration files.</para>
<note><title>/var/tmp and /tmp</title>
<para>Files in <filename>/tmp</filename> can be deleted without notice, by regular system tasks or because of a system reboot.  On some (customized) systems, also <filename>/var/tmp</filename> might behave unpredictably.  Nevertheless, since this is not the case by default, we advise to use the <filename>/var/tmp</filename> directory for saving temporary files.  When in doubt, check with your system administrator.  If you manage your own system, you can be reasonably sure that this is a safe place if you did not consciously change settings on <filename>/var/tmp</filename> (as root, a normal user can not do this).</para>
<para>Whatever you do, try to stick to the privileges granted to a normal user - don't go saving files directly under the root (/) of the file system, don't put them in <filename>/usr</filename> or some subdirectory or in another reserved place.  This pretty much limits your access to safe file systems.</para>
</note>
<para>One of the main security systems on a UNIX system, which is naturally implemented on every Linux machine as well, is the log-keeping facility, which logs all user actions, processes, system events etc.  The configuration file of the so-called <emphasis>syslogdaemon</emphasis> determines which and how long logged information will be kept.  The default location of all logs is <filename>/var/log</filename>, containing different files for access log, server logs, system messages etc.</para>
<para>In <filename>/var</filename> we typically find server data, which is kept here to separate it from critical data such as the server program itself and its configuration files.  A typical example on Linux systems is <filename>/var/www</filename>, which contains the actual HTML pages, scripts and images that a web server offers.  The FTP-tree of an FTP server (data that can be downloaded by a remote client) is also best kept in one of <filename>/var</filename>'s subdirectories.  Because this data is publicly accessible and often changeable by anonymous users, it is safer to keep it here, away from partitions or directories with sensitive data.</para>
<para>On most workstation installations, <filename>/var/spool</filename> will at least contain an <filename>at</filename> and a <filename>cron</filename> directory, containing scheduled tasks.  In office environments this directory usually contains <filename>lpd</filename> as well, which holds the print queue(s) and further printer configuration files, as well as the printer log files.</para>
<para>On server systems we will generally find <filename>/var/spool/mail</filename>, containing incoming mails for local users, sorted in one file per user, the user's <quote>inbox</quote>.  A related directory is <filename>mqueue</filename>, the spooler area for unsent mail messages.  These parts of the system can be very busy on mail servers with a lot of users.  News servers also use the <filename>/var/spool</filename> area because of the enormous amounts of messages they have to process.</para>
<para>The <filename>/var/lib/rpm</filename> directory is specific to RPM-based (RedHat Package Manager) distributions; it is where RPM package information is stored.</para>
</sect2>

</sect1>

<sect1 id="sect_03_03"><title>Manipulating files</title>
<sect2 id="sect_03_03_01"><title>Viewing file properties</title>
<sect3 id="sect_03_03_01_01"><title>More about ls</title>
<para>Besides the name of the file, <command>ls</command> can give a lot of other information, such as the file type, as we already discussed.  It can also show permissions on a file, file size, inode number, creation date and time, owners and amount of links to the file.  With the <option>-a</option> option to <command>ls</command>, files that are normally hidden from view can be displayed as well.  These are files that have a name starting with a dot.  A couple of typical examples include the configuration files in your home directory.  When you've worked with a certain system for a while, you will notice that tens of files and directories have been created that are not automatically listed in a directory index.  Next to that, every directory contains a file named just dot (.) and one with two dots (..), which are used in combination with their inode number to determine the directory's position in the file system's tree structure.</para>
<para>You should really read the Info pages about <command>ls</command>, since it is a very common command with a lot of useful options.  Options can be combined, as is the case with most UNIX commands and their options.  A common combination is <command>ls <option>-al</option></command>; it shows a long list of files and their properties as well as the destinations that any symbolic links point to.  <command>ls <option>-latr</option></command> displays the same files, only now in reversed order of the last change, so that the file changed most recently occurs at the bottom of the list.  Here are a couple of examples:</para>
<screen>
<prompt>krissie:~/mp3&gt;</prompt> <command>ls</command>
Albums/  Radio/  Singles/  gene/  index.html

<prompt>krissie:~/mp3&gt;</prompt> <command>ls -a</command>
./   .thumbs  Radio     gene/
../  Albums/  Singles/  index.html

<prompt>krissie:~/mp3&gt;</prompt> <command>ls -l Radio/</command>
total 8
drwxr-xr-x    2 krissie krissie  4096 Oct 30  1999 Carolina/
drwxr-xr-x    2 krissie krissie  4096 Sep 24  1999 Slashdot/

<prompt>krissie:~/mp3&gt;</prompt> <command>ls -ld Radio/</command>
drwxr-xr-x    4 krissie krissie  4096 Oct 30  1999 Radio/

<prompt>krissie:~/mp3&gt;</prompt> <command>ls -ltr</command>
total 20
drwxr-xr-x    4 krissie krissie  4096 Oct 30  1999 Radio/
-rw-r--r--    1 krissie krissie   453 Jan  7  2001 index.html
drwxrwxr-x   30 krissie krissie  4096 Oct 20 17:32 Singles/
drwxr-xr-x    2 krissie krissie  4096 Dec  4 23:22 gene/
drwxrwxr-x   13 krissie krissie  4096 Dec 21 11:40 Albums/
</screen>
<para>On most Linux versions <command>ls</command> is <emphasis>aliased</emphasis> to color-ls by default.  This feature allows to see the file type without using any options to <command>ls</command>.  To achieve this, every file type has its own color.  The standard scheme is in <filename>/etc/DIR_COLORS</filename>:</para>
<table frame="all"><title>Color-ls default color scheme</title>
                <tgroup align="left" cols="2" colsep="1" rowsep="1">
                <thead>
                <row>

                <entry>Color</entry><entry>File type</entry></row>
</thead>
<tbody>
                <row><entry>blue</entry><entry>directories</entry></row>
                <row><entry>red</entry><entry>compressed archives</entry></row>
                <row><entry>white</entry><entry>text files</entry></row>
                <row><entry>pink</entry><entry>images</entry></row>
                <row><entry>cyan</entry><entry>links</entry></row>
                <row><entry>yellow</entry><entry>devices</entry></row>
                <row><entry>green</entry><entry>executables</entry></row>
                <row><entry>flashing red</entry><entry>broken links</entry></row>
</tbody>
</tgroup>
</table>

<para>More information is in the man page.  The same information was in earlier days displayed using suffixes to every non-standard file name.  For mono-color use (like printing a directory listing) and for general readability, this scheme is still in use:</para>
<table frame="all"><title>Default suffix scheme for ls</title>

<tgroup align="left" cols="2" colsep="1" rowsep="1">
                <thead>
                <row>

                <entry>Character</entry><entry>File type</entry></row>
</thead>
<tbody>
                <row><entry>nothing</entry><entry>regular file</entry></row>
                <row><entry>/</entry><entry>directory</entry></row>
                <row><entry>*</entry><entry>executable file</entry></row>
                <row><entry>@</entry><entry>link</entry></row>
                <row><entry>=</entry><entry>socket</entry></row>
                <row><entry>|</entry><entry>named pipe</entry></row>
</tbody>
</tgroup>
</table>
<para>A description of the full functionality and features of the <command>ls</command> command can be read with <command>info <parameter>coreutils ls</parameter></command>.</para>
</sect3>
<sect3 id="sect_03_03_01_02"><title>More tools</title>
<para>To find out more about the kind of data we are dealing with, we use the <command>file</command> command.  By applying certain tests that check properties of a file in the file system, magic numbers and language tests, <command>file</command> tries to make an educated guess about the format of a file.  Some examples:</para>
<screen>
<prompt>mike:~&gt;</prompt> <command>file Documents/</command>
Documents/: directory

<prompt>mike:~&gt;</prompt> <command>file high-tech-stats.pdf</command>
high-tech-stats.pdf: PDF document, version 1.2

<prompt>mike:~&gt;</prompt> <command>file Nari-288.rm</command>
Nari-288.rm: RealMedia file

<prompt>mike:~&gt;</prompt> <command>file bijlage10.sdw</command>
bijlage10.sdw: Microsoft Office Document

<prompt>mike:~&gt;</prompt> <command>file logo.xcf</command>
logo.xcf: GIMP XCF image data, version 0, 150 x 38, RGB Color

<prompt>mike:~&gt;</prompt> <command>file cv.txt</command>
cv.txt: ISO-8859 text

<prompt>mike:~&gt;</prompt> <command>file image.png</command>
image.png: PNG image data, 616 x 862, 8-bit grayscale, non-interlaced

<prompt>mike:~&gt;</prompt> <command>file figure</command>
figure: ASCII text

<prompt>mike:~&gt;</prompt> <command>file me+tux.jpg</command>
me+tux.jpg: JPEG image data, JFIF standard 1.01, resolution (DPI),
            "28 Jun 1999", 144 x 144

<prompt>mike:~&gt;</prompt> <command>file 42.zip.gz</command>
42.zip.gz: gzip compressed data, deflated, original filename,
         `42.zip', last modified: Thu Nov  1 23:45:39 2001, os: Unix

<prompt>mike:~&gt;</prompt> <command>file vi.gif</command>
vi.gif: GIF image data, version 89a, 88 x 31

<prompt>mike:~&gt;</prompt> <command>file slide1</command>
slide1: HTML document text

<prompt>mike:~&gt;</prompt> <command>file template.xls</command>
template.xls: Microsoft Office Document

<prompt>mike:~&gt;</prompt> <command>file abook.ps</command>
abook.ps: PostScript document text conforming at level 2.0

<prompt>mike:~&gt;</prompt> <command>file /dev/log</command>
/dev/log: socket

<prompt>mike:~&gt;</prompt> <command>file /dev/hda</command>
/dev/hda: block special (3/0)
</screen>
<para>The <command>file</command> command has a series of options, among others the <option>-z</option> option to look into compressed files.  See <command>info <parameter>file</parameter></command> for a detailed description.  Keep in mind that the results of <command>file</command> are not absolute, it is only a guess.  In other words, <command>file</command> can be tricked.</para>

<note><title>Why all the fuss about file types and formats?</title>
<para>Shortly, we will discuss a couple of command-line tools for looking at <emphasis>plain text files</emphasis>.  These tools will not work when used on the wrong type of files.  In the worst case, they will crash your terminal and/or make a lot of beeping noises.  If this happens to you, just close the terminal session and start a new one.  But try to avoid it, because it is usually very disturbing for other people.</para>
</note>
</sect3>
</sect2>

<sect2 id="sect_03_03_02"><title>Creating and deleting files and directories</title>
<sect3 id="sect_03_03_02_01"><title>Making a mess...</title>
<para>... Is not a difficult thing to do.  Today almost every system is networked, so naturally files get copied from one machine to another.  And especially when working in a graphical environment, creating new files is a piece of cake and is often done without the approval of the user.  To illustrate the problem, here's the full content of a new user's directory, created on a standard RedHat system:</para>
<screen>
<prompt>[newuser@blob user]$</prompt> <command>ls -al</command>
total 32
drwx------   3 user 	user        4096 Jan 16 13:32 .
drwxr-xr-x   6 root     root        4096 Jan 16 13:32 ..
-rw-r--r--   1 user 	user      24 Jan 16 13:32 .bash_logout
-rw-r--r--   1 user 	user     191 Jan 16 13:32 .bash_profile
-rw-r--r--   1 user 	user     124 Jan 16 13:32 .bashrc
drwxr-xr-x   3 user 	user    4096 Jan 16 13:32 .kde
-rw-r--r--   1 user 	user    3511 Jan 16 13:32 .screenrc
-rw-------   1 user 	user      61 Jan 16 13:32 .xauthDqztLr
</screen>
<para>On first sight, the content of a <quote>used</quote> home directory doesn't look that bad either:</para>
<screen>
<prompt>olduser:~&gt;</prompt> <command>ls</command>
app-defaults/ crossover/   Fvwm@     mp3/      OpenOffice.org638/
articles/     Desktop/     GNUstep/  Nautilus/ staroffice6.0/
bin/          Desktop1/    images/   nqc/      training/
brol/         desktoptest/ Machines@ ns_imap/  webstart/
C/            Documents/   mail/     nsmail/   xml/
closed/       Emacs@       Mail/     office52/ Xrootenv.0
</screen>
<para>But when all the directories and files starting with a dot are included, there are 185 items in this directory.  This is because most applications have their own directories and/or files, containing user-specific settings, in the home directory of that user.  Usually these files are created the first time you start an application.  In some cases you will be notified when a non-existent directory needs to be created, but most of the time everything is done automatically.</para>
<para>Furthermore, new files are created seemingly continuously because users want to save files, keep different versions of their work, use Internet applications, and download files and attachments to their local machine.  It doesn't stop.  It is clear that one definitely needs a scheme to keep an overview on things.</para>
<para>In the next section, we will discuss our means of keeping order.  We only discuss text tools available to the shell, since the graphical tools are very intuitive and have the same look and feel as the well known point-and-click MS Windows-style file managers, including graphical help functions and other features you expect from this kind of applications.  The following list is an overview of the most popular file managers for GNU/Linux.  Most file managers can be started from the menu of your desktop manager, or by clicking your home directory icon, or from the command line, issuing these commands:</para>
<itemizedlist>
<listitem><para><command>nautilus</command>: The default file manager in Gnome, the GNU desktop.  Excellent documentation about working with this tool can be found at <ulink url="http://www.gnome.org/learn/users-guide/latest/gosnautilus-1.html">http://www.gnome.org</ulink>.</para></listitem>
<listitem><para><command>konqueror</command>: The file manager typically used on a KDE desktop.  The handbook is at <ulink url="http://docs.kde.org/en/3.1/kdebase/konqueror/">http://docs.kde.org</ulink>.</para></listitem>
<listitem><para><command>mc</command>: Midnight Commander, the Unix file manager after the fashion of Norton Commander.  All documentation available from <ulink url="http://www.gnu.org/directory/midnightcommander.html">http://gnu.org/directory/</ulink> or a mirror, such as <ulink url="http://www.ibiblio.org"></ulink>.</para></listitem>
</itemizedlist>
<para>These applications are certainly worth giving a try and usually impress newcomers to Linux, if only because there is such a wide variety: these are only the most popular tools for managing directories and files, and many other projects are being developed.  Now let's find out about the internals and see how these graphical tools use common UNIX commands.</para>

</sect3>
<sect3 id="sect_03_03_02_03"><title>The tools</title>
<sect4><title>Creating directories</title>
<para>A way of keeping things in place is to give certain files specific default locations by creating directories and subdirectories (or folders and sub-folders if you wish).  This is done with the <command>mkdir</command> command:</para>
<screen>
<prompt>richard:~&gt;</prompt> <command>mkdir archive</command>

<prompt>richard:~&gt;</prompt> <command>ls -ld archive</command>
drwxrwxrwx  2 richard richard           4096 Jan 13 14:09 archive/
</screen>
<para>Creating directories and subdirectories in one step is done using the <option>-p</option> option:</para>
<screen>
<prompt>richard:~&gt;</prompt> <command>cd archive</command>

<prompt>richard:~/archive&gt;</prompt> <command>mkdir 1999 2000 2001</command>

<prompt>richard:~/archive&gt;</prompt> <command>ls</command>
1999/  2000/  2001/

<prompt>richard:~/archive&gt;</prompt> <command>mkdir 2001/reports/Restaurants-Michelin/</command>
mkdir: cannot create directory `2001/reports/Restaurants-Michelin/':
No such file or directory

<prompt>richard:~/archive&gt;</prompt> <command>mkdir -p 2001/reports/Restaurants-Michelin/</command>

<prompt>richard:~/archive&gt;</prompt> <command>ls 2001/reports/</command>
Restaurants-Michelin/
</screen>
<para>If the new file needs other permissions than the default file creation permissions, the new access rights can be set in one move, still using the <command>mkdir</command> command, see the Info pages for more.  We are going to discuss access modes in the next section on File Security.</para>
<para>The name of a directory has to comply with the same rules as those applied on regular file names.  One of the most important restrictions is that you can't have two files with the same name in one directory (but keep in mind that Linux is, like UNIX, a case sensitive operating system).  There are virtually no limits on the length of a file name, but it is usually kept shorter than 80 characters, so it can fit on one line of a terminal.  You can use any character you want in a file name, although it is advised to exclude characters that have a special meaning to the shell.  When in doubt, check with <xref linkend="app3"></xref>.</para>
</sect4>
<sect4><title>Moving files</title>
<para>Now that we have properly structured our home directory, it is time to clean up unclassified files using the <command>mv</command> command:</para>
<screen>
<prompt>richard:~/archive&gt;</prompt> <command>mv ../report[1-4].doc reports/Restaurants-Michelin/</command>
</screen>
<para>This command is also applicable when renaming files:</para>
<screen>
<prompt>richard:~&gt;</prompt> <command>ls To_Do</command>
-rw-rw-r--    1 richard richard      2534 Jan 15 12:39 To_Do

<prompt>richard:~&gt;</prompt> <command>mv To_Do done</command>

<prompt>richard:~&gt;</prompt> <command>ls -l done</command>
-rw-rw-r--    1 richard richard      2534 Jan 15 12:39 done
</screen>
<para>It is clear that only the name of the file changes.  All other properties remain the same.</para>
<para>Detailed information about the syntax and features of the <command>mv</command> command can be found in the man or Info pages.  The use of this documentation should always be your first reflex when confronted with a problem.  The answer to your problem is likely to be in the system documentation.  Even experienced users read man pages every day, so beginning users should read them all the time.  After a while, you will get to know the most common options to the common commands, but you will still need the documentation as a primary source of information.  Note that the information contained in the HOWTOs, FAQs, man pages and such is slowly being merged into the Info pages, which are today the most up-to-date source of online (as in readily available on the system) documentation.</para>
</sect4>
<sect4><title>Copying files</title>
<para>Copying files and directories is done with the <command>cp</command> command.  A useful option is recursive copy (copy all underlying files and subdirectories), using the <option>-R</option> option to <command>cp</command>.  The general syntax is</para>
<cmdsynopsis><command>cp <optional><option>-R</option></optional> <filename>fromfile</filename> <filename>tofile</filename></command></cmdsynopsis>
<para>As an example the case of user <emphasis>newguy</emphasis>, who wants the same Gnome desktop settings user <emphasis>oldguy</emphasis> has.  One way to solve the problem is to copy the settings of <emphasis>oldguy</emphasis> to the home directory of <emphasis>newguy</emphasis>:</para>
<screen>
<prompt>victor:~&gt;</prompt> <command>cp -R ../oldguy/.gnome/ .</command>
</screen>
<para>This gives some errors involving file permissions, but all the errors have to do with private files that <emphasis>newguy</emphasis> doesn't need anyway.  We will discuss in the next part how to change these permissions in case they really are a problem.</para>

</sect4>
<sect4><title>Removing files</title>
<para>Use the <command>rm</command> command to remove single files, <command>rmdir</command> to remove empty directories.  (Use <command>ls <option>-a</option></command> to check whether a directory is empty or not).  The <command>rm</command> command also has options for removing non-empty directories with all their subdirectories, read the Info pages for these rather dangerous options.</para>
<note><title>How empty can a directory be?</title>
<para>It is normal that the directories . (dot) and .. (dot-dot) can't be removed, since they are also necessary in an empty directory to determine the directories ranking in the file system hierarchy.</para></note>
<para>On Linux, just like on UNIX, there is no garbage can - at least not for the shell, although there are plenty of solutions for graphical use.  So once removed, a file is really gone, and there is generally no way to get it back unless you have backups, or you are really fast and have a real good system administrator.  To protect the beginning user from this malice, the interactive behavior of the <command>rm</command>, <command>cp</command> and <command>mv</command> commands can be activated using the <option>-i</option> option.  In that case the system won't immediately act upon request.  Instead it will ask for confirmation, so it takes an additional click on the <keycap>Enter</keycap> key to inflict the damage:</para>
<screen>
<prompt>mary:~&gt;</prompt> <command>rm -ri archive/</command>
rm: descend into directory `archive'? <command>y</command>
rm: descend into directory `archive/reports'? <command>y</command>
rm: remove directory `archive/reports'? <command>y</command>
rm: descend into directory `archive/backup'? <command>y</command>
rm: remove `archive/backup/sysbup200112.tar'? <command>y</command>
rm: remove directory `archive/backup'? <command>y</command>
rm: remove directory `archive'? <command>y</command>
</screen>
<para>We will discuss how to make this option the default in <xref linkend="chap_07"></xref>, which discusses customizing your shell environment.</para> 
</sect4>
</sect3>
</sect2>
<sect2 id="sect_03_03_03"><title>Finding files</title>
<sect3 id="sect_03_03_03_01"><title>Using shell features</title>
<para>In the example on moving files we already saw how the shell can manipulate multiple files at once.  In that example, the shell finds out automatically what the user means by the requirements between the square braces <quote>[</quote> and <quote>]</quote>.  The shell can substitute ranges of numbers and upper or lower case characters alike.  It also substitutes as many characters as you want with an asterisk, and only one character with a question mark.</para>
<para>All sorts of substitutions can be used simultaneously; the shell is very logical about it.  The Bash shell, for instance, has no problem with expressions like <command>ls <parameter>dirname/*/*/*[2-3]</parameter></command>.</para>
<para>In other shells, the asterisk is commonly used to minimize the efforts of typing:  people would enter <command>cd <parameter>dir*</parameter></command> instead of <command>cd <filename>directory</filename></command>.  In Bash however, this is not necessary because the GNU shell has a feature called file name completion.  It means that you can type the first few characters of a command (anywhere) or a file (in the current directory) and if no confusion is possible, the shell will find out what you mean.   For example in a directory containing many files, you can check if there are any files beginning with the letter A just by typing <command>ls <parameter>A</parameter></command> and pressing the <keycap>Tab</keycap> key twice, rather than pressing <keycap>Enter</keycap>.  If there is only one file starting with <quote>A</quote>, this file will be shown as the argument to <command>ls</command> (or any shell command, for that matter) immediately.</para>

</sect3>
<sect3 id="sect_03_03_03_02"><title>Which</title>
<para>A very simple way of looking up files is using the <command>which</command> command, to look in the directories listed in the user's search path for the required file.  Of course, since the search path contains only paths to directories containing executable programs, <command>which</command> doesn't work for ordinary files.  The <command>which</command> command is useful when troubleshooting <quote>Command not Found</quote> problems.  In the example below, user <emphasis>tina</emphasis> can't use the <command>acroread</command> program, while her colleague has no troubles whatsoever on the same system.  The problem is similar to the PATH problem in the previous part: Tina's colleague tells her that he can see the required program in <filename>/opt/acroread/bin</filename>, but this directory is not in her path:</para>
<screen>
<prompt>tina:~&gt;</prompt> <command>which acroread</command>
/usr/bin/which: no acroread in (/bin:/usr/bin:/usr/bin/X11)
</screen>
<para>The problem can be solved by giving the full path to the command to run, or by re-exporting the content of the <varname>PATH</varname> variable:</para>
<screen>
<prompt>tina:~&gt;</prompt> <command>export PATH=$PATH:/opt/acroread/bin</command>

<prompt>tina:~&gt;</prompt> <command>echo $PATH</command>
/bin:/usr/bin:/usr/bin/X11:/opt/acroread/bin
</screen>
<para>Using the <command>which</command> command also checks to see if a command is an alias for another command:</para>
<screen>
<prompt>gerrit:~&gt;</prompt> <command>which -a ls</command>
ls is aliased to `ls -F --color=auto'
ls is /bin/ls
</screen>
</sect3>
<sect3 id="sect_03_03_03_03"><title>Find and locate</title>
<para>These are the real tools, used when searching other paths beside those listed in the search path.  The <command>find</command> tool, known from UNIX, is very powerful, which may be the cause of a somewhat more difficult syntax.  GNU <command>find</command>, however, deals with the syntax problems.  This command not only allows you to search file names, it can also accept file size, date of last change and other file properties as criteria for a search.  The most common use is for finding file names:</para>
<cmdsynopsis><command>find <filename>&lt;path&gt;</filename> <option>-name</option> <parameter>&lt;searchstring&gt;</parameter></command></cmdsynopsis>
<para>This can be interpreted as <quote>Look in all files and subdirectories contained in a given path, and print the names of the files containing the search string in their name</quote> (not in their content).</para>
<para>Another application of <command>find</command> is for searching files of a certain size, as in the example below, where user <emphasis>peter</emphasis> wants to find all files in the current directory or one of its subdirectories, that are bigger than 5 MB:</para>
<screen>
<prompt>peter:~&gt;</prompt> <command>find . -size +5000k</command>
psychotic_chaos.mp3
</screen>
<para>If you dig in the man pages, you will see that <command>find</command> can also perform operations on the found files.  A common example is removing files.  It is best to first test without the <option>-exec</option> option that the correct files are selected, after that the command can be rerun to delete the selected files.  Below, we search for files ending in <filename>.tmp</filename>:</para>
<screen>
<prompt>peter:~&gt; </prompt> <command>find . -name "*.tmp" -exec rm {} \;</command>

<prompt>peter:~&gt;</prompt>
</screen>
<tip><title>Optimize!</title>
<para>This command will call on <command>rm</command> as many times as a file answering the requirements is found.  In the worst case, this might be thousands or millions of times.  This is quite a load on your system.</para>
<para>A more realistic way of working would be the use of a pipe (|) and the <command>xargs</command> tool with <command>rm</command> as an argument.  This way, the <command>rm</command> command is only called when the command line is full, instead of for every file.  See <xref linkend="chap_05"></xref> for more on using I/O redirection to ease everyday tasks.</para>
</tip>
<para>Later on (in 1999 according to the man pages, after 20 years of <command>find</command>), <command>locate</command> was developed.  This program is easier to use, but more restricted than <command>find</command>, since its output is based on a file index database that is updated only once every day.  On the other hand, a search in the <command>locate</command> database uses less resources than <command>find</command> and therefore shows the results nearly instantly.</para>
<para>Most Linux distributions use <command>slocate</command> these days, security enhanced locate, the modern version of <command>locate</command> that prevents users from getting output they have no right to read.  The files in <emphasis>root</emphasis>'s home directory are such an example, these are not normally accessible to the public.  A user who wants to find someone who knows about the C-shell may issue the command <command>locate <filename>.cshrc</filename></command>, to display all users who have a customized configuration file for the C shell.  Supposing the users <emphasis>root</emphasis> and <emphasis>jenny</emphasis> are running C shell, then only the file <filename>/home/jenny/.cshrc</filename> will be displayed, and not the one in <emphasis>root</emphasis>'s home directory.  On most systems, <command>locate</command> is a symbolic link to the <command>slocate</command> program:</para>
<screen>
<prompt>billy:~&gt;</prompt> <command>ls -l /usr/bin/locate</command>
lrwxrwxrwx 1 root slocate  7 Oct 28 14:18 /usr/bin/locate -&gt; slocate*
</screen>
<para>User <emphasis>tina</emphasis> could have used <command>locate</command> to find the application she wanted:</para>
<screen>
<prompt>tina:~&gt;</prompt> <command>locate acroread</command>
/usr/share/icons/hicolor/16x16/apps/acroread.png
/usr/share/icons/hicolor/32x32/apps/acroread.png
/usr/share/icons/locolor/16x16/apps/acroread.png
/usr/share/icons/locolor/32x32/apps/acroread.png
/usr/local/bin/acroread
/usr/local/Acrobat4/Reader/intellinux/bin/acroread
/usr/local/Acrobat4/bin/acroread
</screen>
<para>Directories that don't contain the name <filename>bin</filename> can't contain the program - they don't contain executable files.  There are three possibilities left.  The file in <filename>/usr/local/bin</filename> is the one <emphasis>tina</emphasis> would have wanted: it is a link to the shell script that starts the actual program:</para>
<screen>
<prompt>tina:~&gt;</prompt> <command>file /usr/local/bin/acroread</command>
/usr/local/bin/acroread: symbolic link to ../Acrobat4/bin/acroread

<prompt>tina:~&gt;</prompt> <command>file /usr/local/Acrobat4/bin/acroread</command>
/usr/local/Acrobat4/bin/acroread: Bourne shell script text executable

<prompt>tina:~&gt;</prompt> <command>file /usr/local/Acrobat4/Reader/intellinux/bin/acroread</command>
/usr/local/Acrobat4/Reader/intellinux/bin/acroread: ELF 32-bit LSB 
executable, Intel 80386, version 1, dynamically linked (uses 
shared libs), not stripped
</screen>
<para>In order to keep the path as short as possible, so the system doesn't have to search too long every time a user wants to execute a command, we add <filename>/usr/local/bin</filename> to the path and not the other directories, which only contain the binary files of one specific program, while <filename>/usr/local/bin</filename> contains other useful programs as well.</para>
<para>Again, a description of the full features of <command>find</command> and <command>locate</command> can be found in the Info pages.</para>

</sect3>

<sect3 id="sect_03_03_03_04"><title>The grep command</title>
<sect4 id="sect_03_03_03_04_01"><title>General line filtering</title>
<para>A simple but powerful program, <command>grep</command> is used for filtering input lines and returning certain patterns to the output.  There are literally thousands of applications for the <command>grep</command> program.  In the example below, <emphasis>jerry</emphasis> uses <command>grep</command> to see how he did the thing with <command>find</command>:</para>
<screen>
<prompt>jerry:~&gt;</prompt> <command>grep -a find .bash_history</command>
find . -name userinfo
man find
find ../ -name common.cfg
</screen>
<tip><title>Search history</title>
<para>Also useful in these cases is the search function in <command>bash</command>, activated by pressing <keycap>Ctrl</keycap>+<keycap>R</keycap> at once, such as in the example where we want to check how we did that last <command>find</command> again:</para>
<screen>
<prompt>thomas ~&gt;</prompt> <command>^R</command> 
(reverse-i-search)`find': find `/home/thomas` -name *.xml
</screen>
<para>Type your search string at the search prompt.  The more characters you type, the more restricted the search gets.  This reads the command history for this shell session (which is written to <filename>.bash_history</filename> in your home directory when you quit that session).  The most recent occurrence of your search string is shown.  If you want to see previous commands containing the same string, type <keycap>Ctrl</keycap>+<keycap>R</keycap> again.</para>
<para>See the Info pages on <command>bash</command> for more.</para></tip>
<para>All UNIXes with just a little bit of decency have an online dictionary.  So does Linux.  The dictionary is a list of known words in a file named <filename>words</filename>, located in <filename>/usr/share/dict</filename>.  To quickly check the correct spelling of a word, no graphical application is needed:</para>
<screen>
<prompt>william:~&gt;</prompt> <command>grep pinguin /usr/share/dict/words</command>

<prompt>william:~&gt;</prompt> <command>grep penguin /usr/share/dict/words</command>
penguin
penguins
</screen>
<para>Who is the owner of that home directory next to mine?  Hey, there's his telephone number!</para>
<screen>
<prompt>lisa:~&gt;</prompt> <command>grep gdbruyne /etc/passwd</command>
gdbruyne:x:981:981:Guy Debruyne, tel 203234:/home/gdbruyne:/bin/bash
</screen>
<para>And what was the E-mail address of Arno again?</para>
<screen>
<prompt>serge:~/mail&gt;</prompt> <command>grep -i arno *</command>
sent-mail: To: &lt;Arno.Hintjens@celeb.com&gt;
sent-mail: On Mon, 24 Dec 2001, Arno.Hintjens@celeb.com wrote:
</screen>
<para><command>find</command> and <command>locate</command> are often used in combination with <command>grep</command> to define some serious queries.  For more information, see <xref linkend="chap_05"></xref> on I/O redirection.</para>
</sect4>
<sect4 id="sect_03_03_03_04_02"><title>Special characters</title>
<para>Characters that have a special meaning to the shell have to be <emphasis>escaped</emphasis>.  The escape character in Bash is backslash, as in most shells; this takes away the special meaning of the following character.  The shell knows about quite some special characters, among the most common /, ., ? and *.  A full list can be found in the Info pages and documentation for your shell.</para>
<para>For instance, say that you want to display the file <quote>*</quote> instead of all the files in a directory, you would have to use </para>
<cmdsynopsis><command>less <filename>\*</filename></command></cmdsynopsis>
<para>The same goes for filenames containing a space:</para>
<cmdsynopsis><command>cat <filename>This\ File</filename></command></cmdsynopsis>
</sect4>
</sect3>

</sect2>
<sect2 id="sect_03_03_04"><title>More ways to view file content</title>
<sect3 id="sect_03_03_04_01"><title>General</title>
<para>Apart from <command>cat</command>, which really doesn't do much more than sending files to the standard output, there are other tools to view file content.</para>
<para>The easiest way of course would be to use graphical tools instead of command line tools.  In the introduction we already saw a glimpse of an office application, OpenOffice.  Other examples are the GIMP (start up with <command>gimp</command> from the command line), the GNU Image Manipulation Program; <command>xpdf</command> to view Portable Document Format files (PDF); GhostView (<command>gv</command>) for viewing PostScript files; Mozilla/FireFox, <command>links</command> (a text mode browser), Konqueror, Opera and many others for web content; XMMS, CDplay and others for multimedia file content; AbiWord, Gnumeric, KOffice etc. for all kinds of office applications and so on.  There are thousands of Linux applications; to list them all would take days.</para>
<para>Instead we keep concentrating on shell- or text-mode applications, which form the basics for all other applications.  These commands work best in a text environment on files containing text.  When in doubt, check first using the <command>file</command> command.</para>
<para>So let's see what text tools we have that are useful to look inside files.</para>
<note><title>Font problems</title>
<para>Plain text tools such as the ones we will now be discussing, often have problems with <quote>plain</quote> text files because of the font encoding used in those files.  Special characters, such as accented alphabetical characters, Chinese characters and other characters from languages using different character sets than the default <emphasis>en_US</emphasis> encoding and so on, are then displayed the wrong way or replaced by unreadable rubbish.  These problems are discussed in <xref linkend="sect_07_05"></xref>.</para>

</note>
</sect3>
<sect3 id="sect_03_03_04_02"><title><quote><command>less</command> is <command>more</command></quote></title>
<para>Undoubtedly you will hear someone say this phrase sooner or later when working in a UNIX environment.  A little bit of UNIX history explains this:</para>
<itemizedlist>
<listitem><para>First there was <command>cat</command>.  Output was streamed in an uncontrollable way.</para>
</listitem>
<listitem><para>Then there was <command>pg</command>, which may still be found on older UNIXes.  This command puts text to the output one page at the time.</para></listitem>
<listitem><para>The <command>more</command> program was a revised version of <command>pg</command>.  This command is still available on every Linux system.</para></listitem>
<listitem><para><command>less</command> is the GNU version of more and has extra features allowing highlighting of search strings, scrolling back etc.  The syntax is very simple:</para>
<cmdsynopsis><command>less <filename>file</filename></command></cmdsynopsis>
<para>More information is located in the Info pages.</para>
</listitem>
</itemizedlist>
<para>You already know about pagers by now, because they are used for viewing the man pages.</para>
</sect3>
<sect3 id="sect_03_03_04_03"><title><command>Head</command> and <command>tail</command></title>
<para>These two commands display the n first/last lines of a file respectively.  To see the last ten commands entered:</para>
<screen>
<prompt>tony:~&gt;</prompt> <command>tail -10 .bash_history </command>
locate configure | grep bin
man bash
cd
xawtv &amp;
grep usable /usr/share/dict/words 
grep advisable /usr/share/dict/words 
info quota
man quota
echo $PATH
frm
</screen>
<para><command>head</command> works similarly.  The <command>tail</command> command has a handy feature to continuously show the last n lines of a file that changes all the time.  This <option>-f</option> option is often used by system administrators to check on log files.  More information is located in the system documentation files.</para>
</sect3>

</sect2>
<sect2 id="sect_03_03_05"><title>Linking files</title>
<sect3 id="sect_03_03_05_01"><title>Link types</title>
<para>Since we know more about files and their representation in the file system, understanding links (or shortcuts) is a piece of cake.  A link is nothing more than a way of matching two or more file names to the same set of file data.  There are two ways to achieve this:</para>
<itemizedlist>
<listitem><para>Hard link: Associate two or more file names with the same inode.  Hard links share the same data blocks on the hard disk, while they continue to behave as independent files.</para>
<para>There is an immediate disadvantage: hard links can't span partitions, because inode numbers are only unique within a given partition.</para>
</listitem>
<listitem><para>Soft link or symbolic link (or for short: symlink): a small file that is a pointer to another file.  A symbolic link contains the path to the target file instead of a physical location on the hard disk.  Since inodes are not used in this system, soft links can span across partitions.</para></listitem>
</itemizedlist>
<para>The two link types behave similar, but are not the same, as illustrated in the scheme below:</para>
<figure><title>Hard and soft link mechanism</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/links.eps" format="EPS"></imagedata>
</imageobject>
<imageobject>
<imagedata fileref="images/links.png" format="PNG"></imagedata>
</imageobject>
<textobject>
<phrase>Hard links share the same inode, symbolic links have their own inode that points to datablocks holding the filename of the original file that the link is pointing to.</phrase>
</textobject>
</mediaobject>
</figure>
<para>Note that removing the target file for a symbolic link makes the link useless.</para>
<para>Each regular file is in principle a hardlink.  Hardlinks can not span across partitions, since they refer to inodes, and inode numbers are only unique within a given partition.</para>
<para>It may be argued that there is a third kind of link, the <emphasis>user-space</emphasis> link, which is similar to a shortcut in MS Windows.  These are files containing meta-data which can only be interpreted by the graphical file manager.  To the kernel and the shell these are just normal files.  They may end in a <emphasis>.desktop</emphasis> or <emphasis>.lnk</emphasis> suffix; an example can be found in <filename>~/.gnome-desktop</filename>:</para>
<screen>
<prompt>[dupont@boulot .gnome-desktop]$</prompt> <command>cat La\ Maison\ Dupont</command>
[Desktop Entry]
Encoding=Legacy-Mixed
Name=La Maison Dupont
Type=X-nautilus-home
X-Nautilus-Icon=temp-home
URL=file:///home/dupont
</screen>
<para>This example is from a KDE desktop:</para>
<screen>
<prompt>[lena@venus Desktop]$</prompt> <command>cat camera</command>
[Desktop Entry]
Dev=/dev/sda1
FSType=auto
Icon=memory
MountPoint=/mnt/camera
Type=FSDevice
X-KDE-Dynamic-Device=true
</screen>
<para>Creating this kind of link is easy enough using the features of your graphical environment.  Should you need help, your system documentation should be your first resort.</para>
<para>In the next section, we will study the creation of UNIX-style symbolic links using the command line.</para>
</sect3>
<sect3 id="sect_03_03_05_02"><title>Creating symbolic links</title>
<para>The symbolic link is particularly interesting for beginning users: they are fairly obvious to see and you don't need to worry about partitions.</para>
<para>The command to make links is <command>ln</command>.  In order to create symlinks, you need to use the <option>-s</option> option:</para>
<cmdsynopsis><command>ln <option>-s</option> <filename>targetfile</filename> <filename>linkname</filename></command></cmdsynopsis>
<para>In the example below, user <emphasis>freddy</emphasis> creates a link in a subdirectory of his home directory to a directory on another part of the system:</para>
<screen>
<prompt>freddy:~/music&gt;</prompt> <command>ln -s /opt/mp3/Queen/ Queen</command>

<prompt>freddy:~/music&gt;</prompt> <command>ls -l</command>
lrwxrwxrwx  1 freddy  freddy  17 Jan 22 11:07 Queen -&gt; /opt/mp3/Queen
</screen>
<para>Symbolic links are always very small files, while hard links have the same size as the original file.</para>
<para>The application of symbolic links is widespread.  They are often used to save disk space, to make a copy of a file in order to satisfy installation requirements of a new program that expects the file to be in another location, they are used to fix scripts that suddenly have to run in a new environment and can generally save a lot of work.  A system admin may decide to move the home directories of the users to a new location, <filename>disk2</filename> for instance, but if he wants everything to work like before, like the <filename>/etc/passwd</filename> file, with a minimum of effort he will create a symlink from <filename>/home</filename> to the new location <filename>/disk2/home</filename>.</para>
</sect3> 
</sect2>

</sect1>
<sect1 id="sect_03_04"><title>File security</title>
<sect2 id="sect_03_04_01"><title>Access rights: Linux's first line of defense</title>
<para>The Linux security model is based on the one used on UNIX systems, and is as rigid as the UNIX security model (and sometimes even more), which is already quite robust.  On a Linux system, every file is owned by a user and a group user.  There is also a third category of users, those that are not the user owner and don't belong to the group owning the file.  For each category of users, read, write and execute permissions can be granted or denied.</para>
<para>We already used the <emphasis>long</emphasis> option to list files using the <command>ls <option>-l</option></command> command, though for other reasons.  This command also displays file permissions for these three user categories; they are indicated by the nine characters that follow the first character, which is the file type indicator at the beginning of the file properties line.  As seen in the examples below, the first three characters in this series of nine display access rights for the actual user that owns the file.  The next three are for the group owner of the file, the last three for other users.  The permissions are always in the same order: read, write, execute for the user, the group and the others.  Some examples:</para>
<screen>
<prompt>marise:~&gt;</prompt> <command>ls -l To_Do</command>
-rw-rw-r--    1 marise  users      5 Jan 15 12:39 To_Do
<prompt>marise:~&gt;</prompt> <command>ls -l /bin/ls</command>
-rwxr-xr-x    1 root    root   45948 Aug  9 15:01 /bin/ls*
</screen>
<para>The first file is a regular file (first dash).  Users with user name <emphasis>marise</emphasis> or users belonging to the group <emphasis>users</emphasis> can read and write (change/move/delete) the file, but they can't execute it (second and third dash).  All other users are only allowed to read this file, but they can't write or execute it (fourth and fifth dash).</para>
<para>The second example is an executable file, the difference: everybody can run this program, but you need to be <emphasis>root</emphasis> to change it.</para>
<para>The Info pages explain how the <command>ls</command> command handles display of access rights in detail, see the section <emphasis>What information is listed</emphasis>.</para>
<para>For easy use with commands, both access rights or modes and user groups have a code.  See the tables below.</para>
<table frame="all">
<title>Access mode codes</title>
<tgroup align="left" cols="2" colsep="1" rowsep="1">
<thead>
<row>
<entry>Code</entry><entry>Meaning</entry> 
</row>
</thead>
<tbody>
<row>
<entry>0 or -</entry><entry>The access right that is supposed to be on this place is not granted.</entry></row>
<row>
<entry>4 or r</entry><entry>read access is granted to the user category defined in this place</entry></row>
<row>
<entry>2 or w</entry><entry>write permission is granted to the user category defined in this place</entry></row>
<row>
<entry>1 or x</entry><entry>execute permission is granted to the user category defined in this place</entry></row>
</tbody>
</tgroup>
</table>
<table frame="all"><title>User group codes</title>
<tgroup align="left" cols="2" colsep="1" rowsep="1">
<thead>
<row>
<entry>Code</entry><entry>Meaning</entry>
</row>
</thead>
<tbody>
<row>
<entry>u</entry><entry>user permissions</entry></row>
<row>
<entry>g</entry><entry>group permissions</entry></row>
<row>
<entry>o</entry><entry>permissions for others</entry></row>
</tbody>
</tgroup>
</table>


<para>This straight forward scheme is applied very strictly, which allows a high level of security even without network security.  Among other functions, the security scheme takes care of user access to programs, it can serve files on a need-to-know basis and protect sensitive data such as home directories and system configuration files.</para>
<para>You should know what your user name is.  If you don't, it can be displayed using the <command>id</command> command, which also displays the default group you belong to and eventually other groups of which you are a member:</para>
<screen>
<prompt>tilly:~&gt;</prompt> <command>id</command>
uid=504(tilly) gid=504(tilly) groups=504(tilly),100(users),2051(org)
</screen>
<para>Your user name is also stored in the environment variable <varname>USER</varname>:</para>
<screen>
<prompt>tilly:~&gt;</prompt> <command>echo $USER</command>
tilly
</screen>



</sect2>
<sect2 id="sect_03_04_02"><title>The tools</title>
<sect3 id="sect_03_04_02_01"><title>The chmod command</title>
<para>A normal consequence of applying strict file permissions, and sometimes a nuisance, is that access rights will need to be changed for all kinds of reasons.  We use the <command>chmod</command> command to do this, and eventually <emphasis>to chmod</emphasis> has become an almost acceptable English verb, meaning the changing of the access mode of a file.  The <command>chmod</command> command can be used with alphanumeric or numeric options, whatever you like best.</para>
<para>The example below uses alphanumeric options  in order to solve a problem that commonly occurs with new users:</para>
<screen>
<prompt>asim:~&gt;</prompt> <command>./hello</command>
bash: ./hello: bad interpreter: Permission denied

<prompt>asim:~&gt;</prompt> <command>cat hello</command>
#!/bin/bash
echo "Hello, World"

<prompt>asim:~&gt;</prompt> <command>ls -l hello</command>
-rw-rw-r--    1 asim    asim    32 Jan 15 16:29 hello

<prompt>asim:~&gt;</prompt> <command>chmod u+x hello</command>

<prompt>asim:~&gt;</prompt> <command>./hello</command>
Hello, World

<prompt>asim:~&gt;</prompt> <command>ls -l hello</command>
-rwxrw-r--   1 asim    asim    32 Jan 15 16:29 hello*
</screen>
<para>The + and - operators are used to grant or deny a given right to a given group.  Combinations separated by commas are allowed.  The Info and man pages contain useful examples.  Here's another one, which makes the file from the previous example a private file to user <emphasis>asim</emphasis>:</para>
<screen>
<prompt>asim:~&gt;</prompt> <command>chmod u+rwx,go-rwx hello</command>

<prompt>asim:~&gt;</prompt> <command>ls -l hello</command>
-rwx------    1 asim    asim    32 Jan 15 16:29 hello*
</screen>
<para>The kind of problem resulting in an error message saying that permission is denied somewhere is usually a problem with access rights in most cases.  Also, comments like, <quote>It worked yesterday,</quote> and <quote>When I run this as root it works,</quote> are most likely caused by the wrong file permissions.</para>
<para>When using <command>chmod</command> with numeric arguments, the values for each granted access right have to be counted together per group.  Thus we get a 3-digit number, which is the symbolic value for the settings <command>chmod</command> has to make.  The following table lists the most common combinations:</para>
<table frame="all">
<title>File protection with chmod</title>
<tgroup align="left" cols="2" colsep="1" rowsep="1">
<thead>
<row>
<entry>Command</entry><entry>Meaning</entry>
</row>
</thead>
<tbody>
<row>
<entry><command>chmod <parameter>400</parameter> <filename>file</filename></command></entry><entry>To protect a file against accidental overwriting.</entry>
</row>
<row>
<entry><command>chmod <parameter>500</parameter> <filename>directory</filename></command></entry><entry>To protect yourself from accidentally removing, renaming or moving files from this directory.</entry>
</row>
<row>
<entry><command>chmod <parameter>600</parameter> <filename>file</filename></command></entry><entry>A private file only changeable by the user who entered this command.</entry>
</row>
<row>
<entry><command>chmod <parameter>644</parameter> <filename>file</filename></command></entry><entry>A publicly readable file that can only be changed by the issuing user.</entry>
</row>
<row>
<entry><command>chmod <parameter>660</parameter> <filename>file</filename></command></entry><entry>Users belonging to your group can change this file, others don't have any access to it at all.</entry>
</row>
<row>
<entry><command>chmod <parameter>700</parameter> <filename>file</filename></command></entry><entry>Protects a file against any access from other users, while the issuing user still has full access.</entry>
</row>
<row>
<entry><command>chmod <parameter>755</parameter> <filename>directory</filename></command></entry><entry>For files that should be readable and executable by others, but only changeable by the issuing user.</entry>
</row>
<row>
<entry><command>chmod <parameter>775</parameter> <filename>file</filename></command></entry><entry>Standard file sharing mode for a group.</entry>
</row>
<row>
<entry><command>chmod <parameter>777</parameter> <filename>file</filename></command></entry><entry>Everybody can do everything to this file.</entry>
</row>
</tbody>
</tgroup>
</table>
<para>If you enter a number with less than three digits as an argument to <command>chmod</command>, omitted characters are replaced with zeros starting from the left.  There is actually a fourth digit on Linux systems, that precedes the first three and sets special access modes.  Everything about these and many more are located in the Info pages.</para>
</sect3>
<sect3 id="sect_03_04_02_02"><title>Logging on to another group</title>
<para>When you type <command>id</command> on the command line, you get a list of all the groups that you can possibly belong to, preceded by your user name and ID and the group name and ID that you are currently connected with.  However, on many Linux systems you can only be actively logged in to one group at the time.  By default, this active or <emphasis>primary group</emphasis> is the one that you get assigned from the <filename>/etc/passwd</filename> file.  The fourth field of this file holds users' primary group ID, which is looked up in the <filename>/etc/group</filename> file.  An example:</para>
<screen>
<prompt>asim:~&gt;</prompt> <command>id</command>
uid=501(asim) gid=501(asim) groups=100(users),501(asim),3400(web)

<prompt>asim:~&gt;</prompt> <command>grep <parameter>asim</parameter> <filename>/etc/passwd</filename></command>
asim:x:501:501:Asim El Baraka:/home/asim:/bin/bash

<prompt>asim:~&gt;</prompt> <command>grep <parameter>501</parameter> <filename>/etc/group</filename></command>
asim:x:501:
</screen>
<para>The fourth field in the line from <filename>/etc/passwd</filename> contains the value <quote>501</quote>, which represents the group <emphasis>asim</emphasis> in the above example.  From <filename>/etc/group</filename> we can get the name matching this group ID.  When initially connecting to the system, this is the group that <emphasis>asim</emphasis> will belong to.</para>
<note><title>User private group scheme</title>
<para>In order to allow more flexibility, most Linux systems follow the so-called <emphasis>user private group scheme</emphasis>, that assigns each user primarily to his or her own group.  This group is a group that only contains this particular user, hence the name <quote>private group</quote>.  Usually this group has the same name as the user login name, which can be a bit confusing.</para> 
</note>
<para>Apart from his own private group, user <emphasis>asim</emphasis> can also be in the groups <emphasis>users</emphasis> and <emphasis>web</emphasis>.  Because these are secondary groups to this user, he will need to use the <command>newgrp</command> to log into any of these groups.  In the example, <emphasis>asim</emphasis> needs to create files that are owned by the group <emphasis>web</emphasis>.</para>
<screen>
<prompt>asim:/var/www/html&gt;</prompt> <command>newgrp <parameter>web</parameter></command>

<prompt>asim:/var/www/html&gt;</prompt> <command>id</command>
uid=501(asim) gid=3400(web) groups=100(users),501(asim),3400(web)
</screen>
<para>When <emphasis>asim</emphasis> creates new files now, they will be in group ownership of the group <emphasis>web</emphasis> instead of being owned by the group <emphasis>asim</emphasis>:</para>
<screen>
<prompt>asim:/var/www/html&gt;</prompt> <command>touch <filename>test</filename></command>

<prompt>asim:/var/www/html&gt;</prompt> <command>ls <option>-l</option> <filename>test</filename></command>
-rw-rw-r--  1 asim web   0 Jun 10 15:38 test
</screen>
<para>Logging in to a new group prevents you from having to use <command>chown</command> (see <xref linkend="sect_03_04_02_04"></xref>) or calling your system administrator to change ownerships for you.</para>
<para>See the manpage for <command>newgrp</command> for more information.</para>
</sect3>
<sect3 id="sect_03_04_02_03"><title>The file mask</title>
<para>When a new file is saved somewhere, it is first subjected to the standard security procedure.  Files without permissions don't exist on Linux.  The standard file permission is determined by the <emphasis>mask</emphasis> for new file creation.  The value of this mask can be displayed using the <command>umask</command> command:</para>
<screen>
<prompt>bert:~&gt;</prompt> <command>umask</command>
0002
</screen>
<para>Instead of adding the symbolic values to each other, as with <command>chmod</command>, for calculating the permission on a new file they need to be subtracted from the total possible access rights.  In the example above, however, we see 4 values displayed, yet there are only 3 permission categories: <emphasis>user</emphasis>, <emphasis>group</emphasis> and <emphasis>other</emphasis>.  The first zero is part of the special file attributes settings, which we will discuss in <xref linkend="sect_03_04_02_04"></xref> and <xref linkend="sect_04_01_06"></xref>.  It might just as well be that this first zero is not displayed on your system when entering the <command>umask</command> command, and that you only see 3 numbers representing the default file creation mask.</para>
<para>Each UNIX-like system has a system function for creating new files, which is called each time a user uses a program that creates new files, for instance, when downloading a file from the Internet, when saving a new text document and so on.  This function creates both new files and new directories.  Full read, write and execute permission is granted to everybody when creating a new directory.  When creating a new file, this function will grant read and write permissions for everybody, but set execute permissions to none for all user categories.  This, before the mask is applied, a directory has permissions <emphasis>777</emphasis> or <emphasis>rwxrwxrwx</emphasis>, a plain file <emphasis>666</emphasis> or <emphasis>rw-rw-rw-</emphasis>.</para>
<para>The <emphasis>umask</emphasis> value is subtracted from these default permissions after the function has created the new file or directory.  Thus, a directory will have permissions of <emphasis>775</emphasis> by default, a file <emphasis>664</emphasis>, if the mask value is <emphasis>(0)002</emphasis>.  This is demonstrated in the example below:</para>
<screen>
<prompt>bert:~&gt;</prompt> <command>mkdir newdir</command>

<prompt>bert:~&gt;</prompt> <command>ls -ld newdir</command>
drwxrwxr-x    2 bert    bert		4096 Feb 28 13:45 newdir/

<prompt>bert:~&gt;</prompt> <command>touch newfile</command>

<prompt>bert:~&gt;</prompt> <command>ls -l newfile</command>
-rw-rw-r--    1 bert    bert		   0 Feb 28 13:52 newfile
</screen>
<para>If you log in to another group using the <command>newgrp</command> command, the mask remains unchanged.  Thus, if it is set to <emphasis>002</emphasis>, files and directories that you create while being in the new group will also be accessible to the other members of that group; you don't have to use <command>chmod</command>.</para>
<para>The <emphasis>root</emphasis> user usually has stricter default file creation permissions:</para>
<screen>
[root@estoban root]# umask
022
</screen>
<para>These defaults are set system-wide in the shell resource configuration files, for instance <filename>/etc/bashrc</filename> or <filename>/etc/profile</filename>.  You can change them in your own shell configuration file, see <xref linkend="chap_07"></xref> on customizing your shell environment.</para>

</sect3>
<sect3 id="sect_03_04_02_04"><title>Changing user and group ownership</title>
<para>When a file is owned by the wrong user or group, the error can be repaired with the <command>chown</command> (change owner) and <command>chgrp</command> (change group) commands.  Changing file ownership is a frequent system administrative task in environments where files need to be shared in a group.  Both commands are very flexible, as you can find out by using the <option>--help</option> option.</para>
<para>The <command>chown</command> command can be applied to change both user and group ownership of a file, while <command>chgrp</command> only changes group ownership.  Of course the system will check if the user issuing one of these commands has sufficient permissions on the file(s) she wants to change.</para>
<para>In order to only change the user ownership of a file, use this syntax:</para>
<cmdsynopsis><command>chown <parameter>newuser</parameter> <filename>file</filename></command></cmdsynopsis>
<para>If you use a colon after the user name (see the Info pages), group ownership will be changed as well, to the primary group of the user issuing the command.  On a Linux system, each user has his own group, so this form can be used to make files private:</para>
<screen>
<prompt>jacky:~&gt;</prompt> <command>id</command>
uid=1304(jacky) gid=(1304) groups=1304(jacky),2034(pproject)

<prompt>jacky:~&gt;</prompt> <command>ls -l my_report</command>
-rw-rw-r--  1 jacky   project       29387 Jan 15 09:34 my_report

<prompt>jacky:~&gt;</prompt> <command>chown jacky: my_report</command>

<prompt>jacky:~&gt;</prompt> <command>chmod o-r my_report</command>

<prompt>jacky:~&gt;</prompt> <command>ls -l my_report</command>
-rw-rw----  1 jacky   jacky         29387 Jan 15 09:34 my_report
</screen>
<para>If <emphasis>jacky</emphasis> would like to share this file, without having to give everybody permission to write it, he can use the <command>chgrp</command> command:</para>
<screen>
<prompt>jacky:~&gt;</prompt> <command>ls -l report-20020115.xls</command>
-rw-rw---- 1 jacky   jacky   45635 Jan 15 09:35 report-20020115.xls

<prompt>jacky:~&gt;</prompt> <command>chgrp project report-20020115.xls</command>

<prompt>jacky:~&gt;</prompt> <command>chmod o= report-20020115.xls</command>

<prompt>jacky:~&gt;</prompt> <command>ls -l report-20020115.xls</command>
-rw-rw---- 1 jacky   project 45635 Jan 15 09:35 report-20020115.xls
</screen>
<para>This way, users in the group <emphasis>project</emphasis> will be able to work on this file.  Users not in this group have no business with it at all.</para>
<para>Both <command>chown</command> and <command>chgrp</command> can be used to change ownership recursively, using the <option>-R</option> option.  In that case, all underlying files and subdirectories of a given directory will belong to the given user and/or group.</para>
<note><title>Restrictions</title>
<para>On most systems, the use of the <command>chown</command> and <command>chgrp</command> commands is restricted for non-privileged users.  If you are not the administrator of the system, you can not change user nor group ownerships for security reasons.  If the usage of these commands would not be restricted, malicious users could assign ownership of files to other users and/or groups and change behavior of those users' environments and even cause damage to other users' files.</para>
</note>
</sect3>

<sect3 id="sect_03_04_02_05"><title>Special modes</title>
<para>For the system admin to not be bothered solving permission problems all the time, special access rights can be given to entire directories, or to separate programs.  There are three special modes:</para>
<itemizedlist>
<listitem><para>Sticky bit mode: After execution of a job, the command is kept in the system memory.  Originally this was a feature used a lot to save memory: big jobs are loaded into memory only once.  But these days memory is inexpensive and there are better techniques to manage it, so it is not used anymore for its optimizing capabilities on single files.  When applied to an entire directory, however, the sticky bit has a different meaning.  In that case, a user can only change files in this directory when she is the user owner of the file or when the file has appropriate permissions.  This feature is used on directories like <filename>/var/tmp</filename>, that have to be accessible for everyone, but where it is not appropriate for users to change or delete each other's data.  The sticky bit is indicated by a <emphasis>t</emphasis> at the end of the file permission field:</para>
<screen>
<prompt>mark:~&gt;</prompt> <command>ls -ld /var/tmp</command>
drwxrwxrwt   19 root     root         8192 Jan 16 10:37 /var/tmp/
</screen>
<para>The sticky bit is set using the command <command>chmod <parameter>o+t</parameter> <filename>directory</filename></command>.  The historic origin of the <quote>t</quote> is in UNIX' <emphasis>save Text access</emphasis> feature.</para>
</listitem>
<listitem><para>SUID (set user ID) and SGID (set group ID): represented by the character <emphasis>s</emphasis> in the user or group permission field.  When this mode is set on an executable file, it will run with the user and group permissions on the file instead of with those of the user issuing the command, thus giving access to system resources.  We will discuss this further in <xref linkend="chap_04"></xref>.</para>
</listitem>

<listitem><para>SGID (set group ID) on a directory: in this special case every file created in the directory will have the same group owner as the directory itself (while normal behavior would be that new files are owned by the users who create them).  This way, users don't need to worry about file ownership when sharing directories:</para>
<screen>
<prompt>mimi:~&gt;</prompt> <command>ls -ld /opt/docs</command>
drwxrws---  4 root    users          4096 Jul 25 2001 docs/

<prompt>mimi:~&gt;</prompt> <command>ls -l /opt/docs</command>
-rw-rw----  1 mimi    users        345672 Aug 30 2001-Council.doc
</screen>
<para>This is the standard way of sharing files in UNIX.</para>
<note><title>Existing files are left unchanged!</title><para>Files that are being moved to a SGID directory but were created elsewhere keep their original user and group owner.  This may be confusing.</para></note>

</listitem>
</itemizedlist>
</sect3>
</sect2>

</sect1>
<sect1 id="sect_03_05"><title>Summary</title>
<para>On UNIX, as on Linux, all entities are in some way or another presented to the system as files with the appropriate file properties.  Use of (predefined) paths allows the users and the system admin to find, read and manipulate files.</para>
<para>We've made our first steps toward becoming an expert: we discussed the real and the fake structure of the file system, and we know about the Linux file security model, as well as several other security precautions that are taken on every system by default.</para>
<para>The shell is the most important tool for interaction with the system.  We learned several shell commands in this chapter, which are listed in the table below.</para>
<table frame="all">
<title>New commands</title>
<tgroup align="left" cols="2" colsep="1" rowsep="1">
<thead>
<row>
<entry>Command</entry><entry>Meaning</entry>
</row>
</thead>
<tbody>
<row>
<entry><command>bash</command></entry><entry>GNU shell program.</entry>
</row>
<row>
<entry><command>cat <filename>file(s)</filename></command></entry><entry>Send content of file(s) to standard output.</entry>
</row>
<row>
<entry><command>cd <filename>directory</filename></command></entry><entry>Enter <filename>directory</filename>.  <command>cd</command> is a <command>bash</command> built-in command.</entry>
</row>
<row>
<entry><command>chgrp <parameter>newgroup</parameter> <filename>file(s)</filename></command></entry><entry>Change the group ownership of <filename>file(s)</filename> to <emphasis>newgroup</emphasis></entry>
</row>
<row>
<entry><command>chmod <parameter>mode</parameter> <filename>file(s)</filename></command></entry><entry>Change access permissions on <filename>file(s)</filename></entry>
</row>
<row>
<entry><command>chown <parameter>newowner</parameter><optional>:<optional>newgroup</optional></optional> <filename>file(s)</filename> </command></entry><entry>Change file owner and group ownership.</entry>
</row>
<row>
<entry><command>cp <filename>sourcefile</filename> <filename>targetfile</filename></command></entry><entry>Copy <filename>sourcefile</filename> to <filename>targetfile</filename>.</entry>
</row>
<row>
<entry><command>df <filename>file</filename></command></entry><entry>Reports on used disk space on the partition containing <filename>file</filename>.</entry>
</row>
<row>
<entry><command>echo <parameter>string</parameter></command></entry><entry>Display a line of text</entry>
</row>
<row>
<entry><command>export</command></entry><entry>Part of <command>bash</command> that announces variables and their values to the system.</entry>
</row>
<row>
<entry><command>file <filename>filename</filename></command></entry><entry>Determine file type of <filename>filename</filename>.</entry>
</row>
<row>
<entry><command>find <parameter>path</parameter> <parameter>expression</parameter></command></entry><entry>Find files in the file system hierarchy</entry>
</row>
<row>
<entry><command>grep <parameter>PATTERN</parameter> <filename>file</filename></command></entry><entry>Print lines in <filename>file</filename> containing the search pattern.</entry>
</row>
<row>
<entry><command>head <filename>file</filename></command></entry><entry>Send the first part of <filename>file</filename> to standard output</entry>
</row>
<row>
<entry><command>id</command></entry><entry>Prints real and effective user name and groups.</entry>
</row>
<row>
<entry><command>info <parameter>command</parameter></command></entry><entry>Read documentation about <command>command</command>.</entry></row>
<row>
<entry><command>less <filename>file</filename></command></entry><entry>View <filename>file</filename> with a powerful viewer.</entry>
</row>
<row>
<entry><command>ln <filename>targetfile</filename> <filename>linkname</filename></command></entry><entry>Make a link with name <filename>linkname</filename> to <filename>targetfile</filename>.</entry>
</row>
<row>
<entry><command>locate <parameter>searchstring</parameter></command></entry><entry>Print all accessible files matching the search pattern.</entry>
</row>
<row>
<entry><command>ls <filename>file(s)</filename></command></entry><entry>Prints directory content.</entry>
</row>
<row>
<entry><command>man <parameter>command</parameter></command></entry><entry>Format and display online (system) manual pages for <command>command</command>.</entry>
</row>
<row>
<entry><command>mkdir <filename>newdir</filename></command></entry><entry>Make a new empty directory.</entry>
</row>
<row>
<entry><command>mv <filename>oldfile</filename> <filename>newfile</filename></command></entry><entry>Rename or move <filename>oldfile</filename>.</entry>
</row>
<row>
<entry><command>pwd</command></entry><entry>Print the present or current working directory.</entry>
</row>
<row>
<entry><command>quota</command></entry><entry>Show disk usage and limits.</entry>
</row>
<row>
<entry><command>rm <filename>file</filename></command></entry><entry>Removes files and directories.</entry>
</row>
<row>
<entry><command>rmdir <filename>file</filename></command></entry><entry>Removes directories.</entry>
</row>
<row>
<entry><command>tail <filename>file</filename></command></entry><entry>Print the last part of <filename>file</filename>.</entry>
</row>
<row>
<entry><command>umask <optional><parameter>value</parameter></optional></command></entry><entry>Show or change new file creation mode.</entry>
</row>
<row>
<entry><command>wc <filename>file</filename></command></entry><entry>Counts lines, words and characters in <filename>file</filename>.</entry>
</row>
<row>
<entry><command>which <parameter>command</parameter></command></entry><entry>Shows the full path to <command>command</command>.</entry>
</row>
</tbody>
</tgroup>
</table>
<para>We also stressed the fact that you should READ THE MAN PAGES.  This documentation is your first-aid kit and contains the answers to many questions.  The above list contains the basic commands that you will use on a daily basis, but they can do much more than the tasks we've discussed here.  Reading the documentation will give you the control you need.</para>
<para>Last but not least, a handy overview of file permissions:</para>
<table frame="all">
<title>File permissions</title>
<tgroup align="left" cols="4" colsep="1" rowsep="1">
<thead><row><entry>Who\What</entry><entry>r(ead)</entry><entry>w(rite)</entry><entry>(e)x(ecute)</entry></row>
</thead>
<tbody>
<row><entry>u(ser)</entry><entry>4</entry><entry>2</entry><entry>1</entry></row>
<row><entry>g(roup)</entry><entry>4</entry><entry>2</entry><entry>1</entry></row>
<row><entry>o(ther)</entry><entry>4</entry><entry>2</entry><entry>1</entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id="sect_03_06"><title>Exercises</title>

<para>Just login with your common user ID.</para>

<sect2 id="sect_03_06_01"><title>Partitions</title>
<itemizedlist>
<listitem><para>On which partition is your home directory?</para></listitem>
<listitem><para>How many partitions are on your system?</para></listitem>
<listitem><para>What is the total size of your Linux installation?</para></listitem>
</itemizedlist>
</sect2>

<sect2 id="sect_03_06_02"><title>Paths</title>
<itemizedlist>
<listitem><para>Display your search path.</para></listitem>
<listitem><para>Export a senseless path by entering, for instance, <command>export <varname>PATH</varname>=<replaceable>blah</replaceable></command> and try listing directory content.</para></listitem>
<listitem><para>What is the path to your home directory?  How would another user reach your home directory starting from his own home directory, using a relative path?</para></listitem>
<listitem><para>Go to the <filename>tmp</filename> directory in <filename>/var</filename>.</para></listitem>
<listitem><para>Now go to <filename>share</filename> in <filename>/usr</filename> using only one command.  Change to <filename>doc</filename>.  What is your present working directory?</para></listitem>
</itemizedlist>
</sect2>

<sect2 id="sect_03_06_03"><title>Tour of the system</title>
<itemizedlist>
<listitem><para>Change to the <filename>/proc</filename> directory.</para></listitem>
<listitem><para>What CPU(s) is the system running on?</para></listitem>
<listitem><para>How much RAM does it currently use?</para></listitem>
<listitem><para>How much swap space do you have?</para></listitem>
<listitem><para>What drivers are loaded?</para></listitem>
<listitem><para>How many hours has the system been running?</para></listitem>
<listitem><para>Which filesystems are known by your system?</para></listitem>
<listitem><para>Change to <filename>/etc/rc.d | /etc/init.d | /etc/runlevels</filename> and choose the directory appropriate for your run level.</para></listitem>
<listitem><para>What services should be running in this level?</para></listitem>
<listitem><para>Which services run in graphical mode that don't run in text mode?</para></listitem>
<listitem><para>Change to <filename>/etc</filename></para></listitem>
<listitem><para>How long does the system keep the log file in which user logins are monitored?</para></listitem>
<listitem><para>Which release are you running?</para></listitem>
<listitem><para>Are there any issues or messages of the day?</para></listitem>
<listitem><para>How many users are defined on your system?  Don't count them, let the computer do it for you!</para></listitem>
<listitem><para>How many groups?</para></listitem>
<listitem><para>Where is the time zone information kept?</para></listitem>
<listitem><para>Are the HOWTOs installed on your system?</para></listitem>
<listitem><para>Change to <filename>/usr/share/doc</filename>.</para></listitem>
<listitem><para>Name three programs that come with the GNU <emphasis>coreutils</emphasis> package.</para></listitem>
<listitem><para>Which version of <command>bash</command> is installed on this system?</para></listitem>
</itemizedlist>
</sect2>

<sect2 id="sect_03_06_04"><title>Manipulating files</title>
<itemizedlist>
<listitem><para>Create a new directory in your home directory.</para></listitem>
<listitem><para>Can you move this directory to the same level as your home directory?</para></listitem>
<listitem><para>Copy all XPM files from <filename>/usr/share/pixmaps</filename> to the new directory.  What does XPM mean?</para></listitem>
<listitem><para>List the files in reverse alphabetical order.</para></listitem>
<listitem><para>Change to your home directory.  Create a new directory and copy all the files of the <filename>/etc</filename> directory into it.  Make sure that you also copy the files and directories which are in the subdirectories of <filename>/etc</filename>! (recursive copy)</para></listitem>
<listitem><para>Change into the new directory and make a directory for files starting with an upper case character and one for files starting with a lower case character.  Move all the files to the appropriate directories.  Use as few commands as possible.</para></listitem>
<listitem><para>Remove the remaining files.</para></listitem>
<listitem><para>Delete the directory and its entire content using a single command.</para></listitem>
<listitem><para>Use <command>grep</command> to find out which script starts the Font Server in the graphical run level.</para></listitem>
<listitem><para>Where is the <emphasis>sendmail</emphasis> server program?</para></listitem>
<listitem><para>Make a symbolic link in your home directory to <filename>/var/tmp</filename>.  Check that it really works.</para></listitem>
<listitem><para>Make another symbolic link in your home directory to this link.   Check that it works.  Remove the first link and list directory content.  What happened to the second link?</para></listitem>
</itemizedlist>
</sect2>

<sect2 id="sect_03_06_05"><title>File permissions</title>
<itemizedlist>
<listitem><para>Can you change file permissions on <filename>/home</filename>?</para></listitem>
<listitem><para>What is your standard file creation mode?</para></listitem>
<listitem><para>Change ownership of <filename>/etc</filename> to your own user and group.</para></listitem>
<listitem><para>Change file permissions of <filename>~/.bashrc</filename> so that only you and your primary group can read it.</para></listitem>
<listitem><para>Issue the command <command>locate <filename>root</filename></command>.  Do you notice anything special?</para></listitem>
<listitem><para>Make a symbolic link to <filename>/root</filename>.  Can it be used?</para></listitem>
</itemizedlist>
</sect2>

</sect1>

</chapter>
 
<chapter id="chap_04">
<title>Processes</title>

<abstract>
<para>Next to files, processes are the most important things on a UNIX/Linux system.  In this chapter, we will take a closer look at those processes.  We will learn more about:</para>
<para>
<itemizedlist>
<listitem><para>Multi-user processing and multi-tasking</para></listitem>
<listitem><para>Process types</para></listitem>
<listitem><para>Controlling processes with different signals</para></listitem>
<listitem><para>Process attributes</para></listitem>
<listitem><para>The life cycle of a process</para></listitem>
<listitem><para>System startup and shutdown</para></listitem>
<listitem><para>SUID and SGID</para></listitem>
<listitem><para>System speed and response</para></listitem>
<listitem><para>Scheduling processes</para></listitem>
<listitem><para>The Vixie cron system</para></listitem>
<listitem><para>How to get the most out of your system</para></listitem>
</itemizedlist>
</para>
</abstract>

<sect1 id="sect_04_01"><title>Processes inside out</title>
<sect2 id="sect_04_01_01"><title>Multi-user and multi-tasking</title>
<para>Now that we are more used to our environment and we are able to communicate a little bit with our system, it is time to study the processes we can start in more detail.  Not every command starts a single process.  Some commands initiate a series of processes, such as <command>mozilla</command>; others, like <command>ls</command>, are executed as a single command.</para>
<para>Furthermore, Linux is based on UNIX, where it has been common policy to have multiple users running multiple commands, at the same time and on the same system.  It is obvious that measures have to be taken to have the CPU manage all these processes, and that functionality has to be provided so users can switch between processes.  In some cases, processes will have to continue to run even when the user who started them logs out.  And users need a means to reactivate interrupted processes.</para>
<para>We will explain the structure of Linux processes in the next sections.</para>
</sect2>
<sect2 id="sect_04_01_02"><title>Process types</title>
<sect3 id="sect_04_01_02_01"><title>Interactive processes</title>
<para>Interactive processes are initialized and controlled through a terminal session.  In other words, there has to be someone connected to the system to start these processes; they are not started automatically as part of the system functions.  These processes can run in the foreground, occupying the terminal that started the program, and you can't start other applications as long as this process is running in the foreground.  Alternatively, they can run in the background, so that the terminal in which you started the program can accept new commands while the program is running.  Until now, we mainly focussed on programs running in the foreground - the length of time taken to run them was too short to notice - but viewing a file with the <command>less</command> command is a good example of a command occupying the terminal session.  In this case, the activated program is waiting for you to do something.  The program is still connected to the terminal from where it was started, and the terminal is only useful for entering commands this program can understand.  Other commands will just result in errors or unresponsiveness of the system.</para>
<para>While a process runs in the background, however, the user is not prevented from doing other things in the terminal in which he started the program, while it is running.</para>
<para>The shell offers a feature called <emphasis>job control</emphasis> which allows easy handling of multiple processes.  This mechanism switches processes between the foreground and the background.  Using this system, programs can also be started in the background immediately.</para>
<para>Running a process in the background is only useful for programs that don't need user input (via the shell).  Putting a job in the background is typically done when execution of a job is expected to take a long time.  In order to free the issuing terminal after entering the command, a trailing ampersand is added.  In the example, using graphical mode, we open an extra terminal window from the existing one:</para>
<screen>
<prompt>billy:~&gt;</prompt> <command>xterm &amp;</command>
[1] 26558

<prompt>billy:~&gt;</prompt> <command>jobs</command>
[1]+  Running                 xterm &amp;
</screen>
<para>The full job control features are explained in detail in the <command>bash</command> Info pages, so only the frequently used job control applications are listed here:</para>
<table frame="all">
  <title>Controlling processes</title>
  <tgroup align="left" cols="2" colsep="1" rowsep="1">
  <thead>
    <row>
<entry>(part of) command</entry>
      <entry>Meaning</entry>
</row>
</thead>
<tbody>
<row><entry><command>regular_command</command></entry><entry>Runs this command in the foreground.</entry></row>
<row><entry><command>command &amp;</command></entry><entry>Run this command in the background (release the terminal)</entry></row>
<row><entry><command>jobs</command></entry><entry>Show commands running in the background.</entry></row>
<row><entry><keycap>Ctrl</keycap>+<keycap>Z</keycap></entry><entry>Suspend (stop, but not quit) a process running in the foreground (suspend).</entry></row>
<row><entry><keycap>Ctrl</keycap>+<keycap>C</keycap></entry><entry>Interrupt (terminate and quit) a process running in the foreground.</entry></row>
<row><entry><parameter>%n</parameter></entry><entry>Every process running in the background gets a number assigned to it.  By using the % expression a job can be referred to using its number, for instance <command>fg <parameter>%2</parameter></command>.</entry></row>
<row><entry><command>bg</command></entry><entry>Reactivate a suspended program in the background.</entry></row>
<row><entry><command>fg</command></entry><entry>Puts the job back in the foreground.</entry></row>
<row><entry><command>kill</command></entry><entry>End a process (also see Shell Builtin Commands in the Info pages of <command>bash</command>)</entry></row><row><entry><command></command></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
<para>More practical examples can be found in the exercises.</para>
<para>Most UNIX systems are likely to be able to run <command>screen</command>, which is useful when you actually want another shell to execute commands.  Upon calling <command>screen</command>, a new session is created with an accompanying shell and/or commands as specified, which you can then put out of the way.  In this new session you may do whatever it is you want to do.  All programs and operations will run independent of the issuing shell.  You can then detach this session, while the programs you started in it continue to run, even when you log out of the originating shell, and pick your <emphasis>screen</emphasis> up again any time you like.</para>
<para>This program originates from a time when virtual consoles were not invented yet, and everything needed to be done using one text terminal.  To addicts, it still has meaning in Linux, even though we've had virtual consoles for almost ten years.</para>
</sect3>
<sect3 id="sect_04_01_02_02"><title>Automatic processes</title>
<para>Automatic or batch processes are not connected to a terminal.  Rather, these are tasks that can be queued into a spooler area, where they wait to be executed on a FIFO (first-in, first-out) basis.  Such tasks can be executed using one of two criteria:</para>
<itemizedlist>
<listitem><para>At a certain date and time: done using the <command>at</command> command, which we will discuss in the second part of this chapter.</para></listitem>
<listitem><para>At times when the total system load is low enough to accept extra jobs: done using the <command>batch</command> command.  By default, tasks are put in a queue where they wait to be executed until the system load is lower than 0.8.  In large environments, the system administrator may prefer batch processing when large amounts of data have to be processed or when tasks demanding a lot of system resources have to be executed on an already loaded system.  Batch processing is also used for optimizing system performance.</para></listitem>
</itemizedlist>
</sect3>
<sect3 id="sect_04_01_02_03"><title>Daemons</title>
<para>Daemons are server processes that run continuously.  Most of the time, they are initialized at system startup and then wait in the background until their service is required.  A typical example is the networking daemon, <emphasis>xinetd</emphasis>, which is started in almost every boot procedure.  After the system is booted, the network daemon just sits and waits until a client program, such as an FTP client, needs to connect.</para>
</sect3>

</sect2>
<sect2 id="sect_04_01_03"><title>Process attributes</title>
<para>A process has a series of characteristics:</para>
<itemizedlist>
<listitem><para>The process ID or PID: a unique identification number used to refer to the process.</para></listitem>
<listitem><para>The parent process ID or PPID: the number of the process (PID) that started this process.</para></listitem>
<listitem><para>Nice number: the degree of friendliness of this process toward other processes (not to be confused with process priority, which is calculated based on this nice number and recent CPU usage of the process).</para></listitem>
<listitem><para>Terminal or TTY: terminal to which the process is connected.</para></listitem>
<listitem><para>User name of the real and effective user (RUID and EUID): the owner of the process.  The real owner is the user issuing the command, the effective user is the one determining access to system resources.  RUID and EUID are usually the same, and the process has the same access rights the issuing user would have.  An example to clarify this: the browser <command>mozilla</command> in <filename>/usr/bin</filename> is owned by user <emphasis>root</emphasis>:</para>
<screen>
<prompt>theo:~&gt;</prompt> <command>ls -l /usr/bin/mozilla</command>
-rwxr-xr-x  1 root   root      4996 Nov 20 18:28 /usr/bin/mozilla*

<prompt>theo:~&gt;</prompt> <command>mozilla &amp;</command>
[1] 26595

<prompt>theo:~&gt;</prompt> <command>ps -af</command>
UID     PID  PPID C STIME TTY       TIME CMD
theo  26601 26599 0 15:04 pts/5 00:00:00 /usr/lib/mozilla/mozilla-bin
theo  26613 26569 0 15:04 pts/5 00:00:00 ps -af
</screen>
<para>When user <emphasis>theo</emphasis> starts this program, the process itself and all processes started by the initial process, will be owned by user <emphasis>theo</emphasis> and not by the system administrator.  When <command>mozilla</command> needs access to certain files, that access will be determined by <emphasis>theo</emphasis>'s permissions and not by <emphasis>root</emphasis>'s.</para>
</listitem>
<listitem><para>Real and effective group owner (RGID and EGID): The real group owner of a process is the primary group of the user who started the process.  The effective group owner is usually the same, except when SGID access mode has been applied to a file.</para></listitem>
</itemizedlist>
</sect2>
<sect2 id="sect_04_01_04"><title>Displaying process information</title>
<para>The <command>ps</command> command is one of the tools for visualizing processes.  This command has several options which can be combined to display different process attributes.</para>
<para>With no options specified, <command>ps</command> only gives information about the current shell and eventual processes:</para>
<screen>
<prompt>theo:~&gt;</prompt> <command>ps</command>
  PID TTY          TIME CMD
 4245 pts/7    00:00:00 bash
 5314 pts/7    00:00:00 ps
</screen>
<para>Since this does not give enough information - generally, at least a hundred processes are running on your system - we will usually select particular processes out of the list of all processes, using the <command>grep</command> command in a <emphasis>pipe</emphasis>, see <xref linkend="sect_05_01_02_01"></xref>, as in this line, which will select and display all processes owned by a particular user:</para>
<cmdsynopsis><command>ps <option>-ef</option> | grep <parameter>username</parameter></command></cmdsynopsis>
<para>This example shows all processes with a process name of <command>bash</command>, the most common login shell on Linux systems:</para>
<screen>
<prompt>theo:&gt;</prompt> <command>ps auxw | grep bash</command>
brenda   31970  0.0  0.3  6080 1556 tty2   S  Feb23   0:00 -bash
root     32043  0.0  0.3  6112 1600 tty4   S  Feb23   0:00 -bash
theo     32581  0.0  0.3  6384 1864 pts/1  S  Feb23   0:00 bash
theo     32616  0.0  0.3  6396 1896 pts/2  S  Feb23   0:00 bash
theo     32629  0.0  0.3  6380 1856 pts/3  S  Feb23   0:00 bash
theo      2214  0.0  0.3  6412 1944 pts/5  S  16:18   0:02 bash
theo      4245  0.0  0.3  6392 1888 pts/7  S  17:26   0:00 bash
theo      5427  0.0  0.1  3720  548 pts/7  S  19:22   0:00 grep bash
</screen>
<para>In these cases, the <command>grep</command> command finding lines containing the string <emphasis>bash</emphasis> is often displayed as well on systems that have a lot of idletime.  If you don't want this to happen, use the <command>pgrep</command> command.</para>  
<para>Bash shells are a special case: this process list also shows which ones are login shells (where you have to give your username and password, such as when you log in in textmode or do a remote login, as opposed to non-login shells, started up for instance by clicking a terminal window icon).  Such login shells are preceded with a dash (-).</para>

<para>More info can be found the usual way: <command>ps <option>--help</option></command> or <command>man <parameter>ps</parameter></command>.  GNU <command>ps</command> supports different styles of option formats; the above examples don't contain errors.</para>
<para>Note that <command>ps</command> only gives a momentary state of the active processes, it is a one-time recording.  The <command>top</command> program displays a more precise view by updating the results given by <command>ps</command> (with a bunch of options) once every five seconds, generating a new list of the processes causing the heaviest load periodically, meanwhile integrating more information about the swap space in use and the state of the CPU, from the <filename>proc</filename> file system:</para>
<screen>
 12:40pm up 9 days, 6:00, 4 users, load average: 0.21, 0.11, 0.03
89 processes: 86 sleeping, 3 running, 0 zombie, 0 stopped
CPU states:  2.5% user,  1.7% system,  0.0% nice, 95.6% idle
Mem:   255120K av, 239412K used, 15708K free, 756K shrd, 22620K buff
Swap: 1050176K av, 76428K used, 973748K free, 82756K cached

  PID USER  PRI NI SIZE  RSS SHARE STAT %CPU %MEM TIME COMMAND
 5005 root  14  0 91572  15M 11580 R    1.9  6.0  7:53 X
19599 jeff  14  0  1024 1024   796 R    1.1  0.4  0:01 top
19100 jeff   9  0  5288 4948  3888 R    0.5  1.9  0:24 gnome-terminal
19328 jeff   9  0 37884  36M 14724 S    0.5 14.8  1:30 mozilla-bin
    1 root   8  0   516  472   464 S    0.0  0.1  0:06 init
    2 root   9  0     0    0     0 SW   0.0  0.0  0:02 keventd
    3 root   9  0     0    0     0 SW   0.0  0.0  0:00 kapm-idled
    4 root  19 19     0    0     0 SWN  0.0  0.0  0:00 ksoftirqd_CPU0
    5 root   9  0     0    0     0 SW   0.0  0.0  0:33 kswapd
    6 root   9  0     0    0     0 SW   0.0  0.0  0:00 kreclaimd
    7 root   9  0     0    0     0 SW   0.0  0.0  0:00 bdflush
    8 root   9  0     0    0     0 SW   0.0  0.0  0:05 kupdated
    9 root  -1-20     0    0     0 SW&lt;  0.0  0.0  0:00 mdrecoveryd
   13 root   9  0     0    0     0 SW   0.0  0.0  0:01 kjournald
   89 root   9  0     0    0     0 SW   0.0  0.0  0:00 khubd
  219 root   9  0     0    0     0 SW   0.0  0.0  0:00 kjournald
  220 root   9  0     0    0     0 SW   0.0  0.0  0:00 kjournald
</screen>
<para>The first line of <command>top</command> contains the same information displayed by the <command>uptime</command> command:</para>
<screen>
<prompt>jeff:~&gt;</prompt> <command>uptime</command>
  3:30pm, up 12 days, 23:29, 6 users, load average: 0.01, 0.02, 0.00
</screen>
<para>The data for these programs is stored among others in <filename>/var/run/utmp</filename> (information about currently connected users) and in the virtual file system <filename>/proc</filename>, for example <filename>/proc/loadavg</filename> (average load information).  There are all sorts of graphical applications to view this data, such as the <emphasis>Gnome System Monitor</emphasis> and <emphasis>lavaps</emphasis>.  Over at <ulink url="http://www.freshmeat.net">FreshMeat</ulink> and <ulink url="http://www.sourceforge.org">SourceForge</ulink> you will find tens of applications that centralize this information along with other server data and logs from multiple servers on one (web) server, allowing monitoring of the entire IT infrastructure from one workstation.</para>

<para>The relations between processes can be visualized using the <command>pstree</command> command:</para>
<screen>
<prompt>sophie:~&gt;</prompt> <command>pstree</command>
init-+-amd
     |-apmd
     |-2*[artsd]
     |-atd
     |-crond
     |-deskguide_apple
     |-eth0
     |-gdm---gdm-+-X
     |           `-gnome-session-+-Gnome
     |                           |-ssh-agent
     |                           `-true
     |-geyes_applet
     |-gkb_applet
     |-gnome-name-serv
     |-gnome-smproxy
     |-gnome-terminal-+-bash---vim
     |                |-bash
     |                |-bash---pstree
     |                |-bash---ssh
     |                |-bash---mozilla-bin---mozilla-bin---3*[mozilla-bin]
     |                `-gnome-pty-helper
     |-gpm
     |-gweather
     |-kapm-idled
     |-3*[kdeinit]
     |-keventd
     |-khubd
     |-5*[kjournald]
     |-klogd
     |-lockd---rpciod
     |-lpd
     |-mdrecoveryd
     |-6*[mingetty]
     |-8*[nfsd]
     |-nscd---nscd---5*[nscd]
     |-ntpd
     |-3*[oafd]
     |-panel
     |-portmap
     |-rhnsd
     |-rpc.mountd
     |-rpc.rquotad
     |-rpc.statd
     |-sawfish
     |-screenshooter_a
     |-sendmail
     |-sshd---sshd---bash---su---bash
     |-syslogd
     |-tasklist_applet
     |-vmnet-bridge
     |-xfs
     `-xinetd-ipv6
</screen>
<para>The <option>-u</option> and <option>-a</option> options give additional information.  For more options and what they do, refer to the Info pages.</para>
<para>In the next section, we will see how one process can create another.</para>

</sect2>
<sect2 id="sect_04_01_05"><title>Life and death of a process</title>
<sect3 id="sect_04_01_05_01"><title>Process creation</title>
<para>A new process is created because an existing process makes an exact copy of itself.  This child process has the same environment as its parent, only the process ID number is different.  This procedure is called <emphasis>forking</emphasis>.</para>
<para>After the forking process, the address space of the child process is overwritten with the new process data.  This is done through an <emphasis>exec</emphasis> call to the system.</para>
<para>The <emphasis>fork-and-exec</emphasis> mechanism thus switches an old command with a new, while the environment in which the new program is executed remains the same, including configuration of input and output devices, environment variables and priority.  This mechanism is used to create all UNIX processes, so it also applies to the Linux operating system.  Even the first process, <command>init</command>, with process ID 1, is forked during the boot procedure in the so-called <emphasis>bootstrapping</emphasis> procedure.</para>
<para>This scheme illustrates the fork-and-exec mechanism.  The process ID changes after the fork procedure:</para>
<figure><title>Fork-and-exec mechanism</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/fork-and-exec.eps" format="EPS"></imagedata>
</imageobject>
<imageobject>
<imagedata fileref="images/fork-and-exec.png" format="PNG"></imagedata>
</imageobject>
<textobject>
<phrase>Fork creates a new process with the same content as the parent in memory but a different PID, exec replaces the content with the actual data to be processed, PID stays the same.</phrase>
</textobject>
</mediaobject>
</figure>

<para>There are a couple of cases in which <command>init</command> becomes the parent of a process, while the process was not started by <command>init</command>, as we already saw in the <command>pstree</command> example.   Many programs, for instance, <emphasis>daemonize</emphasis> their child processes, so they can keep on running when the parent stops or is being stopped.  A window manager is a typical example; it starts an <command>xterm</command> process that generates a shell that accepts commands.  The window manager then denies any further responsibility and passes the child process to <command>init</command>.  Using this mechanism, it is possible to change window managers without interrupting running applications.</para>
<para>Every now and then things go wrong, even in good families.  In an exceptional case, a process might finish while the parent does not wait for the completion of this process.  Such an unburied process is called a <emphasis>zombie</emphasis> process.</para>
</sect3>
<sect3 id="sect_04_01_05_02"><title>Ending processes</title>
<para>When a process ends normally (it is not killed or otherwise unexpectedly interrupted), the program returns its <emphasis>exit status</emphasis> to the parent.  This exit status is a number returned by the program providing the results of the program's execution.  The system of returning information upon executing a job has its origin in the C programming language in which UNIX has been written.</para>
<para>The return codes can then be interpreted by the parent, or in scripts.  The values of the return codes are program-specific.  This information can usually be found in the man pages of the specified program, for example the <command>grep</command> command returns <computeroutput>-1</computeroutput> if no matches are found, upon which a message on the lines of "No files found" can be printed.  Another example is the Bash Builtin command <command>true</command>, which does nothing except return an exit status of 0, meaning success.</para>
</sect3>
<sect3 id="sect_04_01_05_03"><title>Signals</title>
<para>Processes end because they receive a signal.  There are multiple signals that you can send to a process.  Use the <command>kill</command> command to send a signal to a process.  The command <command>kill <option>-l</option></command> shows a list of signals.  Most signals are for internal use by the system, or for programmers when they write code.  As a user, you will need the following signals:</para>
<table frame="all">
<title>Common signals</title>
<tgroup align="left" cols="3" colsep="1" rowsep="1">
<thead>
<row>
<entry>Signal name</entry><entry>Signal number</entry><entry>Meaning</entry>
</row>
</thead>
<tbody>
<row>
<entry>SIGTERM</entry><entry>15</entry><entry>Terminate the process in an orderly way.</entry>
</row>
<row>
<entry>SIGINT</entry><entry>2</entry><entry>Interrupt the process.  A process can ignore this signal.</entry>
</row>

<row>
<entry>SIGKILL</entry><entry>9</entry><entry>Interrupt the process.  A process can not ignore this signal.</entry>
</row>

<row>
<entry>SIGHUP</entry><entry>1</entry><entry>For daemons: reread the configuration file.</entry>
</row>

</tbody>
</tgroup>
</table>
<para>You can read more about default actions that are taken when sending a signal to a process in <command>man <option>7</option> <parameter>signal</parameter></command>.</para>
</sect3>
</sect2>
<sect2 id="sect_04_01_06"><title>SUID and SGID</title>
<para>As promised in the previous chapter, we will now discuss the special modes SUID and SGID in more detail.  These modes exist to provide normal users the ability to execute tasks they would normally not be able to do because of the tight file permission scheme used on UNIX based systems.  In the ideal situation special modes are used as sparsely as possible, since they include security risks.  Linux developers have generally tried to avoid them as much as possible.  The Linux <command>ps</command> version, for example, uses the information stored in the <filename>/proc</filename> file system, which is accessible to everyone, thus avoiding exposition of sensitive system data and resources to the general public.  Before that, and still on older UNIX systems, the <command>ps</command> program needed access to files such as <filename>/dev/mem</filename> and <filename>/dev/kmem</filename>, which had disadvantages because of the permissions and ownerships on these files:</para>
<screen>
<prompt>rita:~&gt;</prompt> <command>ls -l /dev/*mem</command>
crw-r-----    1 root     kmem       1,   2 Aug 30 22:30 /dev/kmem
crw-r-----    1 root     kmem       1,   1 Aug 30 22:30 /dev/mem
</screen>
<para>With older versions of <command>ps</command>, it was not possible to start the program as a common user, unless special modes were applied to it.</para>
<para>While we generally try to avoid applying any special modes, it is sometimes necessary to use an SUID.  An example is the mechanism for changing passwords.  Of course users will want to do this themselves instead of having their password set by the system administrator.  As we know, user names and passwords are listed in the <filename>/etc/passwd</filename> file, which has these access permissions and owners:</para>
<screen>
<prompt>bea:~&gt;</prompt> <command>ls -l /etc/passwd</command>
-rw-r--r--    1 root     root     1267 Jan 16 14:43 /etc/passwd
</screen>
<para>Still, users need to be able to change their own information in this file.  This is achieved by giving the <command>passwd</command> program special permissions:</para>
<screen>
<prompt>mia:~&gt;</prompt> <command>which passwd</command>
passwd is /usr/bin/passwd

<prompt>mia:~&gt;</prompt> <command>ls -l /usr/bin/passwd</command>
-r-s--x--x    1 root     root    13476 Aug  7 06:03 /usr/bin/passwd*
</screen>
<para>When called, the <command>passwd</command> command will run using the access permissions of <emphasis>root</emphasis>, thus enabling a common user to edit the password file which is owned by the system admin.</para>
<para>SGID modes on a file don't occur nearly as frequently as SUID, because SGID often involves the creation of extra groups.  In some cases, however, we have to go through this trouble in order to build an elegant solution (don't worry about this too much -  the necessary groups are usually created upon installation).  This is the case for the <command>write</command> and <command>wall</command> programs, which are used to send messages to other users' terminals (ttys).  The <command>write</command> command writes a message to a single user, while <command>wall</command> writes to all connected users.</para>
<para>Sending text to another user's terminal or graphical display is normally not allowed.  In order to bypass this problem, a group has been created, which owns all terminal devices.  When the <command>write</command> and <command>wall</command> commands are granted SGID permissions, the commands will run using the access rights as applicable to this group, <emphasis>tty</emphasis> in the example.  Since this group has write access to the destination terminal, also a user having no permissions to use that terminal in any way can send messages to it.</para>
<para>In the example below, user <emphasis>joe</emphasis> first finds out on which terminal his correspondent is connected, using the <command>who</command> command.  Then he sends her a message using the <command>write</command> command.  Also illustrated are the access rights on the <command>write</command> program and on the terminals occupied by the receiving user: it is clear that others than the user owner have no permissions on the device, except for the group owner, which can write to it.</para>
<screen>
<prompt>joe:~&gt;</prompt> <command>which write</command>
write is /usr/bin/write

<prompt>joe:~&gt;</prompt> <command>ls -l /usr/bin/write</command>
-rwxr-sr-x    1 root     tty      8744 Dec  5 00:55 /usr/bin/write*

<prompt>joe:~&gt;</prompt> <command>who</command>
jenny     tty1     Jan 23 11:41
jenny     pts/1    Jan 23 12:21 (:0)
jenny     pts/2    Jan 23 12:22 (:0)
jenny     pts/3    Jan 23 12:22 (:0)
joe       pts/0    Jan 20 10:13 (lo.callhost.org)

<prompt>joe:~&gt;</prompt> <command>ls -l /dev/tty1</command>
crw--w----    1 jenny   tty  4,     1 Jan 23 11:41 /dev/tty1

<prompt>joe:~&gt;</prompt> <command>write jenny tty1</command>
hey Jenny, shall we have lunch together?
^C
</screen>
<para>User <emphasis>jenny</emphasis> gets this on her screen:</para>
<screen>
Message from joe@lo.callhost.org on ptys/1 at 12:36 ...
hey Jenny, shall we have lunch together?
EOF
</screen>
<para>After receiving a message, the terminal can be cleared using the <keycap>Ctrl</keycap>+<keycap>L</keycap> key combination.  In order to receive no messages at all (except from the system administrator), use the <command>mesg</command> command.  To see which connected users accept messages from others use <command>who <option>-w</option></command>.  All features are fully explained in the Info pages of each command.</para>
<note><title>Group names may vary</title>
<para>The group scheme is specific to the distribution.  Other distributions may use other names or other solutions.</para></note>

</sect2>

</sect1>
<sect1 id="sect_04_02"><title>Boot process, Init and shutdown</title>
<sect2 id="sect_04_02_01"><title>Introduction</title>
<para> One of the most powerful aspects of Linux concerns its open method of starting and stopping the operating system, where it loads specified programs using their particular configurations, permits you to change those configurations to control the boot process, and shuts down in a graceful and organized way.</para>
<para> Beyond the question of controlling the boot or shutdown process, the open nature of Linux makes it much easier to determine the exact source of most problems associated with starting up or shutting down your system. A basic understanding of this process is quite beneficial to everybody who uses a Linux system.</para>
<para>A lot of Linux systems use <command>lilo</command>, the LInux LOader for booting operating systems.  We will only discuss GRUB, however, which is easier to use and more flexible.  Should you need information about <command>lilo</command>, refer to the man pages and HOWTOs.  Both systems support dual boot installations, we refer to the HOWTOs on this subject for practical examples and background information.</para>
</sect2>
<sect2 id="sect_04_02_02"><title>The boot process</title>
<para>When an x86 computer is booted, the processor looks at the end of the system memory for the BIOS (Basic Input/Output System) and runs it. The BIOS program is written into permanent read-only memory and is always available for use. The BIOS provides the lowest level interface to peripheral devices and controls the first step of the boot process.</para>
<para> The BIOS tests the system, looks for and checks peripherals, and then looks for a drive to use to boot the system. Usually it checks the floppy drive (or CD-ROM drive on many newer systems) for bootable media, if present, and then it looks to the hard drive. The order of the drives used for booting is usually controlled by a particular BIOS setting on the system.  Once Linux is installed on the hard drive of a system, the BIOS looks for a Master Boot Record (MBR) starting at the first sector on the first hard drive, loads its contents into memory, then passes control to it.</para>
<para> This MBR contains instructions on how to load the GRUB (or LILO) boot-loader, using a pre-selected operating system.  The MBR then loads the boot-loader, which takes over the process (if the boot-loader is installed in the MBR). In the default Red Hat Linux configuration, GRUB uses the settings in the MBR to display boot options in a menu.  Once GRUB has received the correct instructions for the operating system to start, either from its command line or configuration file, it finds the necessary boot file and hands off control of the machine to that operating system.</para>
</sect2>
<sect2 id="sect_04_02_03"><title>GRUB features</title>
<para>This boot method is called <emphasis>direct loading</emphasis> because instructions are used to directly load the operating system, with no intermediary code between the boot-loaders and the operating system's main files (such as the kernel). The boot process used by other operating systems may differ slightly from the above, however. For example, Microsoft's DOS and Windows operating systems completely overwrite anything on the MBR when they are installed without incorporating any of the current MBR's configuration. This destroys any other information stored in the MBR by other operating systems, such as Linux. The Microsoft operating systems, as well as various other proprietary operating systems, are loaded using a chain loading boot method. With this method, the MBR points to the first sector of the partition holding the operating system, where it finds the special files necessary to actually boot that operating system.</para>
<para>
GRUB supports both boot methods, allowing you to use it with almost any operating system, most popular file systems, and almost any hard disk your BIOS can recognize.</para>
<para>GRUB contains a number of other features; the most important include:</para>
<itemizedlist>
<listitem><para>GRUB provides a true command-based, pre-OS environment on x86 machines to allow maximum flexibility in loading operating systems with certain options or gathering information about the system.</para></listitem>
<listitem><para>GRUB supports Logical Block Addressing (LBA) mode, needed to access many IDE and all SCSI hard disks.  Before LBA, hard drives could encounter a 1024-cylinder limit, where the BIOS could not find a file after that point.</para></listitem>
<listitem><para>GRUB's configuration file is read from the disk every time the system boots, preventing you from having to write over the MBR every time you change the boot options.</para></listitem>
</itemizedlist>
<para>A full description of GRUB may be found by issuing the <command>info <parameter>grub</parameter></command> command or at <ulink url="http://www.gnu.org/software/grub/">the GRUB site</ulink>.  The Linux Documentation Project has a <ulink url="http://www.tldp.org/HOWTO/mini/Multiboot-with-GRUB.html">Multiboot with GRUB Mini-HOWTO</ulink>.</para>
</sect2>
<sect2 id="sect_04_02_04"><title>Init</title>
<para>The kernel, once it is loaded, finds <command>init</command> in <filename>sbin</filename> and executes it.</para>
<para>When <command>init</command> starts, it becomes the parent or grandparent of all of the processes that start up automatically on your Linux system. The first thing <command>init</command> does, is reading its initialization file, <filename>/etc/inittab</filename>.  This instructs <command>init</command> to read an initial configuration script for the environment, which sets the path, starts swapping, checks the file systems, and so on. Basically, this step takes care of everything that your system needs to have done at system initialization: setting the clock, initializing serial ports and so forth.</para>
<para> Then <command>init</command> continues to read the <filename>/etc/inittab</filename> file, which describes how the system should be set up in each run level and sets the default <emphasis>run level</emphasis>.  A run level is a configuration of processes.  All UNIX-like systems can be run in different process configurations, such as the single user mode, which is referred to as run level 1 or run level S (or s).  In this mode, only the system administrator can connect to the system.  It is used to perform maintenance tasks without risks of damaging the system or user data.  Naturally, in this configuration we don't need to offer user services, so they will all be disabled.  Another run level is the reboot run level, or run level 6, which shuts down all running services according to the appropriate procedures and then restarts the system.</para>
<para>Commonly, run level 3 is configured to be text mode on a Linux machine, and run level 5 initializes the graphical login and environment.  More about run levels in the next section, see <xref linkend="sect_04_02_05"></xref>.</para>
<para>After having determined the default run level for your system, <command>init</command> starts all of the background processes necessary for the system to run by looking in the appropriate <filename>rc</filename> directory for that run level.  <command>init</command> runs each of the kill scripts (their file names start with a K) with a stop parameter.  It then runs all of the start scripts (their file names start with an S) in the appropriate run level directory so that all services and applications are started correctly. In fact, you can execute these same scripts manually after the system is finished booting with a command like <command>/etc/init.d/httpd <parameter>stop</parameter></command> or <command>service <parameter>httpd</parameter> <parameter>stop</parameter></command> logged in as <emphasis>root</emphasis>, in this case stopping the web server.</para>
<note><title>Special case</title>
<para>Note that on system startup, the scripts in <filename>rc2.d</filename> and <filename>rc3.d</filename> are usually executed.  In that case, no services are stopped.  There are only services that are started.</para>
</note>
<para> None of the scripts that actually start and stop the services are located in <filename>/etc/rc&lt;x&gt;.d</filename>. Rather, all of the files in <filename>/etc/rc&lt;x&gt;.d</filename> are symbolic links that point to the actual scripts located in <filename>/etc/init.d</filename>. A symbolic link is nothing more than a file that points to another file, and is used in this case because it can be created and deleted without affecting the actual scripts that kill or start the services. The symbolic links to the various scripts are numbered in a particular order so that they start in that order. You can change the order in which the services start up or are killed by changing the name of the symbolic link that refers to the script that actually controls the service.  You can use the same number multiple times if you want a particular service started or stopped right before or after another service, as in the example below, listing the content of <filename>/etc/rc5.d</filename>, where <command>crond</command> and <command>xfs</command> are both started from a linkname starting with <quote>S90</quote>.  In this case, the scripts are started in alphabetical order.</para>

<screen>
<prompt>[jean@blub /etc/rc5.d]</prompt> <command>ls</command>
K15httpd@     K45named@    S08ipchains@  S25netfs@      S85gpm@
K16rarpd@     K46radvd@    S08iptables@  S26apmd@       S90crond@
K20nfs@       K61ldap@     S09isdn@      S28autofs@     S90xfs@
K20rstatd@    K65identd@   S10network@   S30nscd@       S95anacron@
K20rusersd@   K74ntpd@     S12syslog@    S55sshd@       S95atd@
K20rwalld@    K74ypserv@   S13portmap@   S56rawdevices@ S97rhnsd@
K20rwhod@     K74ypxfrd@   S14nfslock@   S56xinetd@     S99local@
K25squid@     K89bcm5820@  S17keytable@  S60lpd@
K34yppasswdd@  S05kudzu@    S20random@    S80sendmail@
</screen>
<para>After <command>init</command> has progressed through the run levels to get to the default run level, the <filename>/etc/inittab</filename> script forks a <command>getty</command> process for each virtual console (login prompt in text mode).  <command>getty</command> opens tty lines, sets their modes, prints the login prompt, gets the user's name, and then initiates a login process for that user.  This allows users to authenticate themselves to the system and use it.  By default, most systems offer 6 virtual consoles, but as you can see from the <filename>inittab</filename> file, this is configurable.</para>
<para>
<filename>/etc/inittab</filename> can also tell <command>init</command> how it should handle a user pressing <keycap>Ctrl</keycap>+<keycap>Alt</keycap>+<keycap>Delete</keycap> at the console. As the system should be properly shut down and restarted rather than immediately power-cycled, <command>init</command> is told to execute the command <command>/sbin/shutdown <option>-t3 -r</option> <parameter>now</parameter></command>, for instance, when a user hits those keys. In addition, <filename>/etc/inittab</filename> states what <command>init</command> should do in case of power failures, if your system has a UPS unit attached to it.</para>
<para>
On most RPM-based systems the graphical login screen is started in run level 5, where <filename>/etc/inittab</filename> runs a script called <filename>/etc/X11/prefdm</filename>. The <filename>prefdm</filename> script runs the preferred X display manager, based on the contents of the <filename>/etc/sysconfig/desktop</filename> directory.  This is typically <command>gdm</command> if you run GNOME or <command>kdm</command> if you run KDE, but they can be mixed, and there's also the <command>xdm</command> that comes with a standard X installation.</para>
<para>But there are other possibilities as well.  On Debian, for instance, There is an initscript for each of the display managers, and the content of the <filename>/etc/X11/default-display-manager</filename> is used to determine which one to start.  More about the graphical interface can be read in <xref linkend="sect_07_03"></xref>.  Ultimately, your system documentation will explain the details about the higher level aspects of <command>init</command>.</para>
<para>The <filename>/etc/default</filename> and/or <filename>/etc/sysconfig</filename> directories contain entries for a range of functions and services, these are all read at boot time.  The location of the directory containing system defaults might be somewhat different depending on your Linux distribution.</para>
<para>Besides the graphical user environment, a lot of other services may be started as well.  But if all goes well, you should be looking at a login prompt or login screen when the boot process has finished.</para>

<note><title>Other procedures</title>
<para>We explained how SysV <command>init</command> works on x86 based machines.  Startup procedures may vary on other architectures and distributions.  Other systems may use the BSD-style <command>init</command>, where startup files are not split up into multiple <filename>/etc/rc&lt;LEVEL&gt;.d</filename> directories.  It might also be possible that your system uses <filename>/etc/rc.d/init.d</filename> instead of <filename>/etc/init.d</filename>.</para></note>
</sect2>
<sect2 id="sect_04_02_05"><title>Init run levels</title>
<para> The idea behind operating different services at different run levels essentially revolves around the fact that different systems can be used in different ways. Some services cannot be used until the system is in a particular state, or <emphasis>mode</emphasis>, such as being ready for more than one user or having networking available.</para>
<para>
There are times in which you may want to operate the system in a lower mode.  Examples are fixing disk corruption problems in run level 1 so no other users can possibly be on the system, or leaving a server in run level 3 without an X session running. In these cases, running services that depend upon a higher system mode to function does not make sense because they will not work correctly anyway. By already having each service assigned to start when its particular run level is reached, you ensure an orderly start up process, and you can quickly change the mode of the machine without worrying about which services to manually start or stop.</para>
<para>Available run levels are generally described in <filename>/etc/inittab</filename>, which is partially shown below:</para>
<screen>

#
# inittab   This file describes how the INIT process should set up
#           the system in a certain run-level.

# Default runlevel. The runlevels are:
#   0 - halt (Do NOT set initdefault to this)
#   1 - Single user mode
#   2 - Multiuser, without NFS 
#	(The same as 3, if you do not have networking)
#   3 - Full multiuser mode
#   4 - unused
#   5 - X11
#   6 - reboot (Do NOT set initdefault to this)
# 
id:5:initdefault:
&lt;--cut--&gt;
</screen>

<para> Feel free to configure runlevels 2 and 4 as you see fit. Many users configure those runlevels in a way that makes the most sense for them while leaving the standard runlevels 3 and 5 alone. This allows them to quickly move in and out of their custom configuration without disturbing the normal set of features at the standard runlevels.</para>
<para> If your machine gets into a state where it will not boot due to a bad <filename>/etc/inittab</filename> or will not let you log in because you have a corrupted <filename>/etc/passwd</filename> file (or if you have simply forgotten your password), boot into single-user mode.</para>
<tip><title>No graphics?</title>
<para>When you are working in text mode because you didn't get presented a graphical login screen on the console of your machine, you can normally switch to console 7 or up to have a graphical login.  If this is not the case, check the current run level using the command <command>who <option>-r</option></command>.  If it is set to something else than 5, chances are that the system does not start up in graphical mode by default.  Contact your system administrator or read <command>man init</command> in that case.  Note that switching run levels is done using the <command>init</command> command; switching from a text to a graphical console or vice versa does not involve a run level switch.</para>
</tip>
<para>The discussion of run levels, scripts and configurations in this guide tries to be as general as possible.  Lots of variations exist.  For instance, Gentoo Linux stores scripts in <filename>/etc/runlevels</filename>.  Other systems might first run through (a) lower runlevel(s) and execute all the scripts in there before arriving at the final runlevel and executing those scripts.  Refer to your system documentation for more information.</para>

<sect3 id="sect_04_02_05_01"><title>Tools</title>
<para>The <command>chkconfig</command> or <command>update-rc.d</command> utilities, when installed on your system, provide a simple command-line tool for maintaining the <filename>/etc/init.d</filename> directory hierarchy. These relieve system administrators from having to directly manipulate the numerous symbolic links in the directories under <filename>/etc/rc[x].d</filename>.</para>
<para>
In addition, some systems offer the <command>ntsysv</command> tool, which provides a text-based interface; you may find this easier to use than <command>chkconfig</command>'s command-line interface.  On SuSE Linux, you will find the <command>yast</command> and <command>insserv</command> tools.  For Mandrake easy configuration, you may want to try <emphasis>DrakConf</emphasis>, which allows among other features switching between run levels 3 and 5.  In Mandriva this became the <application>Mandriva Linux COntrol Center</application>.</para>
<para>
Most distributions provide a graphical user interface for configuring processes, check with your system documentation.</para>
<para>
All of these utilities must be run as root.  The system administrator may also manually create the appropriate links in each run level directory in order to start or stop a service in a certain run level.</para>
</sect3>
</sect2>
<sect2 id="sect_04_02_06"><title>Shutdown</title>
<para>UNIX was not made to be shut down, but if you really must, use the <command>shutdown</command> command.  After completing the shutdown procedure, the <option>-h</option> option will halt the system, while <option>-r</option> will reboot it.</para>
<para>The <command>reboot</command> and <command>halt</command> commands are now able to invoke <command>shutdown</command> if run when the system is in runlevels 1-5, and thus ensure proper shutdown of the system,but  it is a bad habit to get into, as not all UNIX/Linux versions have this feature.</para>
<para>If your computer does not power itself down, you should not turn off the computer until you see a message indicating that the system is halted or finished shutting down, in order to give the system the time to unmount all partitions.  Being impatient may cause data loss.</para>

</sect2>

</sect1>
<sect1 id="sect_04_03"><title>Managing processes</title>
<sect2 id="sect_04_03_01"><title>Work for the system admin</title>
<para>While managing system resources, including processes, is a task for the local system administrator, it doesn't hurt a common user to know something about it, especially where his or her own processes and their optimal execution are concerned.</para>
<para>We will explain a little bit on a theoretical level about system performance, though not as far as hardware optimization and such.  Instead, we will study the daily problems a common user is confronted with, and actions such a user can take to optimally use the resources available.  As we learn in the next section, this is mainly a matter of thinking before acting.</para>
<figure><title>Can't you go faster?</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/trappen.eps" format="EPS"></imagedata>
</imageobject>
<imageobject>
<imagedata fileref="images/trappen.png" format="PNG"></imagedata>
</imageobject>
<textobject>
<phrase>Man-powered computer: one person works the pedals, one person works with the comp.</phrase>
</textobject>
</mediaobject>
</figure>


</sect2>
<sect2 id="sect_04_03_02"><title>How long does it take?</title>
<para>Bash offers a built-in <command>time</command> command that displays how long a command takes to execute.  The timing is highly accurate and can be used on any command.  In the example below, it takes about a minute and a half to make this book:</para>


<screen>
<prompt>billy:~/xml/src&gt;</prompt> <command>time make</command>
Output written on abook.pdf (222 pages, 1619861 bytes).
Transcript written on abook.log.

real	1m41.056s
user	1m31.190s
sys	0m1.880s
</screen>

<para>The GNU <command>time</command> command in <filename>/usr/bin</filename> (as opposed to the shell built-in version) displays more information that can be formatted in different ways.  It also shows the exit status of the command, and the total elapsed time.  The same command as the above using the independent <command>time</command> gives this output:</para>

<screen>
<prompt>billy:~/xml/src&gt;</prompt> <command>/usr/bin/time make</command>
Output written on abook.pdf (222 pages, 1595027 bytes).
Transcript written on abook.log.

Command exited with non-zero status 2
88.87user 1.74system 1:36.21elapsed 94%CPU 
				(0avgtext+0avgdata 0maxresident)k
0inputs+0outputs (2192major+30002minor)pagefaults 0swaps
</screen>
<para>Refer again to the Info pages for all the information.</para>

</sect2>
<sect2 id="sect_04_03_03"><title>Performance</title>
<para>To a user, performance means quick execution of commands.  To a system manager, on the other hand, it means much more:  the system admin has to optimize system performance for the whole system, including users, all programs and daemons.  System performance can depend on a thousand tiny things which are not accounted for with the <command>time</command> command:</para>
<itemizedlist>
<listitem><para>the program executing is badly written or doesn't use the computer appropriately</para></listitem>
<listitem><para>access to disks, controllers, display, all kinds of interfaces, etc.</para></listitem>
<listitem><para>reachability of remote systems (network performance)</para></listitem>
<listitem><para>amount of users on the system, amount of users actually working simultaneously</para></listitem>
<listitem><para>time of day</para></listitem>
<listitem><para>...</para></listitem>
</itemizedlist>
</sect2>
<sect2 id="sect_04_03_04"><title>Load</title>
<para>In short:  the load depends on what is normal for your system.  My old P133 running a firewall, SSH server, file server, a route daemon, a sendmail server, a proxy server and some other services doesn't complain with 7 users connected; the load is still 0 on average.  Some (multi-CPU) systems I've seen were quite happy with a load of 67.  There is only one way to find out - check the load regularly if you want to know what's normal.  If you don't, you will only be able to measure system load from the response time of the command line, which is a very rough measurement since this speed is influenced by a hundred other factors.</para>
<para>Keep in mind that different systems will behave different with the same load average.  For example, a system with a graphics card supporting hardware acceleration will have no problem rendering 3D images, while the same system with a cheap VGA card will slow down tremendously while rendering.  My old P133 will become quite uncomfortable when I start the X server, but on a modern system you hardly notice the difference in the system load.</para>
</sect2>
<sect2 id="sect_04_03_05"><title>Can I do anything as a user?</title>
<para>A big environment can slow you down.  If you have lots of environment variables set (instead of shell variables), long search paths that are not optimized (errors in setting the path environment variable) and such, the system will need more time to search and read data.</para>
<para>In X, window managers and desktop environments can be real CPU-eaters.  A really fancy desktop comes with a price, even when you can download it for free, since most desktops provide add-ons ad infinitum.  Modesty is a virtue if you don't buy a new computer every year.</para>
<sect3 id="sect_04_03_05_01"><title>Priority</title>
<para>The priority or importance of a job is defined by it's <emphasis>nice</emphasis> number.  A program with a high nice number is friendly to other programs, other users and the system; it is not an important job.  The lower the nice number, the more important a job is and the more resources it will take without sharing them.</para>
<para>Making a job nicer by increasing its nice number is only useful for processes that use a lot of CPU time (compilers, math applications and such).  Processes that always use a lot of I/O time are automatically rewarded by the system and given a higher priority (a lower nice number), for example keyboard input always gets highest priority on a system.</para>
<para>Defining the priority of a program is done with the <command>nice</command> command.</para>
<para>Most systems also provide the BSD <command>renice</command> command, which allows you to change the <emphasis>niceness</emphasis> of a running command.  Again, read the man page for your system-specific information.</para>
<caution><title>Interactive programs</title>
<para>It is NOT a good idea to <command>nice</command> or <command>renice</command> an interactive program or a job running in the foreground.</para></caution>
<para>Use of these commands is usually a task for the system administrator.  Read the man page for more info on extra functionality available to the system administrator.</para>
</sect3>
<sect3 id="sect_04_03_05_02"><title>CPU resources</title>
<para>On every Linux system, many programs want to use the CPU(s) at the same time, even if you are the only user on the system.  Every program needs a certain amount of cycles on the CPU to run.  There may be times when there are not enough cycles because the CPU is too busy.  The <command>uptime</command> command is wildly inaccurate (it only displays averages, you have to know what is normal), but far from being useless.  There are some actions you can undertake if you think your CPU is to blame for the unresponsiveness of your system:</para>
<itemizedlist>
<listitem><para>Run heavy programs when the load is low.  This may be the case on your system during the night.  See next section for scheduling.</para></listitem>
<listitem><para>Prevent the system from doing unnecessary work: stop daemons and programs that you don't use, use <command>locate</command> instead of a heavy <command>find</command>, ...</para></listitem>
<listitem><para>Run big jobs with a low priority</para></listitem>
</itemizedlist>
<para>If none of these solutions are an option in your particular situation, you may want to upgrade your CPU.  On a UNIX machine this is a job for the system admin.</para>
</sect3>
<sect3 id="sect_04_03_05_03"><title>Memory resources</title>
<para>When the currently running processes expect more memory than the system has physically available, a Linux system will not crash; it will start paging, or <emphasis>swapping</emphasis>, meaning the process uses the memory on disk or in swap space, moving contents of the physical memory (pieces of running programs or entire programs in the case of swapping) to disk, thus reclaiming the physical memory to handle more processes.  This slows the system down enormously since access to disk is much slower than access to memory.  The <command>top</command> command can be used to display memory and swap use.   Systems using glibc offer the <command>memusage</command> and <command>memusagestat</command> commands to visualize memory usage.</para>
<para>If you find that a lot of memory and swap space are being used, you can try:</para>
<itemizedlist>
<listitem><para>Killing, stopping or renicing those programs that use a big chunk of memory</para></listitem>
<listitem><para>Adding more memory (and in some cases more swap space) to the system.</para></listitem>
<listitem><para>Tuning system performance, which is beyond the scope of this document.  See the reading list in <xref linkend="app1"></xref> for more.</para></listitem>
</itemizedlist>
</sect3>
<sect3 id="sect_04_03_05_04"><title>I/O resources</title>
<para>While I/O limitations are a major cause of stress for system admins, the Linux system offers rather poor utilities to measure I/O performance.  The <command>ps</command>, <command>vmstat</command> and <command>top</command> tools give some indication about how many programs are waiting for I/O; <command>netstat</command> displays network interface statistics, but there are virtually no tools available to measure the I/O response to system load, and the <command>iostat</command> command gives a brief overview of general I/O usage.  Various graphical front-ends exist to put the output of these commands in a humanly understandable form.</para>
<para>Each device has its own problems, but the bandwidth available to network interfaces and the  bandwidth available to disks are the two primary causes of bottlenecks in I/O performance.</para>
<para>Network I/O problems:</para>
<itemizedlist>
<listitem><para>Network overload:</para>
     <para>The amount of data transported over the network is larger than the network's capacity, resulting in slow execution of every network related task for all users.  They can be solved by cleaning up the network (which mainly involves disabling protocols and services that you don't need) or by reconfiguring the network (for example use of subnets, replacing hubs with switches, upgrading interfaces and equipment).</para>
</listitem>
<listitem><para>Network integrity problems:</para>
     <para>Occurs when data is transferred incorrectly.  Solving this kind of problem can only be done by isolating the faulty element and replacing it.</para>
</listitem>
</itemizedlist>

<para>Disk I/O problems:</para>
<itemizedlist>
<listitem><para>per-process transfer rate too low:</para>
<para>Read or write speed for a single process is not sufficient.</para></listitem>
<listitem><para>aggregate transfer rate too low:</para>
<para>The maximum total bandwidth that the system can provide to all programs that run is not enough.</para></listitem>
</itemizedlist>
<para>This kind of problem is more difficult to detect, and usually takes extra hardware in order to re-divide data streams over buses, controllers and disks, if overloaded hardware is cause of the problem.  One solution to solve this is a RAID array configuration optimized for input and output actions.  This way, you get to keep the same hardware.  An upgrade to faster buses, controlers and disks is usually the other option.</para>
<para>If overload is not the cause, maybe your hardware is gradually failing, or not well connected to the system.  Check contacts, connectors and plugs to start with.</para>
</sect3>
<sect3 id="sect_04_03_05_05"><title>Users</title>
<para>Users can be divided in several classes, depending on their behavior with resource usage:</para>
<itemizedlist>
<listitem><para>Users who run a (large) number of small jobs: you, the beginning Linux user, for instance.</para></listitem> 
<listitem><para>Users who run relatively few but large jobs: users running simulations, calculations, emulators or other programs that eat a lot of memory, and usually these users have accompanying large data files.</para></listitem>
<listitem><para>Users who run few jobs but use a lot of CPU time (developers and the like).</para></listitem>
</itemizedlist>
<para>You can see that system requirements may vary for each class of users, and that it can be hard to satisfy everyone.  If you are on a multi-user system, it is useful (and fun) to find out habits of other users and the system, in order to get the most out of it for your specific purposes.</para>
</sect3>
<sect3 id="sect_04_03_05_06"><title>Graphical tools</title>
<para>For the graphical environment, there are a whole bunch of monitoring tools available.  Below is a screen shot of the Gnome System Monitor, which has features for displaying and searching process information, and monitoring system resources:</para>
<figure><title>Gnome System Monitor</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/system-monitor.eps" format="EPS"></imagedata></imageobject>
<imageobject>
<imagedata fileref="images/system-monitor.png" format="PNG"></imagedata>
</imageobject>
<textobject>
<phrase>This GUI shows a graphic of how load and memory usage vary with time.</phrase>
</textobject>
</mediaobject>
</figure>
<para>There are also a couple of handy icons you can install in the task bar, such as a disk, memory and load monitor.  <command>xload</command> is another small X application for monitoring system load.  Find your favorite!</para> 
</sect3>
<sect3 id="sect_04_03_05_07"><title>Interrupting your processes</title>
<para>As a non-privileged user, you can only influence your own processes.  We already saw how you can display processes and filter out processes that belong to a particular user, and what possible restrictions can occur.  When you see that one of your processes is eating too much of the system's resources, there are two things that you can do:</para>
<orderedlist>
<listitem><para>Make the process use less resources without interrupting it;</para></listitem>
<listitem><para>Stop the process altogether.</para></listitem>
</orderedlist>
<para>In the case that you want the process to continue to run, but you also want to give the other processes on the system a chance, you can <command>renice</command> the process.  Appart from using the <command>nice</command> or <command>renice</command> commands, <command>top</command> is an easy way of spotting the troublesome process(es) and reducing priority.</para>
<para>Identify the process in the <quote>NI</quote> column, it will most likely have a negative priority.  Type <command>r</command> and enter the process ID of the process that you want to renice.  Then enter the nice value, for instance <quote>20</quote>.  That means that from now on, this process will take 1/5 of the CPU cycles at the most.</para>
<para>Examples of processes that you want to keep on running are emulators, virtual machines, compilers and so on.</para>

<para>If you want to stop a process because it hangs or is going totally berserk in the way of I/O consumption, file creation or use of other system resources, use the <command>kill</command> command.  If you have the opportunity, first try to kill the process softly, sending it the <emphasis>SIGTERM</emphasis> signal.  This is an instruction to terminate whatever it is doing, according to procedures as described in the code of the program:</para>
<screen>
<prompt>joe:~&gt;</prompt> <command>ps <option>-ef</option></command> | <command>grep <parameter>mozilla</parameter></command>
joe    25822	1  0 Mar11 ?	00:34:04 /usr/lib/mozilla-1.4.1/mozilla-

<prompt>joe:~&gt;</prompt> <command>kill <option>-15</option> <parameter>25822</parameter></command>
</screen>
<para>In the example above, user <emphasis>joe</emphasis> stopped his Mozilla browser because it hung.</para>
<para>Some processes are a little bit harder to get rid of.  If you have the time, you might want to send them the SIGINT signal to interrupt them.  If that does not do the trick either, use the strongest signal, SIGKILL.  In the example below, <emphasis>joe</emphasis> stops a Mozilla that is frozen:</para>
<screen>
<prompt>joe:~&gt;</prompt> <command>ps <option>-ef</option></command> | <command>grep <parameter>mozilla</parameter></command>
joe    25915	1  0 Mar11 ?	00:15:06 /usr/lib/mozilla-1.4.1/mozilla-

<prompt>joe:~&gt;</prompt> <command>kill <option>-9</option> <parameter>25915</parameter></command>

<prompt>joe:~&gt;</prompt> <command>ps <option>-ef</option></command> | <command>grep <parameter>25915</parameter></command>
joe	2634 32273 0 18:09 pts/4   00:00:00 grep 25915
</screen>
<para>In such cases, you might want to check that the process is really dead, using the <command>grep</command> filter again on the PID.  If this only returns the <command>grep</command> process, you can be sure that you succeeded in stopping the process.</para>
<para>Among processes that are hard to kill is your shell.  And that is a good thing: if they would be easy to kill, you woud loose your shell every time you type <keycap>Ctrl</keycap>-<keycap>C</keycap> on the command line accidentally, since this is equivalent to sending a SIGINT.</para>
<note><title>UNIX without pipes is almost unthinkable</title>
<para>The usage of pipes (|) for using output of one command as input of another is explained in the next chapter, <xref linkend="chap_05"></xref>.</para>
</note>
<para>In a graphical environment, the <command>xkill</command> program is very easy to use.  Just type the name of the command, followed by an <keycap>Enter</keycap> and select the window of the application that you want to stop.  It is rather dangerous because it sends a SIGKILL by default, so only use it when an application hangs.</para>
</sect3>

</sect2>

</sect1>
<sect1 id="sect_04_04"><title>Scheduling processes</title>
<sect2 id="sect_04_04_01"><title>Use that idle time!</title>
<para>A Linux system can have a lot to suffer from, but it usually suffers only during office hours.  Whether in an office environment, a server room or at home, most Linux systems are just idling away during the morning, the evening, the nights and weekends.  Using this idle time can be a lot cheaper than buying those machines you'd absolutely need if you want everything done at the same time.</para>
<para>There are three types of delayed execution:</para>
<itemizedlist>
<listitem><para>Waiting a little while and then resuming job execution, using the <command>sleep</command> command.  Execution time depends on the system time at the moment of submission.</para></listitem>
<listitem><para>Running a command at a specified time, using the <command>at</command> command.  Execution of the job(s) depends on system time, not the time of submission.</para></listitem>
<listitem><para>Regularly running a command on a monthly, weekly, daily or hourly basis, using the <command>cron</command> facilities.</para></listitem>
</itemizedlist>
<para>The following sections discuss each possibility.</para>
</sect2>
<sect2 id="sect_04_04_02"><title>The sleep command</title>
<para>The Info page on sleep is probably one of the shortest there is.  All sleep does is wait.  By default the time to wait is expressed in seconds.</para>
<para>So why does it exist?  Some practical examples:</para>
<para>Somebody calls you on the phone, you say "Yes I'll be with you in half an hour" but you're about drowned in work as it is and bound to forget your lunch:</para>
<cmdsynopsis><command>(sleep <parameter>1800</parameter>; echo <parameter>"Lunch time.."</parameter>) &amp;</command></cmdsynopsis>
<para>When you can't use the <command>at</command> command for some reason, it's five o'clock, you want to go home but there's still work to do and right now somebody is eating system resources:</para>
<cmdsynopsis><command>(sleep <parameter>10000</parameter>; myprogram) &amp;</command></cmdsynopsis>
<para>Make sure there's an auto-logout on your system, and that you log out or lock your desktop/office when submitting this kind of job, or run it in a <command>screen</command> session.</para>
<para>When you run a series of printouts of large files, but you want other users to be able to print in between:</para>
<cmdsynopsis><command>lp <filename>lotoftext</filename>; sleep <parameter>900</parameter>; lp <filename>hugefile</filename>; sleep <parameter>900</parameter>; lp <filename>anotherlargefile</filename></command></cmdsynopsis>
<para>Printing files is discussed in <xref linkend="chap_08"></xref>.</para>
<para>Programmers often use the sleep command to halt script or program execution for a certain time.</para>
</sect2>
<sect2 id="sect_04_04_03"><title>The at command</title>
<para>The <command>at</command> command executes commands at a given time, using your default shell unless you tell the command otherwise (see the man page).</para>
<para>The options to <command>at</command> are rather user-friendly, which is demonstrated in the examples below:</para>
<screen>
<prompt>steven@home:~&gt;</prompt> <command>at tomorrow + 2 days</command>
warning: commands will be executed using (in order) a) $SHELL
        b) login shell c) /bin/sh
<prompt>at&gt;</prompt> <command> cat reports | mail myboss@mycompany</command>
<prompt>at&gt;</prompt> &lt;EOT&gt;
job 1 at 2001-06-16 12:36
</screen>
<para>Typing <keycap>Ctrl</keycap>+<keycap>D</keycap> quits the <command>at</command> utility and generates the <quote>EOT</quote> message.</para>
<para>User <emphasis>steven</emphasis> does a strange thing here combining two commands; we will study this sort of practice in <xref linkend="chap_05"></xref>, Redirecting Input and Output.</para>
<screen>
<prompt>steven@home:~&gt;</prompt> <command>at 0237</command>
warning: commands will be executed using (in order) a) $SHELL
        b) login shell c) /bin/sh
<prompt>at&gt;</prompt> <command> cd new-programs</command>
<prompt>at&gt;</prompt> <command> ./configure; make</command>
<prompt>at&gt;</prompt> &lt;EOT&gt;
job 2 at 2001-06-14 02:00
</screen>
<para>The <option>-m</option> option sends mail to the user when the job is done, or explains when a job can't be done.  The command <command>atq</command> lists jobs; perform this command before submitting jobs in order prevent them from starting at the same time as others.  With the <command>atrm</command> command you can remove scheduled jobs if you change your mind.</para>
<para>It is a good idea to pick strange execution times, because system jobs are often run at <quote>round</quote> hours, as you can see in <xref linkend="sect_04_04_04"></xref> the next section.  For example, jobs are often run at exactly 1 o'clock in the morning (e.g. system indexing to update a standard locate database), so entering a time of 0100 may easily slow your system down rather than fire it up.  To prevent jobs from running all at the same time, you may also use the <command>batch</command> command, which queues processes and feeds the work in the queue to the system in an evenly balanced way, preventing excessive bursts of system resource usage.  See the Info pages for more information.</para>


</sect2>
<sect2 id="sect_04_04_04"><title>Cron and crontab</title>
<para>The cron system is managed by the cron daemon.  It gets information about which programs and when they should run from the system's and users' crontab entries.  Only the root user has access to the system crontabs, while each user should only have access to his own crontabs.  On some systems (some) users may not have access to the cron facility.</para>
<para>At system startup the cron daemon searches <filename>/var/spool/cron/</filename> for crontab entries which are named after accounts in <filename>/etc/passwd</filename>, it searches <filename>/etc/cron.d/</filename> and it searches <filename>/etc/crontab</filename>, then uses this information every minute to check if there is something to be done.  It executes commands as the user who owns the crontab file and mails any output of commands to the owner.</para>
<para>On systems using Vixie cron, jobs that occur hourly, daily, weekly and monthly are kept in separate directories in <filename>/etc</filename> to keep an overview, as opposed to the standard UNIX cron function, where all tasks are entered into one big file.</para>
<para>Example of a Vixie crontab file:</para>
<screen>
<prompt>[root@blob /etc]#</prompt> <command>more crontab</command>
SHELL=/bin/bash
PATH=/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=root
HOME=/

# run-parts
# commands to execute every hour
01 * * * * root run-parts /etc/cron.hourly
# commands to execute every day
02 4 * * * root run-parts /etc/cron.daily
# commands to execute every week
22 4 * * 0 root run-parts /etc/cron.weekly
commands to execute every month
42 4 1 * * root run-parts /etc/cron.monthly
</screen>
<para>Some variables are set, and after that there's the actual scheduling, one line per job, starting with 5 time and date fields.  The first field contains the minutes (from 0 to 59), the second defines the hour of execution (0-23), the third is day of the month (1-31), then the number of the month (1-12), the last is day of the week (0-7, both 0 and 7 are Sunday).  An asterisk in these fields represents the total acceptable range for the field.  Lists are allowed; to execute a job from Monday to Friday enter 1-5 in the last field, to execute a job on Monday, Wednesday and Friday enter 1,3,5.</para>
<para>Then comes the user who should run the processes which are listed in the last column.  The example above is from a Vixie cron configuration where root runs the program <command>run-parts</command> on regular intervals, with the appropriate directories as options.  In these directories, the actual jobs to be executed at the scheduled time are stored as shell scripts, like this little script that is run daily to update the database used by the <command>locate</command> command:</para>
<screen>
<prompt>billy@ahost cron.daily]$</prompt> <command>cat slocate.cron</command>
#!/bin/sh
renice +19 -p $$ &gt;/dev/null 2&gt;&amp;1
/usr/bin/updatedb -f "nfs,smbfs,ncpfs,proc,devpts" -e \
"/tmp,/var/tmp, /usr/tmp,/afs,/net"
</screen>
<para>Users are supposed to edit their crontabs in a safe way using the <command>crontab <option>-e</option></command> command.  This will prevent a user from accidentally opening more than one copy of his/her crontab file.  The default editor is <command>vi</command> (see <xref linkend="chap_06"></xref>, but you can use any text editor, such as <command>gvim</command> or <command>gedit</command> if you feel more comfortable with a GUI editor.</para> 
<para>When you quit, the system will tell you that a new crontab is installed.</para>
<para>This crontab entry reminds <emphasis>billy</emphasis> to go to his sports club every Thursday night:</para>
<screen>
<prompt>billy:~&gt;</prompt> <command>crontab -l</command>
# DO NOT EDIT THIS FILE - edit the master and reinstall.
# (/tmp/crontab.20264 installed on Sun Jul 20 22:35:14 2003)
# (Cron version -- $Id: chap4.xml,v 1.23 2006/01/07 13:47:14 tille Exp $)
38 16 * * 3 mail -s "sports evening" billy
</screen>
<para>After adding a new scheduled task, the system will tell you that a new crontab is installed.  You do not need to restart the <command>crond</command> daemon for the changes to take effect.  In the example, <emphasis>billy</emphasis> added a new line pointing to a backup script:</para>
<screen>
<prompt>billy:~&gt;</prompt> <command>crontab -e</command>
45 15 * * 3 mail -s "sports evening" billy
4 4 * * 4,7 /home/billy/bin/backup.sh

&lt;--write and quit--&gt;

crontab: installing new crontab

<prompt>billy:~&gt;</prompt>
</screen>
<para>The <filename>backup.sh</filename> script is executed every Thursday and Sunday.  See <xref linkend="sect_07_02_07"></xref> for an introduction to shell scripting. Keep in mind that output of commands, if any, is mailed to the owner of the crontab file.  If no mail service is configured, you might find the output of your commands in your local mailbox, <filename>/var/spool/mail/&lt;your_username&gt;</filename>, a plain text file.</para>
<note><title>Who runs my commands?</title>
<para>You don't have to specify the user who should run the commands.  They are executed with the user's own permissions by default.</para>
</note>
</sect2>

</sect1>
<sect1 id="sect_04_05"><title>Summary</title>
<para>Linux is a multi-user, multi-tasking operating system that has a UNIX-like way of handling processes.  Execution speed of commands can depend on a thousand tiny things.  Among others, we learned a lot of new commands to visualize and handle processes.  Here's a list:</para>
<table frame="all"><title>Process handling commands</title>
<tgroup align="left" cols="2" colsep="1" rowsep="1">
<thead>
<row>
<entry>Command</entry><entry>Meaning</entry>
</row>
</thead>
<tbody>
<row>
<entry><command>at</command></entry><entry>Queue jobs for later execution.</entry>
</row>
<row>
<entry><command>atq</command></entry><entry>Lists the user's pending jobs.</entry>
</row>
<row>
<entry><command>atrm</command></entry><entry>Deletes jobs, determined by their job number.</entry>
</row>
<row>
<entry><command>batch</command></entry><entry>Executes commands when system load level permits.</entry>
</row>
<row>
<entry><command>crontab</command></entry><entry>Maintain crontab files for individual users.</entry>
</row>
<row>
<entry><command>halt</command></entry><entry>Stop the system.</entry>
</row>
<row>
<entry><command>init <parameter>runlevel</parameter></command></entry><entry>Process control initialization.</entry>
</row>
<row>
<entry><command>jobs</command></entry><entry>Lists currently executing jobs.</entry>
</row>
<row>
<entry><command>kill</command></entry><entry>Terminate a process.</entry>
</row>
<row>
<entry><command>mesg</command></entry><entry>Control write access to your terminal.</entry>
</row>
<row>
<entry><command>netstat</command></entry><entry>Display network connections, routing tables, interface statistics, masquerade connections and multicast memberships.</entry>
</row>
<row>
<entry><command>nice</command></entry><entry>Run a program with modified scheduling priority.</entry>
</row>
<row>
<entry><command>ps</command></entry><entry>Report process status.</entry>
</row>
<row>
<entry><command>pstree</command></entry><entry>Display a tree of processes.</entry>
</row>
<row>
<entry><command>reboot</command></entry><entry>Stop the system.</entry>
</row>
<row>
<entry><command>renice</command></entry><entry>Alter priority of running processes.</entry>
</row>
<row>
<entry><command>shutdown</command></entry><entry>Bring the system down.</entry>
</row>
<row>
<entry><command>sleep</command></entry><entry>Delay for a specified time.</entry>
</row>
<row>
<entry><command>time</command></entry><entry>Time a command or report resource usage.</entry>
</row>
<row>
<entry><command>top</command></entry><entry>Display top CPU processes.</entry>
</row>
<row>
<entry><command>uptime</command></entry><entry>Show how long the system has been running.</entry>
</row>
<row>
<entry><command>vmstat</command></entry><entry>Report virtual memory statistics.</entry>
</row>
<row>
<entry><command>w</command></entry><entry>Show who is logged on and what they are doing.</entry>
</row>
<row>
<entry><command>wall</command></entry><entry>Send a message to everybody's terminals.</entry>
</row>
<row>
<entry><command>who</command></entry><entry>Show who is logged on.</entry>
</row>
<row>
<entry><command>write</command></entry><entry>Send a message to another user.</entry>
</row>
</tbody>
</tgroup>
</table>


</sect1>
<sect1 id="sect_04_06"><title>Exercises</title>
<para>These are some exercises that will help you get the feel for processes running on your system.</para>
<sect2><title>General</title>
<itemizedlist>
<listitem><para>Run <command>top</command> in one terminal while you do the exercises in another.</para></listitem>
<listitem><para>Run the <command>ps</command> command.</para></listitem>
<listitem><para>Read the man pages to find out how to display all your processes.</para></listitem>
<listitem><para>Run the command <command>find <filename>/</filename></command>.  What effect does it have on system load?  Stop this command.</para></listitem>
<listitem><para>In graphical mode, start the <command>xclock</command> program in the foreground.  Then let it run in the background.  Stop the program using the <command>kill</command> command.</para></listitem>
<listitem><para>Run the <command>xcalc</command> directly in the background, so that the prompt of the issuing terminal is released.</para></listitem>
<listitem><para>What does <command>kill <option>-9 -1</option></command> do?</para></listitem>
<listitem><para>Open two terminals or terminal windows again and use <command>write</command> to send a message from one to the other.</para></listitem>
<listitem><para>Issue the <command>dmesg</command> command.  What does it tell?</para></listitem>
<listitem><para>How long does it take to execute <command>ls</command> in the current directory?</para></listitem>
<listitem><para>Based on process entries in <filename>/proc</filename>, owned by your UID, how would you work to find out which processes these actually represent?</para></listitem>
<listitem><para>How long has your system been running?</para></listitem>
<listitem><para>Which is your current TTY?</para></listitem>
<listitem><para>Name 3 processes that couldn't have had <command>init</command> as an initial parent.</para></listitem>
<listitem><para>Name 3 commands which use SUID mode.  Explain why this is so.</para></listitem>
<listitem><para>Name the commands that are generally causing the highest load on your system.</para></listitem>
</itemizedlist>
</sect2>
<sect2><title>Booting, init etc.</title>
<itemizedlist>
<listitem><para>Can you reboot the system as a normal user?  Why is that?</para></listitem>
<listitem><para>According to your current runlevel, name the steps that are taken during shutdown.</para></listitem>
<listitem><para>How do you change the system runlevel?  Switch from 3 to 5 and vice versa.</para></listitem>
<listitem><para>Make a list of all the services and daemons that are started up when your system has booted.</para></listitem>
<listitem><para>Which kernel is currently load at startup?</para></listitem>
<listitem><para>Suppose you have to start some exotic server at boot time.  Up until now, you logged in after booting the system and started this server manually using a script named <filename>deliver_pizza</filename> in your home directory.  What do you have to do in order to have the service start up automatically in run level 4, which you defined for this purpose only?</para></listitem>
</itemizedlist>
</sect2>
<sect2><title>Scheduling</title>
<itemizedlist>
<listitem><para>Use <command>sleep</command> to create a reminder that your pasta is ready in ten minutes.</para></listitem>
<listitem><para>Create an <command>at</command> job that copies all files in your home directory to <filename>/var/tmp</filename> within half an hour.  You may want to create a sub-directory in <filename>/var/tmp</filename>.</para></listitem>
<listitem><para>Make a cronjob that does this task every Monday to Friday during lunch.</para></listitem>
<listitem><para>Check that it works.</para></listitem>
<listitem><para>Make a mistake in the crontab entry, like issuing the nonexistent command <command>coppy</command> instead of <command>cp</command>.  What happens upon execution of the task?</para></listitem>
</itemizedlist>
</sect2>

</sect1>
</chapter>
 
<chapter id="chap_05">
<title>I/O redirection</title>
<abstract>
<para>This chapter describes more about the powerful UNIX mechanism of redirecting input, output and errors.  Topics include:</para>
<para>
<itemizedlist>
<listitem><para>Standard input, output and errors</para></listitem>
<listitem><para>Redirection operators</para></listitem>
<listitem><para>How to use output of one command as input for another</para></listitem>
<listitem><para>How to put output of a command in a file for later referrence</para></listitem>
<listitem><para>How to append output of multiple commands to a file</para></listitem>
<listitem><para>Input redirection</para></listitem>
<listitem><para>Handling standard error messages</para></listitem>
<listitem><para>Combining redirection of input, output and error streams</para></listitem>
<listitem><para>Output filters</para></listitem>

</itemizedlist>
</para>
</abstract>
<sect1 id="sect_05_01"><title>Simple redirections</title>
<sect2 id="sect_05_01_01"><title>What are standard input and standard output?</title>
<para>
Most Linux commands read input, such as a file or another attribute for the command, and write output.  By default, input is being given with the keyboard, and output is displayed on your screen.  Your keyboard is your <quote>standard input</quote> (stdin) device, and the screen or a particular terminal window is the <quote>standard output</quote> (stdout) device.
</para>
<para>However, since Linux is a flexible system, these default settings don't necessarily have to be applied.  The standard output, for example, on a heavily monitored server in a large environment may be a printer.</para>
</sect2>
<sect2 id="sect_05_01_02"><title>The redirection operators</title>
<sect3 id="sect_05_01_02_01"><title>Output redirection with &gt; and |</title>
<para>Sometimes you will want to put output of a command in a file, or you may want to issue another command on the output of one command.  This is known as redirecting output.  Redirection is done using either the <quote>&gt;</quote> (greater-than symbol), or using the <quote>|</quote> (pipe) operator which sends the standard output of one command to another command as standard input.</para>
<para>As we saw before, the <command>cat</command> command concatenates files and puts them all together to the standard output.  By redirecting this output to a file, this file name will be created - or overwritten if it already exists, so take care.</para>
<screen>
<prompt>nancy:~&gt;</prompt> <command>cat test1</command>
some words

<prompt>nancy:~&gt;</prompt> <command>cat test2</command>
some other words

<prompt>nancy:~&gt;</prompt> <command>cat test1 test2 &gt; test3</command>

<prompt>nancy:~&gt;</prompt> <command>cat test3</command>
some words
some other words
</screen>

<warning><title>Don't overwrite!</title>
<para>Be careful not to overwrite existing (important) files when redirecting output.  Many shells, including Bash, have a built-in feature to protect you from that risk: <command>noclobber</command>.  See the Info pages for more information.  In Bash, you would want to add the <command>set <option>-o</option> <parameter>noclobber</parameter></command> command to your <filename>.bashrc</filename> configuration file in order to prevent accidental overwriting of files.</para></warning>


<para>Redirecting <quote>nothing</quote> to an existing file is equal to emptying the file:</para>
<screen>
<prompt>nancy:~&gt;</prompt> <command>ls -l list</command>
-rw-rw-r--    1 nancy   nancy     117 Apr  2 18:09 list

<prompt>nancy:~&gt;</prompt> <command>&gt; list</command>

<prompt>nancy:~&gt;</prompt> <command>ls -l list</command>
-rw-rw-r--    1 nancy   nancy       0 Apr  4 12:01 list
</screen>
<para>This process is called <emphasis>truncating</emphasis>.</para>
<para>The same redirection to an nonexistent file will create a new empty file with the given name:</para>
<screen>
<prompt>nancy:~&gt;</prompt> <command>ls -l newlist</command>
ls: newlist: No such file or directory

<prompt>nancy:~&gt;</prompt> <command>&gt; newlist</command>

<prompt>nancy:~&gt;</prompt> <command>ls -l newlist</command>
-rw-rw-r--  1 nancy   nancy	    0 Apr  4 12:05 newlist
</screen>
<para><xref linkend="chap_07"></xref> gives some more examples on the use of this sort of redirection.</para>
<para>Some examples using piping of commands:</para>
<para>To find a word within some text, display all lines matching <quote>pattern1</quote>, and exclude lines also matching <quote>pattern2</quote> from being displayed:</para>
<cmdsynopsis><command>grep <parameter>pattern1</parameter> <filename>file</filename> | grep <option>-v</option> <parameter>pattern2</parameter></command></cmdsynopsis>
<para>To display output of a directory listing one page at a time:</para>
<cmdsynopsis><command>ls <option>-la</option> | less</command></cmdsynopsis>
<para>To find a file in a directory:</para>
<cmdsynopsis><command>ls <option>-l</option> | grep <parameter>part_of_file_name</parameter></command></cmdsynopsis>
</sect3>
<sect3 id="sect_05_01_02_02"><title>Input redirection</title>
<para>In another case, you may want a file to be the input for a command that normally wouldn't accept a file as an option.  This redirecting of input is done using the <quote>&lt;</quote> (less-than symbol) operator.</para>
<para>Below is an example of sending a file to somebody, using input redirection.</para>
<screen>
<prompt>andy:~&gt;</prompt> <command>mail mike@somewhere.org &lt; to_do</command>
</screen>
<para>If the user <emphasis>mike</emphasis> exists on the system, you don't need to type the full address.  If you want to reach somebody on the Internet, enter the fully qualified address as an argument to <command>mail</command>.</para>
<para>This reads a bit more difficult than the beginner's <command>cat <filename>file</filename> | mail <parameter>someone</parameter></command>, but it is of course a much more elegant way of using the available tools.</para>
</sect3>
<sect3 id="sect_05_01_02_03"><title>Combining redirections</title>
<para>The following example combines input and output redirection.  The file <filename>text.txt</filename> is first checked for spelling mistakes, and the output is redirected to an error log file:</para>
<para><command>spell &lt; <filename>text.txt</filename> &gt; <filename>error.log</filename></command></para>
<para>The following command lists all commands that you can issue to examine another file when using <command>less</command>:</para>
<screen>
<prompt>mike:~&gt;</prompt> <command>less --help | grep -i examine</command>
  :e [file]      Examine a new file.
  :n          *  Examine the (N-th) next file from the command line.
  :p          *  Examine the (N-th) previous file from the command line.
  :x          *  Examine the first (or N-th) file from the command line.
</screen>
<para>The <option>-i</option> option is used for case-insensitive searches - remember that UNIX systems are very case-sensitive.</para>
<para>If you want to save output of this command for future reference, redirect the output to a file:</para>
<screen>
<prompt>mike:~&gt;</prompt> <command>less --help | grep -i examine &gt; examine-files-in-less</command>

<prompt>mike:~&gt;</prompt> <command>cat examine-files-in-less</command>
  :e [file]      Examine a new file.
  :n          *  Examine the (N-th) next file from the command line.
  :p          *  Examine the (N-th) previous file from the command line.
  :x          *  Examine the first (or N-th) file from the command line.
</screen>
<para>Output of one command can be piped into another command virtually as many times as you want, just as long as these commands would normally read input from standard input and write output to the standard output.  Sometimes they don't, but then there may be special options that instruct these commands to behave according to the standard definitions; so read the documentation (man and info pages) of the commands you use if you should encounter errors.</para>
<para>Again, make sure you don't use names of existing files that you still need.  Redirecting output to existing files will replace the content of those files.</para>

</sect3>


<sect3 id="sect_05_01_02_04"><title>The &gt;&gt; operator</title>
<para>Instead of overwriting file data, you can also append text to an existing file using two subsequent greater-than signs:</para>
<para>Example:</para>
<screen>
<prompt>mike:~&gt;</prompt> <command>cat <filename>wishlist</filename></command>
more money
less work

<prompt>mike:~&gt;</prompt> <command>date &gt;&gt; <filename>wishlist</filename></command>

<prompt>mike:~&gt;</prompt> <command>cat <filename>wishlist</filename></command>
more money
less work
Thu Feb 28 20:23:07 CET 2002
</screen>
<para>The <command>date</command> command would normally put the last line on the screen; now it is appended to the file <filename>wishlist</filename>.
</para>
</sect3>
</sect2>
</sect1>

<sect1 id="sect_05_02"><title>Advanced redirection features</title>
<sect2 id="sect_05_02_01"><title>Use of file descriptors</title> 
<para>There are three types of I/O, which each have their own identifier, called a file descriptor:</para>
<itemizedlist>
<listitem><para>standard input: 0</para></listitem>
<listitem><para>standard output: 1</para></listitem>
<listitem><para>standard error: 2</para></listitem>
</itemizedlist>

<para>In the following descriptions, if the file descriptor number is omitted, and the first character of the redirection operator is &lt;, the redirection refers to the standard input (file descriptor 0).  If the first character of the redirection operator is &gt;, the redirection refers to the standard output (file descriptor 1).</para>

<para>Some practical examples will make this more clear:</para>
<cmdsynopsis><command>ls &gt; <filename>dirlist</filename> 2&gt;&amp;1</command></cmdsynopsis>
<para>will direct both standard output and standard error to the file <filename>dirlist</filename>, while the command</para>
<cmdsynopsis><command>ls 2&gt;&amp;1 &gt; <filename>dirlist</filename></command></cmdsynopsis> 
<para>will only direct standard output to <filename>dirlist</filename>.  This can be a useful option for programmers.</para>

<para>Things are getting quite complicated here, don't confuse the use of the ampersand here with the use of it in <xref linkend="sect_04_01_02_01"></xref>, where the ampersand is used to run a process in the background.  Here, it merely serves as an indication that the number that follows is not a file name, but rather a location that the data stream is pointed to.  Also note that the bigger-than sign should not be separated by spaces from the number of the file descriptor.  If it would be separated, we would be pointing the output to a file again.  The example below demonstrates this:</para>
<screen>
<prompt>[nancy@asus /var/tmp]$ </prompt><command>ls 2&gt; <filename>tmp</filename></command>

<prompt>[nancy@asus /var/tmp]$ </prompt><command>ls -l <filename>tmp</filename></command>
-rw-rw-r--  1 nancy nancy 0 Sept  7 12:58 tmp

<prompt>[nancy@asus /var/tmp]$ </prompt><command>ls 2 &gt; <filename>tmp</filename></command>
ls: 2: No such file or directory
</screen>
<para>The first command that <emphasis>nancy</emphasis> executes is correct (eventhough no errors are generated and thus the file to which standard error is redirected is empty).  The second command expects that <filename>2</filename> is a file name, which does not exist in this case, so an error is displayed.</para>
<para>All these features are explained in detail in the Bash Info pages.</para>
</sect2>
<sect2 id="sect_05_02_02"><title>Examples</title>
<sect3 id="sect_05_02_02_01"><title>Analyzing errors</title>
<para>If your process generates a lot of errors, this is a way to thoroughly examine them:</para>
<cmdsynopsis><command>command 2&gt;&amp;1 | less</command></cmdsynopsis>
<para>This is often used when creating new software using the <command>make</command> command, such as in:</para>
<screen>
<prompt>andy:~/newsoft&gt;</prompt> <command>make all 2&gt;&amp;1 | less</command>
--output ommitted--
</screen>
</sect3>
<sect3 id="sect_05_02_02_02"><title>Separating standard output from standard error</title>
<para>Constructs like these are often used by programmers, so that output is displayed in one terminal window, and errors in another.  Find out which pseudo terminal you are using issuing the <command>tty</command> command first:</para>
<screen>
<prompt>andy:~/newsoft&gt;</prompt> <command>make all 2&gt; /dev/pts/7</command>
</screen>
</sect3>

<sect3 id="sect_05_02_02_03"><title>Writing to output and files simultaneously</title>
<para>You can use the <command>tee</command> command to copy input to standard output and one or more output files in one move.  Using the <option>-a</option> option to <command>tee</command> results in appending input to the file(s).  This command is useful if you want to both see and save output.  The <command>&gt;</command> and <command>&gt;&gt;</command> operators do not allow to perform both actions simultaneously.</para>
<para>This tool is usually called on through a pipe (<command>|</command>), as demonstrated in the example below:</para>
<screen>
<prompt>mireille ~/test&gt;</prompt> <command>date | tee <filename>file1 file2</filename></command>
Thu Jun 10 11:10:34 CEST 2004

<prompt>mireille ~/test&gt;</prompt> <command>cat <filename>file1</filename></command>
Thu Jun 10 11:10:34 CEST 2004

<prompt>mireille ~/test&gt;</prompt> <command>cat <filename>file2</filename></command>
Thu Jun 10 11:10:34 CEST 2004

<prompt>mireille ~/test&gt;</prompt> <command>uptime | tee <option>-a</option> <filename>file2</filename></command>
 11:10:51 up 21 days, 21:21, 57 users,  load average: 0.04, 0.16, 0.26

<prompt>mireille ~/test&gt;</prompt> <command>cat <filename>file2</filename></command>
Thu Jun 10 11:10:34 CEST 2004
 11:10:51 up 21 days, 21:21, 57 users,  load average: 0.04, 0.16, 0.26
</screen>


</sect3>

</sect2>
</sect1>
<sect1 id="sect_05_03">
<title>Filters</title>
<para>When a program performs operations on input and writes the result to the standard output, it is called a filter.  One of the most common uses of filters is to restructure output.  We'll discuss a couple of the most important filters below.</para>
<sect2 id="sect_05_03_01"><title>More about grep</title>
<para>As we saw in <xref linkend="sect_03_03_03_04"></xref>, <command>grep</command> scans the output line per line, searching for matching patterns.  All lines containing the pattern will be printed to standard output.  This behavior can be reversed using the <option>-v</option> option.
</para>
<para>Some examples: suppose we want to know which files in a certain directory have been modified in February:</para>
<screen>
<prompt>jenny:~&gt;</prompt> <command>ls -la | grep Feb</command>
</screen>
<para>The <command>grep</command> command, like most commands, is case sensitive. Use the <option>-i</option> option to make no difference between upper and lower case.  A lot of GNU extensions are available as well, such as <option>--colour</option>, which is helpful to highlight searchterms in long lines, and <option>--after-context</option>, which prints the number of lines after the last matching line.  You can issue a recursive <command>grep</command> that searches all subdirectories of encountered directories using the <option>-r</option> option.  As usual, options can be combined.</para>
<para>Regular expressions can be used to further detail the exact character matches you want to select out of all the input lines.  The best way to start with regular expressions is indeed to read the <command>grep</command> documentation.  An excellent chapter is included in the <command>info <parameter>grep</parameter></command> page.  Since it would lead us too far discussing the ins and outs of regular expressions, it is strongly advised to start here if you want to know more about them.</para>
<para>Play around a bit with <command>grep</command>, it will be worth the trouble putting some time in this most basic but very powerful filtering command.  The exercises at the end of this chapter will help you to get started, see <xref linkend="sect_05_05"></xref>.</para>
</sect2>
<sect2 id="sect_05_03_02"><title>Filtering output</title>
<para>The command <command>sort</command> arranges lines in alphabetical order by default:</para>
<screen>
<prompt>thomas:~&gt;</prompt> <command>cat people-I-like | sort</command>
Auntie Emmy
Boyfriend
Dad
Grandma
Mum
My boss
</screen>
<para>But there are many more things <command>sort</command> can do.  Looking at the file size, for instance.  With this command, directory content is sorted smallest files first, biggest files last:</para>
<cmdsynopsis><command>ls <option>-la</option> | sort <option>-nk</option> <parameter>5</parameter></command></cmdsynopsis>
<note><title>Old sort syntax</title>
<para>You might obtain the same result with <command>ls <option>-la</option> | sort <option>+4n</option></command>, but this is an old form which does not comply with the current standards.</para></note>
<para>The <command>sort</command> command is also used in combination with the <command>uniq</command> program (or <command>sort <option>-u</option></command>) to sort output and filter out double entries:</para>
<screen>
<prompt>thomas:~&gt; </prompt><command>cat <filename>itemlist</filename></command>
1
4
2
5
34
567
432
567
34
555

<prompt>thomas:~&gt; </prompt><command>sort <filename>itemlist</filename> | uniq</command>
1
2
34
4
432
5
555
567
</screen>
</sect2>
</sect1>
<sect1 id="sect_05_04"><title>Summary</title>
<para>In this chapter we learned how commands can be linked to each other, and how input from one command can be used as output for another command.</para>
<para>Input/output redirection is a common task on UNIX and Linux machines.  This powerful mechanism allows flexible use of the building blocks UNIX is made of.</para>
<para>The most commonly used redirections are <command>&gt;</command> and <command>|</command>.</para>
</sect1>
<sect1 id="sect_05_05"><title>Exercises</title>
<para>These exercises give more examples on how to combine commands.  The main goal is to try and use the <keycap>Enter</keycap> key as little as possible.</para>
<para>All exercises are done using a normal user ID, so as to generate some errors.  While you're at it, don't forget to read those man pages!</para>
<itemizedlist>
<listitem><para>Use the <command>cut</command> command on the output of a long directory listing in order to display only the file permissions.  Then pipe this output to <command>sort</command> and <command>uniq</command> to filter out any double lines.  Then use the <command>wc</command> to count the different permission types in this directory.</para></listitem>
<listitem><para>Put the output of <command>date</command> in a file.  Append the output of <command>ls</command> to this file.  Send this file to your local mailbox (don't specify anything <email>@domain</email>, just the user name will do).  When using Bash, you will see a new mail notice upon success.</para></listitem>
<listitem><para>List the devices in <filename>/dev</filename> which are currently used by your UID.  Pipe through <command>less</command> to view them properly.</para></listitem>
<listitem><para>Issue the following commands as a non-privileged user.  Determine standard input, output and error for each command.</para>
<itemizedlist>
<listitem><para><cmdsynopsis><command>cat <filename>nonexistentfile</filename></command></cmdsynopsis></para></listitem>
<listitem><para><cmdsynopsis><command>file <filename>/sbin/ifconfig</filename></command></cmdsynopsis></para></listitem>
<listitem><para><cmdsynopsis><command>grep <parameter>root</parameter> <filename>/etc/passwd /etc/nofiles</filename> &gt; <filename>grepresults</filename></command></cmdsynopsis></para></listitem>
<listitem><para><cmdsynopsis><command>/etc/init.d/sshd <parameter>start</parameter> &gt; <filename>/var/tmp/output</filename></command></cmdsynopsis></para></listitem>
<listitem><para><cmdsynopsis><command>/etc/init.d/crond <parameter>start</parameter> &gt; <filename>/var/tmp/output</filename> 2&gt;&amp;1</command></cmdsynopsis></para></listitem>
<para>Now check your results by issuing the commands again, now redirecting standardoutput to the file <filename>/var/tmp/output</filename> and standard error to the file <filename>/var/tmp/error</filename>.</para>
</itemizedlist>

</listitem>
<listitem><para>How many processes are you currently running?</para></listitem>
<listitem><para>How many invisible files are in your home directory?</para></listitem>
<listitem><para>Use <command>locate</command> to find documentation about the kernel.</para></listitem>
<listitem><para>Find out which file contains the following entry:</para>
<screen>
root:x:0:0:root:/root:/bin/bash
</screen>
<para>And this one:</para>
<screen>
system:		root
</screen></listitem>
<listitem><para>See what happens upon issuing this command:</para>
<cmdsynopsis><command>&gt; time; date &gt;&gt; time; cat &lt; time</command></cmdsynopsis>
</listitem>
<listitem><para>What command would you use to check which script in <filename>/etc/init.d</filename> starts a given process?</para></listitem>
</itemizedlist>

</sect1>


</chapter>
 
<chapter id="chap_06">
<title>Text editors</title>
<abstract>
<para>In this chapter, we will discuss the importance of mastering an editor.  We will focus mainly on the Improved <command>vi</command> editor.</para>
<para>After finishing this chapter, you will be able to:</para>
<para>
<itemizedlist>
<listitem><para>Open and close files in text mode</para></listitem>
<listitem><para>Edit files</para></listitem>
<listitem><para>Search text</para></listitem>
<listitem><para>Undo errors</para></listitem>
<listitem><para>Merge files</para></listitem>
<listitem><para>Recover lost files</para></listitem>
<listitem><para>Find a program or suite for office use</para></listitem>
</itemizedlist>
</para>
</abstract>
<sect1 id="sect_06_01"><title>Text editors</title>
<sect2 id="sect_06_01_01"><title>Why should I use an editor?</title>
<para>It is very important to be able to use at least one text mode editor.  Knowing how to use an editor on your system is the first step to independence.</para>
<para>We will need to master an editor by the next chapter as we need it to edit files that influence our environment.  As an advanced user, you may want to start writing scripts, or books, develop websites or new programs.  Mastering an editor will immensely improve your productivity as well as your capabilities.</para>
</sect2>
<sect2 id="sect_06_01_02"><title>Which editor should I use?</title>
<para>Our focus is on text editors, which can also be used on systems without a graphical environment and in terminal windows.  The additional advantage of mastering a text editor is in using it on remote machines.  Since you don't need to transfer the entire graphical environment over the network, working with text editors tremendously improves network speed.</para>
<para>There are, as usual, multiple ways to handle the problem.  Let's see what editors are commonly available:</para>
<sect3 id="sect_06_01_02_01"><title>Ed</title>
<para>The <command>ed</command> editor is line-oriented and used to create, display, modify and otherwise manipulate text files, both interactively and by use in shell scripts.</para>
<para><command>ed</command> is the original text editor on UNIX machines, and thus widely available.  For most purposes, however, it is superceded by full-screen editors such as <command>emacs</command> and <command>vi</command>, see below.</para>
</sect3>
<sect3 id="sect_06_01_02_02"><title>GNU Emacs</title>
<para>Emacs is the extensible, customizable, self-documenting, real-time display editor, known on many UNIX and other systems.  The text being edited is visible on the screen and is updated automatically as you type your commands.  It is a real-time editor because the display is updated very frequently, usually after each character or pair of characters you type.  This minimizes the amount of information you must keep in your head as you edit.  Emacs is called advanced because it provides facilities that go beyond simple insertion and deletion:  controlling subprocesses; automatic indentation of programs; viewing two or more files at once; editing formatted text; and dealing in terms of characters, words, lines, sentences, paragraphs, and pages, as well as expressions and comments in several different programming languages.</para>
<para><emphasis>Self-documenting</emphasis> means that at any time you can type a special character, <keycap>Ctrl</keycap>+<keycap>H</keycap>, to find out what your options are.  You can also use it to find out what any command does, or to find all the commands that pertain to a topic.  <emphasis>Customizable</emphasis> means that you can change the definitions of Emacs commands in little ways.  For example, if you use a programming language in which comments start with `&lt;**' and end with `**&gt;', you can tell the Emacs comment manipulation commands to use those strings.  Another sort of customization is rearrangement of the command set.  For example, if you prefer the four basic cursor motion commands (up, down, left and right) on keys in a diamond pattern on the keyboard, you can rebind the keys that way.</para>
<para><emphasis>Extensible</emphasis> means that you can go beyond simple customization and write entirely new commands, programs in the Lisp language that are run by Emacs's own Lisp interpreter.  Emacs is an <emphasis>online</emphasis> extensible system, which means that it is divided into many functions that call each other, any of which can be redefined in the middle of an editing session.  Almost any part of Emacs can be replaced without making a separate copy of all of Emacs.  Most of the editing commands of Emacs are written in Lisp already; the few exceptions could have been written in Lisp but are written in C for efficiency.  Although only a programmer can write an extension, anybody can use it afterward.</para>
<para>When run under the X Window System (started as <command>xemacs</command>) Emacs provides its own menus and convenient bindings to mouse buttons.  But Emacs can provide many of the benefits of a window system on a text-only terminal.  For instance, you can look at or edit several files at once, move text between files, and edit files while running shell commands.</para> 

</sect3>
<sect3 id="sect_06_01_02_03"><title>Vi(m)</title>
<para>Vim stands for Vi IMproved.  It used to be Vi IMitation, but there are so many improvements that a name change was appropriate.  Vim is a text editor which includes almost all the commands from the UNIX program <command>vi</command> and a lot of new ones.</para>
<para>Commands in the <command>vi</command> editor are entered using only the keyboard, which has the advantage that you can keep your fingers on the keyboard and your eyes on the screen, rather than moving your arm repeatedly to the mouse.  For those who want it, mouse support and a GUI version with scrollbars and menus can be activated.</para>
<para>We will refer to <command>vi</command> or <command>vim</command> throughout this book for editing files, while you are of course free to use the editor of your choice.  However, we recommend to at least get the <command>vi</command> basics in the fingers, because it is the standard text editor on almost all UNIX systems, while <command>emacs</command> can be an optional package.  There may be small differences between different computers and terminals, but the main point is that if you can work with <command>vi</command>, you can survive on any UNIX system.</para>
<para>Apart from the <command>vim</command> command, the <application>vIm</application> packages may also provide <command>gvim</command>, the Gnome version of <command>vim</command>.  Beginning users might find this easier to use, because the menus offer help when you forgot or don't know how to perform a particular editing task using the standard <command>vim</command> commands.</para>
</sect3>

</sect2>


</sect1>
<sect1 id="sect_06_02"><title>Using the Vim editor</title>
<sect2 id="sect_06_02_01"><title>Two modes</title>
<para>The <command>vi</command> editor is a very powerful tool and has a very extensive built-in manual, which you can activate using the <command>:help</command> command when the program is started (instead of using <command>man</command> or <command>info</command>, which don't contain nearly as much information).  We will only discuss the very basics here to get you started.</para>
<para>What makes <command>vi</command> confusing to the beginner is that it can operate in two modes:  command mode and insert mode.  The editor always starts in command mode.  Commands move you through the text, search, replace, mark blocks and perform other editing tasks, and some of them switch the editor to insert mode.</para>
<para>This means that each key has not one, but likely two meanings:  it can either represent a command for the editor when in command mode, or a character that you want in a text when in insert mode.</para>
<note><title>Pronunciation</title>
<para>It's pronounced <quote>vee-eye</quote>.</para></note>
</sect2>
<sect2 id="sect_06_02_02"><title>Basic commands</title>
<sect3 id="sect_06_02_02_01"><title>Moving through the text</title>
<para>Moving through the text is usually possible with the arrow keys.  If not, try:</para>
<itemizedlist>
<listitem><para><command>h</command> to move the cursor to the left</para></listitem>
<listitem><para><command>l</command> to move it to the right</para></listitem>
<listitem><para><command>k</command> to move up</para></listitem>
<listitem><para><command>j</command> to move down</para></listitem>
</itemizedlist>
<para>SHIFT-G will put the prompt at the end of the document.</para>
</sect3>
<sect3 id="sect_06_02_02_02"><title>Basic operations</title>
<itemizedlist>
<listitem><para><command>n dd</command> will delete n lines starting from the current cursor position.</para></listitem>
<listitem><para><command>n dw</command> will delete n words at the right side of the cursor.</para></listitem>
<listitem><para><command>x</command> will delete the character on which the cursor is positioned</para></listitem>
<listitem><para><command>:n</command> moves to line n of the file.</para></listitem>
<listitem><para><command>:w</command> will save (write) the file</para></listitem>
<listitem><para><command>:q</command> will exit the editor.</para></listitem>
<listitem><para><command>:q!</command>  forces the exit when you want to quit a file containing unsaved changes.</para></listitem>
<listitem><para><command>:wq</command> will save and exit</para></listitem>
<listitem><para><command>:w newfile</command> will save the text to <filename>newfile</filename>.</para></listitem>
<listitem><para><command>:wq!</command> overrides read-only permission (if you have the permission to override permissions, for instance when you are using the <emphasis>root</emphasis> account.</para></listitem>

<listitem><para><command>/astring</command> will search the string in the file and position the cursor on the first match below its position.</para></listitem>
<listitem><para><command>/</command> will perform the same search again, moving the cursor to the next match.</para></listitem>
<listitem><para><command>:1, $s/word/anotherword/g</command> will replace <filename>word</filename> with <filename>anotherword</filename> throughout the file.</para></listitem>
<listitem><para><command>yy</command> will copy a block of text.</para></listitem>
<listitem><para><command>n p</command> will paste it n times.</para></listitem>
<listitem><para><command>:recover</command> will recover a file after an unexpected interruption.</para></listitem>
</itemizedlist>
</sect3>
<sect3 id="sect_06_02_02_03"><title>
Commands that switch the editor to insert mode</title>
<itemizedlist>
<listitem><para><command>a</command> will append: it moves the cursor one position to the right before switching to insert mode</para></listitem>
<listitem><para><command>i</command> will insert</para></listitem>
<listitem><para><command>o</command> will insert a blank line under the current cursor position and move the cursor to that line.</para></listitem>
</itemizedlist>
<para>Pressing the <keycap>Esc</keycap> key switches back to command mode.  If you're not sure what mode you're in because you use a really old version of <command>vi</command> that doesn't display an <quote>INSERT</quote> message, type <keycap>Esc</keycap> and you'll be sure to return to command mode.  It is possible that the system gives a little alert when you are already in command mode when hitting <keycap>Esc</keycap>, by beeping or giving a visual bell (a flash on the screen).  This is normal behavior.</para>
</sect3>
</sect2>
<sect2 id="sect_06_02_03"><title>The easy way</title>
<para>Instead of reading the text, which is quite boring, you can use the vimtutor to learn you first Vim commands.  This is a thirty minute tutorial that teaches the most basic Vim functionality in eight easy exercises.  While you can't learn everything about <command>vim</command> in just half an hour, the tutor is designed to describe enough of the commands that you will be able to easily use Vim as an all-purpose editor.</para>
<para>In UNIX and MS Windows, if Vim has been properly installed, you can start this program from the shell or command line, entering the <command>vimtutor</command> command.  This will make a copy of the tutor file, so that you can edit it without the risk of damaging the original.  There are a few translated versions of the tutor.  To find out if yours is available, use the two-letter language code.  For French this would be <command>vimtutor <parameter>fr</parameter></command> (if installed on the system).</para>
</sect2> 

</sect1>
<sect1 id="sect_06_03"><title>Linux in the office</title>
<sect2 id="sect_06_03_01"><title>History</title>
<para>Throughout the last decade the office domain has typically been dominated by MS Office, and, let's face it: the Microsoft Word, Excel and PowerPoint formats are industry standards that you will have to deal with sooner or later.</para>
<para>This monopoly situation of Microsoft proved to be a big disadvantage for getting new users to Linux, so a group of German developers started the StarOffice project, that was, and is still, aimed at making an MS Office clone.  Their company, StarDivision, was acquired by Sun Microsystems by the end of the 1990s, just before the 5.2 release.  Sun continues development but restricted access to the sources.  Nevertheless, development on the original set of sources continues in the Open Source community, which had to rename the project to OpenOffice.  OpenOffice is now available for a variety of platforms, including MS Windows, Linux, MacOS and Solaris.  There is a screenshot in <xref linkend="sect_01_03_02"></xref>.</para>
<para>Almost simultaneously, a couple of other quite famous projects took off.  Also a very common alternative to using MS Office is KOffice, the office suite that used to be popular among SuSE users.  Like the original, this clone incorporates an MS Word and Excel compatible program, and much more.</para>
<para>Smaller projects deal with particular programs of the MS example suite, such as Abiword and MS Wordview for compatibility with MS Word documents, and Gnumeric for viewing and creating Excel compatible spreadsheets.</para>
</sect2>
<sect2 id="sect_06_03_02"><title>Suites and programs</title>
<para>Current distributions usually come with all the necessary tools.  Since these provide excellent guidelines and searchable indexes in the <menuchoice><guimenu>Help</guimenu></menuchoice> menus, we won't discuss them in detail.  For references, see you system documentation or the web sites of the projects, such as</para>

<itemizedlist>
<listitem><para><ulink url="http://www.openoffice.org">http://www.openoffice.org</ulink></para></listitem>
<listitem><para><ulink url="http://www.koffice.org">http://www.koffice.org</ulink></para></listitem>
<listitem><para><ulink url="http://freshmeat.net">Freshmeat</ulink> and <ulink url="http://sourceforge.org">SourceForge</ulink> for various other projects.</para></listitem>
</itemizedlist>
</sect2>
<sect2 id="sect_06_03_03"><title>Remarks</title>
<sect3 id="sect_06_03_03_01"><title>General use of office documents</title>
<para>Try to limit the use of office documents for the purposes they were meant for: the office.</para>
<para>An example: it drives most Linux users crazy if you send them a mail that says in the body something like: <quote>Hello, I want to tell you something, see attach</quote>, and then the attachement proves to be an MS Word compatible document like: <quote>Hello my friend, how is your new job going and will you have time to have lunch with me tomorrow?</quote>  Also a bad idea is the attachment of your signature in such a file, for instance.  If you want to sign messages or files, use GPG, the PGP-compatible GNU Privacy Guard or SSL (Secure Socket Layer) certificates.</para>
<para>These users are not annoyed because they are unable to read these documents, or because they are worried that these formats typically generate much larger files, but rather because of the implication that they are using MS Windows, and possibly because of the extra work of starting some additional programs.</para>
</sect3>
<sect3 id="sect_06_03_03_02"><title>System and user configuration files</title>
<para>In the next chapter, we start configuring our environment, and this might include editing all kinds of files that determine how a program behave.</para>
<para><emphasis>Don't edit these files with any office component!</emphasis></para>
<para>The default file format specification  would make the program add several lines of code, defining the format of the file and the fonts used.  These lines won't be interpreted in the correct way by the programs depending on them, resulting in errors or a crash of the program reading the file.  In some cases, you can save the file as plain text, but you'll run into trouble when making this a habit.</para>
</sect3>
<sect3 id="sect_06_03_03_03"><title>But I want a graphical text editor!</title>
<para>If you really insist, try <command>gedit</command>, <command>kedit</command>, <command>kwrite</command> or <command>xedit</command>; these programs only do text files, which is what we will be needing.  If you plan on doing anything serious, though, stick to a real text mode editor such as <command>vim</command> or <command>emacs</command>.</para>
<para>An acceptable alternative is <command>gvim</command>, the Gnome version of <command>vim</command>.  You still need to use <command>vi</command> commands, but if you are stuck, you can look them up in the menus.</para>
</sect3>
</sect2>

</sect1>
<sect1 id="sect_06_04"><title>Summary</title>
<para>In this chapter we learned to use an editor.  While it depends on your own individual preference which one you use, it is necessary to at least know how to use one editor.</para>
<para>The <command>vi</command> editor is available on every UNIX system.</para>
<para>Most Linux distributions include an office suite and a graphical text editor.</para>

</sect1>
<sect1 id="sect_06_05"><title>Exercises</title>
<para>This chapter has only one exercise: start the Vim tutor by entering <command>vimtutor</command> in a terminal session, and get started.</para>
<para>You may alternatively start <command>emacs</command> and type <keycap>Ctrl</keycap>+<keycap>H</keycap> and then <keycap>T</keycap> to invoke the self-paced Emacs tutorial.</para>
<para>Practice is the only way!</para>

</sect1>
</chapter>
 
<chapter id="chap_07"><title>Home sweet /home</title>
<abstract>
<para>This chapter is about configuring your environment.  Now that we now how to use an editor, we can change all kinds of files to make ourselves feel better at home.  After completing this chapter, you will know more about:</para>
<para>
<itemizedlist>
<listitem><para>Organizing your environment</para></listitem>
<listitem><para>Common shell setup files</para></listitem>
<listitem><para>Shell configuration</para></listitem>
<listitem><para>Configuring the prompt</para></listitem>
<listitem><para>Configuring the graphical environment</para></listitem>
<listitem><para>Sound and video applications</para></listitem>
<listitem><para>Display and window managers</para></listitem>
<listitem><para>How the X client-server system works</para></listitem>
<listitem><para>Language and font settings</para></listitem>
<listitem><para>Installing new software</para></listitem>
<listitem><para>Updating existing packages</para></listitem>
</itemizedlist>
</para>
</abstract>

<sect1 id="sect_07_01"><title>General good housekeeping</title>
<sect2 id="sect_07_01_01"><title>Introduction</title>
<para>As we mentioned before, it is easy enough to make a mess of the system.  We can't put enough stress on the importance of keeping the place tidy.  When you learn this from the start, it will become a good habit that will save you time when programming on a Linux or UNIX system or when confronted with system management tasks.  Here are some ways of making life easier on yourself:</para>
<itemizedlist>
<listitem><para>Make a <filename>bin</filename> directory for your program files and scripts.</para></listitem>
<listitem><para>Organize non-executable files in appropriate directories, and make as many directories as you like.  Examples include separate directories for images, documents, projects, downloaded files, spreadsheets, personal files, and so on.</para></listitem>
<listitem><para>Make directories private with the <command>chmod <parameter>700</parameter> <filename>dirname</filename></command> command.</para></listitem>
<listitem><para>Give your files sensible names, such as <filename>Complaint to the prime minister 050302</filename> rather than <filename>letter1</filename>.</para></listitem>
</itemizedlist>
</sect2>
<sect2 id="sect_07_01_02"><title>Make space</title>
<para>On some systems, the <command>quota</command> system may force you to clean up from time to time, or the physical limits of your hard disk may force you to make more space without running any monitoring programs.  This section discusses a number of ways, besides using the <command>rm</command> command, to reclaim disk space.</para>
<para>Run the <command>quota <option>-v</option></command> command to see how much space is left.</para>
<sect3 id="sect_07_01_02_01"><title>Emptying files</title>
<para>Sometimes the content of a file doesn't interest you, but you need the file name as a marker (for instance, you just need the timestamp of a file, a reminder that the file was there or should be there some time in the future).  Redirecting the output of a null command is how this is done in the Bourne and Bash shells:</para>
<screen>
<prompt>andy:~&gt;</prompt> <command>cat wishlist &gt; placeholder</command>

<prompt>andy:~&gt;</prompt> <command>ls -la placeholder</command>
-rw-rw-r--    1 andy   andy       200 Jun 12 13:34 placeholder

<prompt>andy:~&gt;</prompt> <command> &gt; placeholder</command>

<prompt>andy:~&gt;</prompt> <command>ls -la placeholder</command>

-rw-rw-r--    1 andy   andy         0 Jun 12 13:35 placeholder
</screen>
<para>The process of reducing an existing file to a file with the same name that is 0 bytes large is called <quote>truncating.</quote></para>
<para>For creating a new empty file, the same effect is obtained with the <command>touch</command> command.  On an existing file, <command>touch</command> will only update the timestamp.  See the Info pages on <command>touch</command> for more details.</para>
<para>To <quote>almost</quote> empty a file, use the <command>tail</command> command.  Suppose user <emphasis>andy</emphasis>'s wishlist becomes rather long because he always adds stuff at the end but never deletes the things he actually gets.  Now he only wants to keep the last five items:</para>
<screen>
<prompt>andy:~&gt;</prompt> <command>tail -5 wishlist &gt; newlist</command>

<prompt>andy:~&gt;</prompt> <command>cat newlist &gt; wishlist</command>

<prompt>andy:~&gt;</prompt> <command>rm newlist</command>
</screen>
</sect3>
<sect3 id="sect_07_01_02_02"><title>More about log files</title>
<para>Some Linux programs insist on writing all sorts of output in a log file.  Usually there are options to only log errors, or to log a minimal amount of information, for example setting the debugging level of the program.  But even then, you might not care about the log file.  Here are some ways to get rid of them or at least set some limits to their size:</para>
<itemizedlist>
<listitem><para>Try removing the log file when the program is not running, if you are sure that you won't need it again.  Some programs may even see, when restarted, that there is no log file and will therefore not log.</para></listitem>
<listitem><para>If you remove the log file and the program recreates it, read the documentation for this particular program in search for command options that avoid making log files.</para></listitem>
<listitem><para>Try making smaller log files by logging only the information that is relevant to you, or by logging only significant information.</para></listitem>
   <listitem><para>Try replacing the log file with a symbolic link to <filename>/dev/null</filename>; if you're lucky the program won't complain.  Don't do this with the log files of programs that run at system boot or programs that run from cron (see <xref linkend="chap_04"></xref>).  These programs might replace the symbolic link with a small file that starts growing again.</para></listitem>
</itemizedlist>
</sect3>
<sect3 id="sect_07_01_02_03"><title>Mail</title>
<para>Regularly clean out your mailbox, make sub-folders and automatic redirects using <command>procmail</command> (see the Info pages) or the filters of your favorite mail reading application.  If you have a trash folder, clean it out on a regular basis.</para>
<para>To redirect mail, use the <filename>.forward</filename> file in your home directory.  The Linux mail service looks for this file whenever it has to deliver local mail.  The content of the file defines what the mail system should do with your mail.  It can contain a single line holding a fully qualified E-mail address.  In that case the system will send all your mail to this address.  For instance, when renting space for a website, you might want to forward the mail destined for the webmaster to your own account in order not to waste disk space.  The webmaster's <filename>.forward</filename> may look like this:</para>
<screen>
<prompt>webmaster@www ~/&gt;</prompt> <command>cat .forward</command>
mike@pandora.be
</screen>
<para>Using mail forwarding is also useful to prevent yourself from having to check several different mailboxes.  You can make every address point to a central and easily accessible account.</para>
<para>You can ask your system administrator to define a forward for you in the local mail aliases file, like when an account is being closed but E-mail remains active for a while.</para>
</sect3>
<sect3 id="sect_07_01_02_04"><title>Save space with a link</title>
<para>When several users need access to the same file or program, when the original file name is too long or too difficult to remember, use a symbolic link instead of a separate copy for each user or purpose.</para>
<para>Multiple symbolic links may have different names, e.g. a link may be called <filename>monfichier</filename> in one user's directory, and <filename>mylink</filename> in another's.  Multiple links (different names) to the same file may also occur in the same directory.  This is often done in the <filename>/lib</filename> directory: when issuing the command</para>
<cmdsynopsis><command>ls <option>-l</option> <filename>/lib</filename></command></cmdsynopsis>
<para>you will see that this directory is plenty of links pointing to the same files.  These are created so that programs searching for one name would not get stuck, so they are pointed to the correct/current name of the libraries they need.</para>
</sect3>
<sect3 id="sect_07_01_02_05"><title>Limit file sizes</title>
<para>The shell contains a built-in command to limit file sizes, <command>ulimit</command>, which can also be used to display limitations on system resources:</para>
<screen>
<prompt>cindy:~&gt;</prompt> <command>ulimit -a</command>
core file size (blocks)     0
data seg size (kbytes)      unlimited
file size (blocks)          unlimited
max locked memory (kbytes)  unlimited
max memory size (kbytes)    unlimited
open files                  1024
pipe size (512 bytes)       8
stack size (kbytes)         8192
cpu time (seconds)          unlimited
max user processes          512
virtual memory (kbytes)     unlimited
</screen>
<para>Cindy is not a developer and doesn't care about core dumps, which contain debugging information on a program.  If you do want core dumps, you can set their size using the <command>ulimit</command> command.  Read the Info pages on <command>bash</command> for a detailed explanation.</para>
</sect3>
<sect3 id="sect_07_01_02_06"><title>Compressed files</title>
<para>Compressed files are useful because they take less space on your hard disk.  Another advantage is that it takes less bandwidth to send a compressed file over your network.  A lot of files, such as the man pages, are stored in a compressed format on your system.  Yet unpacking these to get a little bit of information and then having to compress them again is rather time-consuming.  You don't want to unpack a man page, for instance, read about an option to a command and then compress the man page again.  Most people will probably forget to clean up after they found the information they needed.</para>
<para>So we have tools that work on compressed files, by uncompressing them only in memory.  The actual compressed file stays on your disk as it is.  Most systems support <command>zgrep</command>, <command>zcat</command>, <command>bzless</command> and such to prevent unnecessary decompressing/compressing actions.  See your system's binary directory and the Info pages.</para>
<para>See <xref linkend="chap_09"></xref> for more on the actual compressing of files and examples on making archives.</para>

</sect3>
</sect2>

</sect1>
<sect1 id="sect_07_02"><title>Your text environment</title>
<sect2 id="sect_07_02_1"><title>Environment variables</title>
<sect3 id="sect_07_02_01"><title>General</title>
<para>We already mentioned a couple of environment variables, such as <varname>PATH</varname> and <varname>HOME</varname>.  Until now, we only saw examples in which they serve a certain purpose to the shell.  But there are many other Linux utilities that need information about you in order to do a good job.</para>
<para>What other information do programs need apart from paths and home directories?</para>  
<para>A lot of programs want to know about the kind of terminal you are using; this information is stored in the <varname>TERM</varname> variable.  In text mode, this will be the <emphasis>linux</emphasis> terminal emulation, in graphical mode you are likely to use <emphasis>xterm</emphasis>.  Lots of programs want to know what your favorite editor is, in case they have to start an editor in a subprocess.  The shell you are using is stored in the <varname>SHELL</varname> variable, the operating system type in <varname>OS</varname> and so on.  A list of all variables currently defined for your session can be viewed entering the <command>printenv</command> command.</para>
<para>The environment variables are managed by the shell.  As opposed to regular shell variables, environment variables are inherited by any program you start, including another shell.  New processes are assigned a copy of these variables, which they can read, modify and pass on in turn to their own child processes.</para>
<para>There is nothing special about variable names, except that the common ones are in upper case characters by convention.  You may come up with any name you want, although there are standard variables that are important enough to be the same on every Linux system, such as <varname>PATH</varname> and <varname>HOME</varname>.</para>
</sect3>
<sect3 id="sect_07_02_02"><title>Exporting variables</title>
<para>An individual variable's content is usually displayed using the <command>echo</command> command, as in these examples:</para>
<screen>
<prompt>debby:~&gt;</prompt> <command>echo $PATH</command>
/usr/bin:/usr/sbin:/bin:/sbin:/usr/X11R6/bin:/usr/local/bin

<prompt>debby:~&gt;</prompt> <command>echo $MANPATH</command>
/usr/man:/usr/share/man/:/usr/local/man:/usr/X11R6/man
</screen>
<para>If you want to change the content of a variable in a way that is useful to other programs, you have to export the new value from your environment into the environment that runs these programs.  A common example is exporting the <varname>PATH</varname> variable.  You may declare it as follows, in order to be able to play with the flight simulator software that is in <filename>/opt/FlightGear/bin</filename>:</para>
<screen>
<prompt>debby:~&gt;</prompt> <command>PATH=$PATH:/opt/FlightGear/bin</command>
</screen>
<para>This instructs the shell to not only search programs in the current path, <varname>$PATH</varname>, but also in the additional directory <filename>/opt/FlightGear/bin</filename>.</para>
<para>However, as long as the new value of the <varname>PATH</varname> variable is not known to the environment, things will still not work:</para>
<screen>
<prompt>debby:~&gt;</prompt> <command>runfgfs</command>
bash: runfgfs: command not found
</screen>
<para>Exporting variables is done using the shell built-in command <command>export</command>:</para>
<screen>
<prompt>debby:~&gt;</prompt> <command>export PATH</command>

<prompt>debby:~&gt;</prompt> <command>runfgfs</command>
--flight simulator starts--
</screen>
<para>In Bash, we normally do this in one elegant step:</para>
<cmdsynopsis><command>export <varname>VARIABLE</varname>=<replaceable>value</replaceable></command></cmdsynopsis>
<para>The same technique is used for the <varname>MANPATH</varname> variable, that tells the <command>man</command> command where to look for compressed man pages.  If new software is added to the system in new or unusual directories, the documentation for it will probably also be in an unusual directory.  If you want to read the man pages for the new software, extend the <varname>MANPATH</varname> variable:</para>
<screen>
<prompt>debby:~&gt;</prompt> <command>export MANPATH=$MANPATH:/opt/FlightGear/man</command>

<prompt>debby:~&gt;</prompt> <command>echo $MANPATH</command>
/usr/man:/usr/share/man:/usr/local/man:/usr/X11R6/man:/opt/FlightGear/man
</screen>
<para>You can avoid retyping this command in every window you open by adding it to one of your shell setup files, see <xref linkend="sect_07_02_04"></xref>.</para>
</sect3>
<sect3 id="sect_07_02_03"><title>Reserved variables</title>
<para>The following table gives an overview of the most common predefined variables:</para>

<table frame="all">
<title>Common environment variables</title>
<tgroup align="left" cols="2" colsep="1" rowsep="1">
<thead>
<row><entry>Variable name</entry><entry>Stored information</entry></row>
</thead>
<tbody>
<row><entry><varname>DISPLAY</varname></entry><entry>used by the X Window system to identify the display server</entry></row>
<row><entry><varname>DOMAIN</varname></entry><entry>domain name</entry></row>
<row><entry><varname>EDITOR</varname></entry><entry>stores your favorite line editor</entry></row>
<row><entry><varname>HISTSIZE</varname></entry><entry>size of the shell history file in number of lines</entry></row>
<row><entry><varname>HOME</varname></entry><entry>path to your home directory</entry></row>
<row><entry><varname>HOSTNAME</varname></entry><entry>local host name</entry></row>
<row><entry><varname>INPUTRC</varname></entry><entry>location of definition file for input devices such as keyboard</entry></row>
<row><entry><varname>LANG</varname></entry><entry>preferred language</entry></row>
<row><entry><varname>LD_LIBRARY_PATH</varname></entry><entry>paths to search for libraries</entry></row>
<row><entry><varname>LOGNAME</varname></entry><entry>login name</entry></row>
<row><entry><varname>MAIL</varname></entry><entry>location of your incoming mail folder</entry></row>
<row><entry><varname>MANPATH</varname></entry><entry>paths to search for man pages</entry></row>
<row><entry><varname>OS</varname></entry><entry>string describing the operating system</entry></row>
<row><entry><varname>OSTYPE</varname></entry><entry>more information about version etc.</entry></row>
<row><entry><varname>PAGER</varname></entry><entry>used by programs like <command>man</command> which need to know what to do in case output is more than one terminal window.</entry></row>
<row><entry><varname>PATH</varname></entry><entry>search paths for commands</entry></row>
<row><entry><varname>PS1</varname></entry><entry>primary prompt</entry></row>
<row><entry><varname>PS2</varname></entry><entry>secondary prompt</entry></row>
<row><entry><varname>PWD</varname></entry><entry>present working directory</entry></row>
<row><entry><varname>SHELL</varname></entry><entry>current shell</entry></row>
<row><entry><varname>TERM</varname></entry><entry>terminal type</entry></row>
<row><entry><varname>UID</varname></entry><entry>user ID</entry></row>
<row><entry><varname>USER(NAME)</varname></entry><entry>user name</entry></row>
<row><entry><varname>VISUAL</varname></entry><entry>your favorite full-screen editor</entry></row>
<row><entry><varname>XENVIRONMENT</varname></entry><entry>location of your personal settings for X behavior</entry></row>
<row><entry><varname>XFILESEARCHPATH</varname></entry><entry>paths to search for graphical libraries</entry></row>
</tbody>
</tgroup>
</table>
<para>A lot of variables are not only predefined but also preset, using configuration files.  We discuss these in the next section.</para>
</sect3>
</sect2>

<sect2 id="sect_07_02_04"><title>Shell setup files</title>
<para>When entering the <command>ls <option>-al</option></command> command to get a long listing of all files, including the ones starting with a dot, in your home directory, you will see one or more files starting with a . and ending in <emphasis>rc</emphasis>.  For the case of <command>bash</command>, this is <filename>.bashrc</filename>.  This is the counterpart of the system-wide configuration file <filename>/etc/bashrc</filename>.</para>
<para>When logging into an interactive login shell, <command>login</command> will do the authentication, set the environment and start your shell.  In the case of <command>bash</command>, the next step is reading the general <filename>profile</filename> from <filename>/etc</filename>, if that file exists.  <command>bash</command> then looks for <filename>~/.bash_profile</filename>, <filename>~/.bash_login</filename> and <filename>~/.profile</filename>, in that order, and reads and executes commands from the first one that exists and is readable.  If none exists, <filename>/etc/bashrc</filename> is applied.</para>
<para>When a login shell exits, <command>bash</command> reads and executes commands from the file <filename>~/.bash_logout</filename>, if it exists.
</para>
<para>This procedure is explained in detail in the <command>login</command> and <command>bash</command> man pages.</para>
</sect2>

<sect2 id="sect_07_02_05"><title>A typical set of setup files</title>
<para>Let's look at some of these config files.  First <filename>/etc/profile</filename> is read, in which important variables such as <varname>PATH</varname>, <varname>USER</varname> and <varname>HOSTNAME</varname> are set:</para>
<screen>
<prompt>debby:~&gt;</prompt> <command>cat /etc/profile</command>
# /etc/profile

# System wide environment and startup programs, for login setup
# Functions and aliases go in /etc/bashrc


# Path manipulation
if [ `id -u` = 0 ] &amp;&amp; ! echo $PATH | /bin/grep -q "/sbin" ; then
    PATH=/sbin:$PATH
fi

if [ `id -u` = 0 ] &amp;&amp; ! echo $PATH | /bin/grep -q "/usr/sbin" ; then
    PATH=/usr/sbin:$PATH
fi

if [ `id -u` = 0 ] &amp;&amp; ! echo $PATH | /bin/grep -q "/usr/local/sbin"
    then
    PATH=/usr/local/sbin:$PATH
fi

if ! echo $PATH | /bin/grep -q "/usr/X11R6/bin" ; then
    PATH="$PATH:/usr/X11R6/bin"
fi
</screen>
<para>These lines check the path to set: if <emphasis>root</emphasis> opens a shell (user ID 0), it is checked that <filename>/sbin</filename>, <filename>/usr/sbin</filename> and <filename>/usr/local/sbin</filename> are in the path.  If not, they are added.  It is checked for everyone that <filename>/usr/X11R6/bin</filename> is in the path.</para>

<screen>
# No core files by default
ulimit -S -c 0 &gt; /dev/null 2&gt;&amp;1
</screen>
<para>All trash goes to <filename>/dev/null</filename> if the user doesn't change this setting.</para>
<screen>
USER=`id -un`
LOGNAME=$USER
MAIL="/var/spool/mail/$USER"

HOSTNAME=`/bin/hostname`
HISTSIZE=1000
</screen>
<para>Here general variables are assigned their proper values.</para>
<screen>
if [ -z "$INPUTRC" -a ! -f "$HOME/.inputrc" ]; then
    INPUTRC=/etc/inputrc
fi
</screen>
<para>If the variable <varname>INPUTRC</varname> is not set, and there is no <filename>.inputrc</filename> in the user's home directory, then the default input control file is loaded.  </para>
<screen>
export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE INPUTRC
</screen>
<para>All variables are exported, so that they are available to other programs requesting information about your environment.</para>
<screen>
for i in /etc/profile.d/*.sh ; do
    if [ -r $i ]; then
    	. $i
    fi
done
unset i
</screen>
<para>All readable shell scripts from the <filename>/etc/profile.d</filename> directory are read and executed.  These do things like enabling <emphasis>color-ls</emphasis>, aliasing <command>vi</command> to <command>vim</command>, setting locales etc.  The temporary variable <varname>i</varname> is unset to prevent it from disturbing shell behavior later on.</para>
<para>Then <command>bash</command> looks for a <filename>.bash_profile</filename> in the user's home directory:</para>
<screen>
<prompt>debby:~&gt;</prompt> <command>cat .bash_profile </command>
#################################################################
#                                                               #
#   .bash_profile file                                          #
#                                                               #
#   Executed from the bash shell when you log in.               #
#                                                               #
#################################################################

source ~/.bashrc
source ~/.bash_login
</screen>
<para>This very straight forward file instructs your shell to first read <filename>~/.bashrc</filename> and then <filename>~/.bash_login</filename>.  You will encounter the <command>source</command> built-in shell command regularly when working in a shell environment: it is used to apply configuration changes to the current environment.</para>
<para>The <filename>~/.bash_login</filename> file defines default file protection by setting the <command>umask</command> value, see <xref linkend="sect_03_04_02_02"></xref>.  The <filename>~/.bashrc</filename> file is used to define a bunch of user-specific aliases and functions and personal environment variables.  It first reads <filename>/etc/bashrc</filename>, which describes the default prompt (<varname>PS1</varname>) and the default umask value.  After that, you can add your own settings.  If no <filename>~/.bashrc</filename> exists, <filename>/etc/bashrc</filename> is read by default:</para>
<screen>
<prompt>debby:~&gt;</prompt> <command>cat /etc/bashrc</command>
# /etc/bashrc

# System wide functions and aliases
# Environment stuff goes in /etc/profile

# by default, we want this to get set.
# Even for non-interactive, non-login shells.
if [ `id -gn` = `id -un` -a `id -u` -gt 99 ]; then
	umask 002
else
	umask 022
fi

# are we an interactive shell?
if [ "$PS1" ]; then
  if [ -x /usr/bin/tput ]; then
    if [ "x`tput kbs`" != "x" ]; then 
# We can't do this with "dumb" terminal
      stty erase `tput kbs`
    elif [ -x /usr/bin/wc ]; then
      if [ "`tput kbs|wc -c `" -gt 0 ]; then 
# We can't do this with "dumb" terminal
        stty erase `tput kbs`
      fi
    fi
  fi
  case $TERM in
	xterm*)
	if [ -e /etc/sysconfig/bash-prompt-xterm ]; then
		PROMPT_COMMAND=/etc/sysconfig/bash-prompt-xterm
	else
   PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:\
${PWD/$HOME/~}\007"'
	fi
    ;;
	*)
   [ -e /etc/sysconfig/bash-prompt-default ] &amp;&amp; PROMPT_COMMAND=\
/etc/sysconfig/bash-prompt-default
	    ;;
    esac
    [ "$PS1" = "\\s-\\v\\\$ " ] &amp;&amp; PS1="[\u@\h \W]\\$ "
    
    if [ "x$SHLVL" != "x1" ]; then # We're not a login shell
        for i in /etc/profile.d/*.sh; do
	    if [ -x $i ]; then
	        . $i
	    fi
	done
    fi
fi
</screen>
<para>Upon logout, the commands in <filename>~/.bash_logout</filename> are executed, which can for instance clear the terminal, so that you have a clean window upon logging out of a remote session, or upon leaving the system console:</para>
<screen>
<prompt>debby:~&gt;</prompt> <command>cat .bash_logout</command>
# ~/.bash_logout

clear
</screen>
<para>Let's take a closer look at how these scripts work in the next section.  Keep <command>info <parameter>bash</parameter></command> close at hand.</para>
</sect2>
<sect2 id="sect_07_02_06"><title>The Bash prompt</title>
<sect3 id="sect_07_02_06_01"><title>Introduction</title>
<para>
The Bash prompt can do much more than displaying such simple information as your user name, the name of your machine and some indication about the present working directory.  We can add other information such as the current date and time, number of connected users etc.</para>
<para>Before we begin, however, we will save our current prompt in another environment variable:
</para>
<screen>
<prompt>[jerry@nowhere jerry]$</prompt> <command>MYPROMPT=$PS1</command>

<prompt>[jerry@nowhere jerry]$</prompt> <command>echo $MYPROMPT</command>
[\u@\h \W]\$

<prompt>[jerry@nowhere jerry]$</prompt>
</screen>
<para>When we change the prompt now, for example by issuing the command <command><varname>PS1</varname>=<replaceable>"-&gt;"</replaceable></command>, we can always get our original prompt back with the command <command><varname>PS1</varname>=<varname>$MYPROMPT</varname></command>.  You will, of course, also get it back when you reconnect, as long as you just fiddle with the prompt on the command line and avoid putting it in a shell configuration file.</para>
</sect3>
<sect3 id="sect_07_02_06_02"><title>Some examples</title>
<para>In order to understand these prompts and the escape sequences used, we refer to the Bash Info or man pages.</para>
<itemizedlist>
<listitem><para><command>export <varname>PS1</varname>=<replaceable>"[\t \j] "</replaceable></command></para><para>Displays time of day and number of running jobs</para>
</listitem>
<listitem><para><command>export <varname>PS1</varname>=<replaceable>"[\d][\u@\h \w] : "</replaceable></command></para><para>Displays date, user name, host name and current working directory.  Note that \W displays only base names of the present working directory.</para></listitem>
<listitem><para><command>export <varname>PS1</varname>=<replaceable>"{\!} "</replaceable></command></para><para>Displays history number for each command.</para></listitem>
<listitem><para><command>export <varname>PS1</varname>=<replaceable>"\[\033[1;35m\]\u@\h\[\033[0m\] "</replaceable></command></para><para>Displays user@host in pink.</para></listitem>
<listitem><para><command>export <varname>PS1</varname>=<replaceable>"\[\033[1;35m\]\u\[\033[0m\] \[\033[1;34m\]\w\[\033[0m\] "</replaceable></command></para><para>Sets the user name in pink and the present working directory in blue.</para></listitem>
<listitem><para><command>export <varname>PS1</varname>=<replaceable>"\[\033[1;44m\]$USER is in \w\[\033[0m\] "</replaceable></command></para><para>Prompt for people who have difficulties seeing the difference between the prompt and what they type.</para></listitem>
<listitem><para><command>export <varname>PS1</varname>=<replaceable>"\[\033[4;34m\]\u@\h \w \[\033[0m\]"</replaceable></command></para><para>Underlined prompt.</para></listitem>
<listitem><para><command>export <varname>PS1</varname>=<replaceable>"\[\033[7;34m\]\u@\h \w \[\033[0m\] "</replaceable></command></para><para>White characters on a blue background.</para></listitem>
<listitem><para><command>export <varname>PS1</varname>=<replaceable>"\[\033[3;35m\]\u@\h \w \[\033[0m\]\a"</replaceable></command></para><para>Pink prompt in a lighter font that alerts you when your commands have finished.</para></listitem>
<listitem><para><command>export <varname>PS1</varname>=...</command></para></listitem>
</itemizedlist>
<para>Variables are exported so the subsequently executed commands will also know about the environment.  The prompt configuration line that you want is best put in your shell configuration file, <filename>~/.bashrc</filename>.</para>
<para>If you want, prompts can execute shell scripts and behave different under different conditions.  You can even have the prompt play a tune every time you issue a command, although this gets boring pretty soon.  More information can be found in the <ulink url="http://www.tldp.org/HOWTO/Bash-Prompt-HOWTO/">Bash-Prompt HOWTO</ulink>.</para>
</sect3>
</sect2>
<sect2 id="sect_07_02_07"><title>Shell scripts</title>
<sect3 id="sect_07_02_07_01"><title>What are scripts?</title>
<para>A shell script is, as we saw in the shell configuration examples, a text file containing shell commands.  When such a file is used as the first non-option argument when invoking Bash, and neither the `-c' nor `-s' option is supplied, Bash reads and executes commands from the file, then exits.  This mode of operation creates a non-interactive shell.  When Bash runs a shell script, it sets the special parameter `0' to the name of the file, rather than the name of the shell, and the positional parameters are set to the remaining arguments, if any are given.  If no additional arguments are supplied, the positional parameters are unset.</para>
<para>A shell script may be made executable by using the <command>chmod</command> command to turn on the execute bit.  When Bash finds such a file while searching the <varname>PATH</varname> for a command, it spawns a sub-shell to execute it.  In other words, executing</para>
<cmdsynopsis><command>filename <parameter>ARGUMENTS</parameter></command></cmdsynopsis>
<para>is equivalent to executing</para>
<cmdsynopsis><command>bash <parameter>filename</parameter> <parameter>ARGUMENTS</parameter></command></cmdsynopsis>
<para>if `filename' is an executable shell script.  This sub-shell reinitializes itself, so that the effect is as if a new shell had been invoked to interpret the script, with the exception that the locations of commands remembered by the parent (see <command>hash</command> in the Info pages) are retained by the child.</para>
<para>Most versions of UNIX make this a part of the operating system's command execution mechanism.  If the first line of a script begins with the two characters `#!', the remainder of the line specifies an interpreter for the program.  Thus, you can specify <command>bash</command>, <command>awk</command>, <command>perl</command> or some other interpreter or shell and write the rest of the script file in that language.</para>
<para>The arguments to the interpreter consist of a single optional argument following the interpreter name on the first line of the script file, followed by the name of the script file, followed by the rest of the arguments.  Bash will perform this action on operating systems that do not handle it themselves.</para>
<para>Bash scripts often begin with `#! /bin/bash' (assuming that Bash has been installed in `/bin'), since this ensures that Bash will be used to interpret the script, even if it is executed under another shell.</para>
</sect3>
<sect3 id="sect_07_02_07_02"><title>Some simple examples</title>
<para>A very simple script consisting of only one command, that says hello to the user executing it:</para>
<screen>
<prompt>[jerry@nowhere ~]</prompt> <command>cat hello.sh</command>
#!/bin/bash
echo "Hello $USER"
</screen>
<para>The script actually consists of only one command, <command>echo</command>, which uses the <emphasis>value of</emphasis> ($) the <varname>USER</varname> environment variable to print a string customized to the user issuing the command.</para>
<para>Another one-liner, used for displaying connected users:</para>
<screen>
#!/bin/bash
who | cut -d " " -f 1 | sort -u
</screen>
<para>Here is a script consisting of some more lines, that I use to make backup copies of all files in a directory.  
The script first makes a list of all the files in the current directory and puts it in the variable <varname>LIST</varname>.  Then it sets the name of the copy for each file, and then it copies the file.  For each file, a message is printed:</para>
<screen>
<prompt>tille:~&gt;</prompt> <command>cat <filename>bin/makebackupfiles.sh</filename></command>
#!/bin/bash
# make copies of all files in a directory
LIST=`ls`
for i in $LIST; do
	ORIG=$i
	DEST=$i.old
	cp $ORIG $DEST
	echo "copied $i"
done
</screen>
<para>Just entering a line like <command>mv <parameter>*</parameter> <parameter>*.old</parameter></command> won't work, as you will notice when trying this on a set of test files.  An <command>echo</command> command was added in order to display some activity.  <command>echo</command>'s are generally useful when a script won't work: insert one after each doubted step and you will find the error in no time.</para>
<para>The <filename>/etc/rc.d/init.d</filename> directory contains loads of examples.  Let's look at this script that controls the fictive ICanSeeYou server:</para>
<screen>
#!/bin/sh
# description: ICanSeeYou allows you to see networked people

# process name: ICanSeeYou
# pidfile: /var/run/ICanSeeYou/ICanSeeYou.pid
# config: /etc/ICanSeeYou.cfg

# Source function library.
. /etc/rc.d/init.d/functions

# See how (with which arguments) we were called.
case "$1" in
	start)
		echo -n "Starting ICanSeeYou: "
		daemon ICanSeeYou
		echo
		touch /var/lock/subsys/ICanSeeYou
		;;
	stop)
		echo -n "Shutting down ICanSeeYou: "
		killproc ICanSeeYou
		echo
		rm -f /var/lock/subsys/ICanSeeYou
		rm -f /var/run/ICanSeeYou/ICanSeeYou.pid
		;;
	status)
		status ICanSeeYou
		;;
	restart)
		$0 stop
		$0 start
		;;
	*)
		echo "Usage: $0 {start|stop|restart|status}"
		exit 1
esac

exit 0
</screen>
<para>First, with the <command>.</command> command (dot) a set of shell functions, used by almost all shell scripts in <filename>/etc/rc.d/init.d</filename>, is loaded.  Then a <command>case</command> command is issued, which defines 4 different ways the script can execute.  An example might be <command>ICanSeeYou <parameter>start</parameter></command>.  The decision of which case to apply is made by reading the (first) argument to the script, with the expression <emphasis>$1</emphasis>.</para>
<para>When no compliant input is given, the default case, marked with an asterisk, is applied, upon which the script gives an error message.  The <command>case</command> list is ended with the <command>esac</command> statement.  In the <emphasis>start</emphasis> case the server program is started as a daemon, and a process ID and lock are assigned.  In the <emphasis>stop</emphasis> case, the server process is traced down and stopped, and the lock and the PID are removed.  Options, such as the <option>daemon</option> option, and functions like <option>killproc</option>, are defined in the <filename>/etc/rc.d/init.d/functions</filename> file.  This setup is specific to the distribution used in this example.  The initscripts on your system might use other functions, defined in other files, or none at all.</para>
<para>Upon success, the script returns an exit code of zero to its parent.</para>
<para>
This script is a fine example of using functions, which make the script easier to read and the work done faster.  Note that they use <command>sh</command> instead of <command>bash</command>, to make them useful on a wider range of systems.  On a Linux system, calling <command>bash</command> as <command>sh</command> results in the shell running in POSIX-compliant mode.</para>

<para>The <command>bash</command> man pages contain more information about combining commands, for- and while-loops and regular expressions, as well as examples.  A comprehensible Bash course for system administrators and power users, with exercises, from the same author as this Introduction to Linux guide, is at <ulink url="training/bash/">http://tille.xalasys.com/training/bash/</ulink>.  Detailed description of Bash features and applications is in the reference guide <ulink url="http://tldp.org/LDP/abs/html/index.html">Advanced Bash Scripting</ulink>.</para>
</sect3>
</sect2>

</sect1>
<sect1 id="sect_07_03"><title>The graphical environment</title>
<sect2 id="sect_07_03_01"><title>Introduction</title>
<para>The average user may not care too much about his login settings, but Linux offers a wide variety of flashy window and desktop managers for use under X, the graphical environment.  The use and configuration of window managers and desktops is straightforward and may even resemble the standard MS Windows, MacIntosh or UNIX CDE environment, although many Linux users prefer flashier desktops and fancier window managers.  We won't discuss the user specific configuration here.  Just experiment and read the documentation using the built-in Help functions these managers provide and you will get along fine.</para>
<para>We will, however, take a closer look at the underlying system.</para>


</sect2>
<sect2 id="sect_07_03_02"><title>The X Window System</title>
<para>The X Window System is a network-transparent window system which runs on a wide range of computing and graphics machines.  X Window System servers run on computers with bitmap displays.  The X server distributes user input to and accepts output requests from several client programs through a variety of different interprocess communication channels.  Although the most common case is for the client programs to be running on the same machine as the server, clients can be run transparently from other machines (including machines with different architectures and operating systems) as well.  We will learn how to do this in <xref linkend="chap_10"></xref> on networking and remote applications.</para>
<para>X supports overlapping hierarchical sub-windows and text and graphics operations, on both monochrome and color displays.  The number of X client programs that use the X server is quite large.  Some of the programs provided in the core X Consortium distribution include:</para>
<itemizedlist>
<listitem><para><command>xterm</command>: a terminal emulator</para></listitem>
<listitem><para><command>twm</command>: a minimalistic window manager</para></listitem>
<listitem><para><command>xdm</command>: a display manager</para></listitem>
<listitem><para><command>xconsole</command>: a console redirect program</para></listitem>
<listitem><para><command>bitmap</command>: a bitmap editor</para></listitem>
<listitem><para><command>xauth</command>, <command>xhost</command> and <command>iceauth</command>: access control programs</para></listitem>
<listitem><para><command>xset</command>, <command>xmodmap</command> and many others: user preference setting programs</para></listitem>
<listitem><para><command>xclock</command>: a clock</para></listitem>
<listitem><para><command>xlsfonts</command> and others: a font displayer, utilities for listing information about fonts, windows and displays</para></listitem>
<listitem><para><command>xfs</command>: a font server</para></listitem>
<listitem><para>...</para></listitem>
</itemizedlist>
<para>We refer again to the man pages of these commands for detailed information.  More explanations on available functions can be found in the <emphasis>Xlib - C language X Interface</emphasis> manual that comes with your X distribution, the <emphasis>X Window System Protocol</emphasis> specification, and the various manuals and documentation of X toolkits.  The <filename>/usr/share/doc</filename> directory contains references to these documents and many others.</para>
<para>Many other utilities, window managers, games, toolkits and gadgets are included as user-contributed software in the X Consortium distribution, or are available using anonymous FTP on the Internet.  Good places to start are <ulink url="http://www.x.org">http://www.x.org</ulink> and <ulink url="http://www.xfree.org">http://www.xfree.org</ulink>.</para>
<para>Furthermore, all your graphical applications, such as your browser, your E-mail program, your image viewing programs, sound playing tools and so on, are all clients to your X server.  Note that in normal operation, that is in graphical mode, X clients and the X server on Linux run on the same machine.</para>
<sect3 id="sect_07_03_02_01"><title>Display names</title>
<para>From the user's perspective, every X server has a <emphasis>display name</emphasis> in the form of:</para> 
<cmdsynopsis><command><parameter>hostname</parameter>:<parameter>displaynumber</parameter>.<parameter>screennumber</parameter></command></cmdsynopsis>
<para>This information is used by the application to determine how it should connect to the X server and which screen it should use by default (on displays with multiple monitors):</para>
<itemizedlist>
<listitem><para><emphasis>hostname</emphasis>: The host name specifies the name of the client machine to which the display is physically connected.  If the host name is not given, the most efficient way of communicating to a server on the same machine will be used.</para></listitem>
<listitem><para><emphasis>displaynumber</emphasis>: The phrase <quote>display</quote> is usually used to refer to a collection of monitors that share a common key board and pointer (mouse, tablet, etc.).  Most workstations  tend  to only have one keyboard, and therefore, only one display.  Larger, multi-user systems, however, frequently have several displays so that more than one person can be doing graphics work at once.  To avoid confusion, each display on a machine is assigned a <emphasis>display number</emphasis> (beginning at 0) when the X server for that display is started.  The display number must always be given in a display name.</para></listitem>
<listitem><para><emphasis>screen number</emphasis>: Some displays share a single keyboard and pointer among two or more monitors.  Since each monitor has its own set of windows, each screen is assigned a <emphasis>screen number</emphasis> (beginning at 0) when the X server for that display is started.  If the screen number is not given, screen 0 will be used.</para></listitem>
</itemizedlist>
<para>On POSIX systems, the default display name is stored in your <varname>DISPLAY</varname> environment variable.  This variable is set automatically by the <command>xterm</command> terminal emulator.  However, when you log into another machine on a network, you might need to set <varname>DISPLAY</varname> by hand to point to your display, see <xref linkend="sect_10_03_03"></xref>.</para>
<para>More information can be found in the X man pages.</para>
</sect3>
<sect3 id="sect_07_03_02_02"><title>Window and desktop managers</title>
<para>The layout of windows on the screen is controlled by special programs called <emphasis>window managers</emphasis>.  Although many window managers will honor geometry specifications as given, others may choose to ignore them (requiring the user to explicitly draw the window's region on the screen with the pointer, for example).</para>
<para>Since window managers are regular (albeit complex) client programs, a variety of different user interfaces can be built.  The X Consortium distribution comes with a window manager named <command>twm</command>, but most users prefer something more fancy when system resources permit.  Sawfish and Enlightenment are popular examples which allow each user to have a desktop according to mood and style.</para>
<para>A desktop manager makes use of one window manager or another for arranging your graphical desktop in a convenient way, with menubars, drop-down menus, informative messages, a clock, a program manager, a file manager and so on.  Among the most popular desktop managers are Gnome and KDE, which both run on almost any Linux distribution and many other UNIX systems.</para>
<tip><title>KDE applications in Gnome/Gnome applications in KDE</title>
<para>You don't need to start your desktop in KDE in order to be able to run KDE applications.  If you have the KDE libraries installed (the <application>kdelibs</application> package), you can run these applications from the Gnome menus or start them from a Gnome terminal.</para>
<para>Running Gnome applications in a KDE environment is a bit more tricky, because there is no single set of base-libraries in Gnome.  However, the dependencies and thus extra packages you might have to install will become clear when running or installing such an application.</para>
</tip> 

</sect3>
</sect2>
<sect2 id="sect_07_03_03"><title>X server configuration</title>
<para>The X distribution that used to come with Linux, <emphasis>XFree86</emphasis>, uses the configuration file <filename>XF86Config</filename> for its initial setup.  This file configures your video card and is searched for in a number of locations, although it is usually in <filename>/etc/X11</filename>.</para>
<para>If you see that the file <filename>/etc/X11/XF86Config</filename> is present on your system, a full description can be found in the Info or man pages about <filename>XF86Config</filename>.</para>
<para>Because of licensing issues with XFree86, newer systems usually come with the <emphasis>X.Org</emphasis> distribution of the X server and tools.  The main configuration file here is <filename>xorg.conf</filename>, usually also in <filename>/etc/X11</filename>.  The file consists of a number of sections that may occur in any order.  The sections contain information about your monitor, your video adaptor, the screen configuration, your keyboard etcetera.  As a user, you needn't worry too much about what is in this file, since everything is normally determined at the time the system is installed.</para>
<para>Should you need to change graphical server settings, however, you can run the configuration tools or edit the configuration files that set up the infrastructure to use the XFree86 server.  See the man pages for more information; your distribution might have its own tools.  Since misconfiguration may result in unreadable garbage in graphical mode, you may want to make a backup copy of the configuration file before attempting to change it, just to be on the safe side.</para>
</sect2>

</sect1>
<sect1 id="sect_07_05"><title>Region specific settings</title>
<sect2 id="sect_07_05_01"><title>Keyboard setup</title>
<para>Setting the keyboard layout is done using the <command>loadkeys</command> command for text consoles.  Use your local X configuration tool or edit the <emphasis>Keyboard</emphasis> section in <filename>XF86Config</filename> manually to configure the layout for graphical mode.  The <varname>XkbdLayout</varname> is the one you want to set:</para>
<screen>
    XkbLayout       "us"
</screen>
<para>This is the default.  Change it to your local settings by replacing the quoted value with any of the names listed in the subdirectories of your <filename>keymaps</filename> directory.  If you can't find the keymaps, try displaying their location on your system issuing the command</para>
<cmdsynopsis><command>locate <filename>keymaps</filename></command></cmdsynopsis>
<para>It is possible to combine layout settings, like in this example:</para>
<screen>
Xkblayout      "us,ru"
</screen>
<para>Make a backup of the <filename>/etc/X11/XF86Config</filename> file before editing it!  You will need to use the <emphasis>root</emphasis> account to do this.</para>
<para>Log out and reconnect in order to reload X settings.</para>
<para>The <application>Gnome Keyboard Applet</application> enables real-time switching between layouts; no special pemissions are needed for using this program.  KDE has a similar tool for switching between keyboard layouts.</para>
</sect2>
<sect2 id="sect_07_05_02"><title>Fonts</title>
<para>Use the <command>setfont</command> tool to load fonts in text mode.  Most systems come with a standard <filename>inputrc</filename> file which enables combining of characters, such as the French <quote>é</quote> (meta characters).  The system admin should then add the line</para>
<screen>
export INPUTRC="/etc/inputrc"
</screen>
<para>to the <filename>/etc/bashrc</filename> file.</para>  

</sect2>
<sect2 id="sect_07_05_03"><title>Date and time zone</title>
<para>Setting time information is usually done at installation time.  After that, it can be kept up to date using an <emphasis>NTP</emphasis> (Network Time Protocol) client.  Most Linux systems run <command>ntpd</command> by default:</para>
<screen>
<prompt>debby:~&gt;</prompt> <command>ps -ef | grep ntpd</command>
ntp      24678     1  0  2002 ?        00:00:33 ntpd -U ntp
</screen>
<para>See your system manual and the documentation that comes with the NTP package.  Most desktop managers include tools to set the system time, providing that you have access to the system administrator's account.</para>
<para>For setting the time zone correct, you can use <command>tzconfig</command> or <command>timezone</command> commands.  Timezone information is usually set during the installation of your machine.  Many systems have distribution-specific tools to configure it, see your system documentation.</para>
</sect2>
<sect2 id="sect_07_05_04"><title>Language</title>
<para>If you'd rather get your messages from the system in Dutch or French, you may want to set the <varname>LANG</varname> and <varname>LANGUAGE</varname> environment variables, thus enabling locale support for the desired language and eventually the fonts related to character conventions in that language.</para>
<para>With most graphical login systems, such as <command>gdm</command> or <command>kdm</command>, you have the possibility to configure these language settings before logging in.</para>
<para>Note that on most systems, the default tends to be <emphasis>en_US.UTF-8</emphasis> these days.  This is not a problem, because systems where this is the default, will also come with all the programs supporting this encoding.  Thus, <command>vi</command> can edit all the files on your system, <command>cat</command> won't behave strange and so on.</para>
<para>Trouble starts when you connect to an older system not supporting this font encoding, or when you open a <emphasis>UTF-8</emphasis> encoded file on a system supporting only 1-byte character fonts.  The <command>recode</command> utility might come in handy to convert files from one character set to another.  Read the man pages for an overview of features and usage.  Another solution might be to temporarily work with another encoding definition, by setting the <varname>LANG</varname> environment variable:</para>
<screen>
<prompt>debby:~&gt;</prompt> <command>acroread /var/tmp/51434s.pdf</command>
Warning: charset "UTF-8" not supported, using "ISO8859-1".
Aborted

<prompt>debby:~&gt;</prompt> <command>set | grep UTF</command>
LANG=en_US.UTF-8

<prompt>debby:~&gt;</prompt> <command>export LANG=en_US</command>

<prompt>debby:~&gt;</prompt> <command>acroread /var/tmp/51434s.pdf</command>
&lt;--new window opens--&gt;
</screen>
</sect2>
<sect2 id="sect_07_05_06"><title>Country-specific Information</title>
<para>The <ulink url="http://www.tldp.org/HOWTO/HOWTO-INDEX/howtos.html">list of HOWTOs</ulink> contains references to Bangla, Belarusian, Chinese, Esperanto, Finnish, Francophone, Hebrew, Hellenic, Latvian, Polish, Portugese, Serbian, Slovak, Slovenian, Spanish, Thai and Turkish localization instructions.</para> 
</sect2>

</sect1>
<sect1 id="sect_07_06"><title>Installing new software</title>
<sect2 id="sect_07_06_01"><title>General</title>
<para>Most people are surprised to see that they have a running, usable computer after installing Linux; most distributions contain ample support for video and network cards, monitors and other external devices, so there is usually no need to install extra drivers.  Also common tools such as office suites, web browsers, E-mail clients and such are included in the main distributions.  Even so, an initial installation might not meet your requirements.</para>
<para>If you just can't find what you need, maybe it is not installed on your system.  It may also be that you have the required software, but it does not do what it is supposed to do.  Remember that Linux moves fast, and software improves on a daily basis.  Don't waste your time troubleshooting problems that might already be resolved.</para>
<para>You can update your system or add packages to it at any time you want.  Most software comes in packages.  Extra software may be found on your installation CDs or on the Internet.  The website of your Linux distribution is a good place to start looking for additional software and contains instructions about how to install it on your type of Linux, see <xref linkend="app1"></xref>.  Always read the documentation that comes with new software, and any installation guidelines the package might contain.  All software comes with a <filename>README</filename> file, which you are very strongly advised to read.</para>
</sect2>

<sect2 id="sect_07_06_02"><title>Package formats</title>
<sect3 id="sect_07_06_02_01"><title>RPM packages</title>
<para>RPM, the RedHat Package Manager, is a powerful package manager that you can use to install, update and remove packages.  It allows you to search for packages and keeps track of the files that come with each package.  A system is built-in so that you can verify the authenticity of packages downloaded from the Internet.  Advanced users can build their own packages with RPM.</para>
<para>An RPM package  consists  of an archive of files and meta-data used to install and erase the archive files. The meta-data includes  helper  scripts,  file attributes,  and  descriptive  information about the package.  Packages come in two varieties: binary packages, used to encapsulate software to be  installed,  and source  packages,  containing  the source code and recipe necessary to produce binary packages.</para>
<para>Many other distributions support RPM packages, among the popular ones RedHat Enterprise Linux, Mandriva (former Mandrake), Fedora Core and SuSE Linux.  Apart from the advice for your distribution, you will want to read <command>man <parameter>rpm</parameter></command>.</para>
<para>Most packages are simply installed with the upgrade option, <option>-U</option>, whether the package is already installed or not.  The RPM package contains a complete version of the program, which overwrites existing versions or installs as a new package.  The typical usage is as follows:</para>
<cmdsynopsis><command>rpm <option>-Uvh</option> <filename>/path/to/rpm-package(s)</filename></command></cmdsynopsis>
<para>The <option>-v</option> option generates more verbose output, and <option>-h</option> makes <command>rpm</command> print a progress bar:</para>
<screen>
<prompt>[root@jupiter tmp]#</prompt> <command>rpm -Uvh totem-0.99.5-1.fr.i386.rpm</command>
Preparing...                ########################################### [100%]
   1:totem                  ########################################### [100%]
<prompt>[root@jupiter tmp]#</prompt>
</screen>
<para>New kernel packages, however, are installed with the install option <option>-i</option>, which does not overwrite existing version(s) of the package. That way, you will still be able to boot your system with the old kernel if the new one does not work.</para>
<para>You can also use <command>rpm</command> to check whether a package is installed on your system:</para>
<screen>
<prompt>[david@jupiter ~]</prompt> <command>rpm -qa | grep vim</command>
vim-minimal-6.1-29
vim-X11-6.1-29
vim-enhanced-6.1-29
vim-common-6.1-29
</screen> 
<para>Or you can find out which package contains a certain file or executable:</para>
<screen>
<prompt>[david@jupiter ~]</prompt> <command>rpm -qf /etc/profile</command>
setup-2.5.25-1

<prompt>[david@jupiter ~]</prompt> <command>which cat</command>
cat is /bin/cat

<prompt>[david@jupiter ~]</prompt> <command>rpm -qf /bin/cat</command>
coreutils-4.5.3-19
</screen>
<para>Note that you need not have access to administrative privileges in order to use <command>rpm</command> to query the RPM database.  You only need to be <emphasis>root</emphasis> when adding, modifying or deleting packages.</para>
<para>Below is one last example, demonstrating how to uninstall a package using <command>rpm</command>:</para>
<screen>
<prompt>[root@jupiter root]#</prompt> <command>rpm -e totem</command>
<prompt>[root@jupiter root]#</prompt>
</screen>
<para>Note that uninstalling is not that verbose by default, it is normal that you don't see much happening.  When in doubt, use <command>rpm <option>-qa</option></command> again to verify that the package has been removed.</para>
<para>RPM can do much more than the couple of basic functions we discussed in this introduction; the <ulink url="http://www.tldp.org/HOWTO/RPM-HOWTO/index.html">RPM HOWTO</ulink> contains further references.</para>
</sect3>
<sect3 id="sect_07_06_02_02"><title>DEB (.deb) packages</title>
<para>This package format is the default on Debian GNU/Linux, where <command>dselect</command>, and, nowadays more common, <command>aptitude</command>, is the standard tool for managing the packages.  It is used to select packages that you want to install or upgrade, but it will also run during the installation of a Debian system and help you to define the access method to use, to list available packages and to configure packages.</para>
<para>The <ulink url="http://debian.org">Debian web site</ulink> contains all information you need, including a <quote>dselect Documentation for Beginners</quote>.</para>
<para>According to the latest news, the Debian package format is becoming more and more popular.  At the time of this writing, 5 of the top-10 distributions use it.  Also <command>apt-get</command> (see <xref linkend="sect_07_06_03_02"></xref> is becoming extremely popular, also on non-DEB systems.</para>
</sect3>
<sect3 id="sect_07_06_02_03"><title>Source packages</title>
<para>The largest part of Linux programs is Free/Open Source, so source packages are available for these programs.  Source files are needed for compiling your own program version.  Sources for a program can be downloaded from its web site, often as a compressed tarball (<filename>program-version.tar.gz</filename> or similar). For RPM-based distributions, the source is often provided in the <filename>program-version.src.rpm</filename>.  Debian, and most distributions based on it, provide themselves the adapted source which can be obtained using <command>apt-get <parameter>source</parameter></command>.</para>
<para>Specific requirements, dependencies and installation instructions are provided in the <filename>README</filename> file.  You will probably need a C compiler, <command>gcc</command>.  This GNU C compiler is included in most Linux systems and is ported to many other platforms.</para>
</sect3>
</sect2>
<sect2 id="sect_07_06_03"><title>Automating package management and updates</title>
<sect3 id="sect_07_06_03_01"><title>General remarks</title>
<para>The first thing you do after installing a new system is applying updates;
this applies to all operating systems and Linux is not different.</para>
<para>The updates for most Linux systems can usually be found on a nearby site mirroring your distribution.  Lists of sites offering this service can be found at your distribution's web site, see <xref linkend="app1"></xref>.</para>
<para>Updates should be applied regularly, daily if possible - but every couple of weeks would be a reasonable start.  You really should try to have the most recent version of your distribution, since Linux changes constantly.  As we said before, new features, improvements and bug fixes are supplied at a steady rhythm, and sometimes important security problems are addressed.</para>
<para>The good news is that most Linux distributions provide tools so that you don't have to upgrade tens of packages daily by hand.  The following sections give an overview of <quote>package manager managers.</quote>  There is much more to this subject, even regular updates of source packages is manageable automatically; we only list the most commonly known systems.  Always refer to the documentation for your specific distribution for advised procedures.</para>
</sect3>
<sect3 id="sect_07_06_03_02"><title>APT</title>
<para>The Advanced Package Tool is a management system for software packages.  The command line tool for handling packages is <command>apt-get</command>, which comes with an excellent man page describing how to install and update packages and how to upgrade singular packages or your entire distribution.  APT has its roots in the Debian GNU/Linux distribution, where it is the default manager for the Debian packages.  APT has been ported to work with RPM packages as well.  The main advantage of APT is that it is free and flexible to use.  It will allow you to set up systems similar to the distribution specific (and in some cases commercial) ones listed in the next sections.</para>
<para>Generally, when first using <command>apt-get</command>, you will need to get an index of the available packages.  This is done using the command</para>
<cmdsynopsis><command>apt-get <parameter>update</parameter></command></cmdsynopsis>
<para>After that, you can use <command>apt-get</command> to upgrade your system:</para>
<cmdsynopsis><command>apt-get <parameter>upgrade</parameter></command></cmdsynopsis>
<para>Do this often, it's an easy way to keep your system up-to-date and thus safe.</para>
<para>Apart from this general usage, <command>apt-get</command> is also very fast for installing individual packages.  This is how it works:</para>
<screen>
<prompt>[david@jupiter ~]</prompt> <command>su - -c "apt-get install xsnow"</command>
Password:
Reading Package Lists... Done
Building Dependency Tree... Done
The following NEW packages will be installed:
  xsnow
0 packages upgraded, 1 newly installed, 0 removed and 3 not upgraded.
Need to get 33.6kB of archives.
After unpacking 104kB of additional disk space will be used.
Get:1 http://ayo.freshrpms.net redhat/9/i386/os xsnow 1.42-10 [33.6kB]
Fetched 33.6kB in 0s (106kB/s)
Executing RPM (-Uvh)...
Preparing...                ########################################### [100%]
   1:xsnow                  ########################################### [100%]
</screen>
<para>Note the <option>-c</option> option to the <command>su</command> command, which indicates to the root shell to only execute this command, and then return to the user's environment.  This way, you cannot forget to quit the root account.</para>
<para>If there are any dependencies on other packages, <command>apt-get</command> will download and install these supporting packages.</para>
<para>More information can be found in the <ulink url="http://www.debian.org/doc/user-manuals#apt-howto">APT HOWTO</ulink>.</para>
</sect3>
<sect3 id="sect_07_06_03_03"><title>Systems using RPM packages</title>
<para><application>Update Agent</application>, which originally only supported RedHat RPM packages, is now ported to a wider set of software, including non-RedHat repositories.  This tool provides a complete system for updating the RPM packages on a RedHat or Fedora Core system.  On the command line, type <command>up2date</command> to update your system.  On the desktop, by default a small icon is activated, telleng you whether or not there are updates available for your system.</para>
<para><application>Yellowdog's Updater Modified</application> (<command>yum</command>) is another tool that recently became more popular.  It is an interactive but automated update program for installing, updating or removing RPM packages on a system.  It is the tool of choice on Fedora systems.</para>
<para>On SuSE Linux, everything is done with <application>YaST</application>, Yet another Setup Tool, which supports a wide variety of system administration tasks, among which updating RPM packages.  Starting from SuSE Linux 7.1 you can also upgrade using a web interface and <application>YOU</application>, Yast Online Update.</para>
<para>Mandrake Linux and Mandriva provide so-called URPMI tools, a set of wrapper programs that make installing new software easier for the user.  These tools combine with <application>RPMDrake</application> and <application>MandrakeUpdate</application> to provide everything needed for smooth install and uninstall of software packages.  MandrakeOnline offers an extended range of services and can automatically notify administrators when updates are available for your particular Mandrake system.  See <command>man <parameter>urpmi</parameter></command>, among others, for more info.</para>
<para>Also the KDE and Gnome desktop suites have their own (graphical) versions of package managers.</para>
</sect3>

</sect2>

<sect2 id="sect_07_06_04"><title>Upgrading your kernel</title>
<para>Most Linux installations are fine if you periodically upgrade your distribution.  The upgrade procedure will install a new kernel when needed and make all necessary changes to your system.  You should only compile or install a new kernel manually if you need kernel features that are not supported by the default kernel included in your Linux distribution.</para>
<para>Whether compiling your own optimized kernel or using a pre-compiled kernel package, install it in co-existence with the old kernel until you are sure that everything works according to plan.</para>
<para>Then create a dual boot system that will allow you to choose which kernel to boot by updating your boot loader configuration file <filename>grub.conf</filename>.  This is a simple example:</para>
<screen>
# grub.conf generated by anaconda
#
# Note that you do not have to rerun grub after making config changes. 
# NOTICE:  You have a /boot partition.  This means that
#          all kernel and initrd paths are relative to /boot/, e.g.
#          root (hd0,0)
#          kernel /vmlinuz-version ro root=/dev/hde8
#          initrd /initrd-version.img
#boot=/dev/hde
default=0
timeout=10
splashimage=(hd0,0)/grub/splash.xpm.gz
title Red Hat Linux new (2.4.9-31)
	root (hd0,0)
	kernel /vmlinuz-2.4.9-31 ro root=/dev/hde8
	initrd /initrd-2.4.9-31.img
title old-kernel
        root (hd0,0)
        kernel /vmlinuz-2.4.9-21 ro root=/dev/hde8
        initrd /initrd-2.4.9-21.img
</screen>
<para>After the new kernel has proven to work, you may remove the lines for the old one from the GRUB config file, although it is best to wait a couple of days just to be sure.</para>
</sect2>
<sect2 id="sect_07_06_05"><title>Installing extra packages from the installation CDs</title>
<sect3 id="sect_07_06_05_01"><title>Mounting a CD</title>
<para>This is basically done in the same way as installing packages manually, except that you have to append the file system of the CD to your machine's file system to make it accessible.  On most systems, this will be done automatically upon insertion of a CD in the drive because the <command>automount</command> daemon is started up at boot time.  If your CD is not made available automatically, issue the <command>mount</command> command in a terminal window.  Depending on your actual system configuration, a line similar to this one will usually do the trick:</para>
<para><cmdsynopsis><command>mount <filename>/dev/cdrom /mnt/cdrom</filename></command></cmdsynopsis></para>
<para>On some systems, only <emphasis>root</emphasis> can mount removable media; this depends on the configuration.</para>
<para>For automation purposes, the CD drive usually has an entry in <filename>/etc/fstab</filename>, which lists the file systems and their mount points, that make up your file system tree.  This is such a line:</para>
<screen>
<prompt>[david@jupiter ~]</prompt> <command>grep cdrom /etc/fstab</command>
/dev/cdrom	/mnt/cdrom	iso9660		noauto,owner,ro 0 0
</screen>
<para>This indicates that the system will understand the command <command>mount <filename>/mnt/cdrom</filename></command>.  The <option>noauto</option> option means that on this system, CDs are not mounted at boot time.</para>
<para>You may even try to right click on the CD icon on your desktop to mount the CD if your file manager doesn't do it for you.  You can check whether it worked issuing the <command>mount</command> command with no arguments:</para>
<screen>
<prompt>[david@jupiter ~]</prompt> <command>mount | grep cdrom</command>
/dev/cdrom on /mnt/cdrom type iso9660 (ro,nosuid,nodev)
</screen>
</sect3>
<sect3 id="sect_07_06_05_02"><title>Using the CD</title>
<para>After mounting the CD, you can change directories, usually to the mount point <filename>/mnt/cdrom</filename>, where you can access the content of the CD-ROM.  Use the same commands for dealing with files and directories as you would use for files on the hard disk.</para>
</sect3>
<sect3 id="sect_07_06_05_03"><title>Ejecting the CD</title>
<para>In order to get the CD out of the drive after you've finished using it, the file system on the CD should be unused.  Even being in one of the subdirectories of the mount point, <filename>/mnt/cdrom</filename> in our example, will be considered as <quote>using the file system</quote>, so you should get out of there.  Do this for instance by typing <command>cd</command> with no arguments, which will put you back in your home directory.  After that, you can either use the command</para>
<cmdsynopsis><command>umount <filename>/mnt/cdrom</filename></command></cmdsynopsis>
<para>or</para>
<cmdsynopsis><command>eject <parameter>cdrom</parameter></command></cmdsynopsis>
<warning><title>Blocked drives</title>
<para><emphasis>NEVER</emphasis> force the drive.  The trick with the paperclip is a bad idea, because this will eventually expunge the CD, but your system will think the CD is still there because normal procedures were not followed.  Chances are likely that you will have to reboot to get the system back in a consistent state.</para>
<para>If you keep getting <quote>device busy</quote> messages, check first that all shell sessions have left the CD file system and that no graphical applications are using it anymore.  When in doubt, use the <command>lsof</command> tool to trace down the process(es) still using the CD resource.</para>  
</warning>
</sect3>
</sect2>

</sect1>
<sect1 id="sect_07_07"><title>Summary</title>
<para>When everything has its place, that means already half the work is done.</para>
<para>While keeping order is important, it is equally important to feel at home in your environment, whether text or graphical.  The text environment is controlled through the shell setup files.  The graphical environment is primarily dependent on the X server configuration, on which a number of other applications are built, such as window and desktop managers and graphical applications, each with their own config files.  You should read the system and program specific documentation to find out about how to configure them.</para>
<para>Regional settings such as keyboard setup, installing appropriate fonts and language support are best done at installation time.</para>
<para>Software is managed either automatically or manually using a package system.</para>

</sect1>
<sect1 id="sect_07_08"><title>Exercises</title>
<sect2 id="sect_07_08_01"><title>Shell environment</title>
<itemizedlist>
<listitem><para>Print out your environment settings.  Which variable may be used to store the CPU type of your machine?</para></listitem>
<listitem><para>Make a script that can say something on the lines of <quote>hello, world.</quote>  Give it appropriate permissions so it can be run.  Test your script.</para></listitem>
<listitem><para>Create a directory in your home directory and move the script to the new directory.  Permanently add this new directory to your search path.  Test that the script can be executed without giving a path to its actual location.</para></listitem>
<listitem><para>Create subdirectories in your home directory to store various files, for instance a directory <filename>music</filename> to keep audio files, a directory <filename>documents</filename> for your notes, and so on.  And use them!</para></listitem>
<listitem><para>Create a personalized prompt.</para></listitem>
<listitem><para>Display limits on resource usage.  Can you change them?</para></listitem>
<listitem><para>Try to read compressed man pages without decompressing them first.</para></listitem>
<listitem><para>Make an alias <command>lll</command> which actually executes <command>ls <option>-la</option></command>.</para></listitem>
<listitem><para>Why does the command <command>tail <filename>testfile</filename> &gt; <filename>testfile</filename></command> not work?</para></listitem>
<listitem><para>Mount a data CD, such as your Linux installation CD, and have a look around.  Don't forget to unmount when you don't need it anymore.</para></listitem>
<listitem><para>The script from <xref linkend="sect_07_02_07_02"></xref> is not perfect.  It generates errors for files that are directories.  Adapt the script so that it only selects plain files for copying.  Use <command>find</command> to make the selection.  Do not forget to make the script executable before you try to run it.</para></listitem>
</itemizedlist>
</sect2>
<sect2 id="sect_07_08_02"><title>Graphical environment</title>

<itemizedlist>
<listitem><para>Try all the mouse buttons in different regions (terminal, background, task bar).</para></listitem>
<listitem><para>Explore the menus.</para></listitem>
<listitem><para>Customize your terminal window.</para></listitem>
<listitem><para>Use the mouse buttons to copy and paste text from one terminal to another.</para></listitem>
<listitem><para>Find out how to configure your window manager; try different workspaces (virtual screens).</para></listitem>
<listitem><para>Add an applet, such as a load monitor, to the task bar.</para></listitem>
<listitem><para>Apply a different theme.</para></listitem>
<listitem><para>Enable the so-called <emphasis>sloppy</emphasis> focus - this is when a window is activated by just moving the mouse over it, so that you do not need to click the window in order to be able to use it.</para></listitem>
<listitem><para>Switch to a different window manager.</para></listitem>
<listitem><para>Log out and select a different session type, like KDE if you were using Gnome before.  Repeat the previous steps.</para></listitem>
</itemizedlist>
</sect2>

</sect1>
</chapter>

    
<chapter id="chap_08">
<title>Printers and printing</title>
<abstract>
<para>In this chapter we will learn more about printers and printing files.  After reading this part, you will be able to:</para>
<para>
<itemizedlist>
<listitem><para>Format documents</para></listitem>
<listitem><para>Preview documents before sending them to the printer</para></listitem>
<listitem><para>Choose a good printer that works with your Linux system</para></listitem>
<listitem><para>Print files and check on printer status</para></listitem>
<listitem><para>Troubleshoot printing problems</para></listitem>
<listitem><para>Find necessary documentation to install a printer</para></listitem>
</itemizedlist>
</para>
</abstract>
<sect1 id="sect_08_01"><title>Printing files</title>
<sect2 id="sect_08_01_01"><title>Command line printing</title>
<sect3 id="sect_08_01_01_01"><title>Getting the file to the printer</title>
<para>Printing from within an application is very easy, selecting the <menuchoice><guimenuitem>Print</guimenuitem></menuchoice> option from the menu.</para>
<para>From the command line, use the <command>lp</command> or <command>lpr</command> command.</para>

<cmdsynopsis><command>lp <filename>file(s)</filename></command></cmdsynopsis>
<cmdsynopsis><command>lpr <filename>file(s)</filename></command></cmdsynopsis>

<para>These commands can read from a pipe, so you can print the output of commands using</para>

<cmdsynopsis><command>command | lp</command></cmdsynopsis>

<para>There are many options available to tune the page layout, the number of copies, the printer that you want to print to if you have more than one available, paper size, one-side or double-sided printing if your printer supports this feature, margins and so on.  Read the man pages for a complete overview.</para>
</sect3>

<sect3 id="sect_08_01_01_02"><title>Status of your print jobs</title>
<!--FIXME check if this is still accurate-->

<para>Once the file is accepted in the print queue, an identification number for the print job is assigned:</para>



<screen>
<prompt>davy:~&gt;</prompt> <command>lp /etc/profile</command>
request id is davy@blob+253
</screen>
<para>To view (query) the print queue, use the <command>lpq</command> or <command>lpstat</command> command.  When entered without arguments, it displays the contents of the default print queue.</para>
<screen>
<prompt>davy:~&gt;</prompt> <command>lpq</command>
Printer: lp@blob
 Queue: no printable jobs in queue
 Status: job 'cfA284blob.somewhere.org' removed at 11:02:47.098
</screen>

</sect3>

<sect3 id="sect_08_01_01_03"><title>Status of your printer</title>

<para>Which is the default printer on a system that has access to multiple printers?</para>

<cmdsynopsis><command>lpstat <option>-d</option></command></cmdsynopsis>

<para>What is the status of my printer(s)?</para>

<cmdsynopsis><command>lpstat <option>-p</option></command></cmdsynopsis>

<!--FIXME: add example-->

</sect3>

<sect3 id="sect_08_01_01_04"><title>Removing jobs from the print queue</title>
<para>If you don't like what you see from the status commands, use <command>lprm</command> or <command>cancel</command> to delete jobs.  Use the dash option (<option>-</option> to delete all jobs which you submitted:</para>

<cmdsynopsis><command>lprm <option>-</option></command></cmdsynopsis>
<cmdsynopsis><command>cancel <option>-</option></command></cmdsynopsis>

<para>If you only want to cancel one job, use the number of that job as an argument to <command>lprm</command>:</para>
<screen>
<!--FIXME: add example-->
</screen>
<para>In larger environments, <command>lpc</command> may be used to control multiple printers.  See the Info or man pages on each command.</para>

<para>There are many GUI print tools used as a front-end to <command>lp</command>, and most graphical applications have a print function that uses <command>lp</command>.  See the built-in Help functions and program specific documentation for more.</para>
<note><title>Why are there two commands for every task related to printing?</title>
<para>Printing on UNIX and alikes has a long history.  There used to be two rather different approaches: the BSD-style printing and the SystemV-style printing.  For compatibility, Linux with CUPS supports the commands from both styles.  Also note that <command>lp</command> does not behave exactly like <command>lpr</command>, <command>lpq</command> has somewhat different options than <command>lpstat</command> and <command>lprm</command> is almost, but not quite, like <command>cancel</command>.  Which one you use is not important, just pick the commands that you are comfortable with, or that you may know from previous experiences with UNIX-like systems.</para>

</note>
</sect3>
</sect2>
<sect2 id="sect_08_01_02"><title>Formatting</title>
<sect3 id="sect_08_01_02_01"><title>Tools and languages</title>
<para>If we want to get something sensible out of the printer, files should be formatted first.  Apart from an abundance of formatting software, Linux comes with the basic UNIX formatting tools and languages.</para>
<para>Modern Linux systems support direct printing, without any formatting by the user, of a range of file types: text, PDF, PostScript and several image formats like PNG, JPEG, BMP and GIF.</para>

<para>For those file formats that do need formatting, Linux comes with a lot of formatting tools, such as the <command>pdf2ps</command>, <command>fax2ps</command> and <command>a2ps</command> commands, that convert other formats to PostScript.</para>
<para>Apart from these command line tools there are a lot of graphical word processing programs.  Several complete office suites are available, many are free.  These do the formatting automatically upon submission of a print job.  Just to name a few: OpenOffice, KOffice, AbiWord, WordPerfect, etc.</para>



<para>The following are common languages in a printing context:</para>

<itemizedlist>
<listitem><para><command>groff</command>: GNU version of the UNIX <command>roff</command> command.  It is a front-end to the groff document formatting system.  Normally it runs the <command>troff</command> command and a post-processor appropriate for the selected device.  It allows generation of PostScript files.</para></listitem>
<listitem><para><emphasis>TeX</emphasis> and the macro package <emphasis>LaTeX</emphasis>: one of the most widely used markup languages on UNIX systems.  Usually invoked as <command>tex</command>, it formats files and outputs a corresponding device-independent representation of the typeset document.</para>
<para>Technical works are <emphasis>still</emphasis> frequently written in LaTeX because of its support for mathematic formulas, although efforts are being made at <ulink url="http://www.w3.org">W3C</ulink> (the World Wide Web Consortium) to include this feature in other applications.</para></listitem>
<listitem><para>SGML and XML: Free parsers are available for UNIX and Linux.  XML is the next generation SGML, it forms the basis for DocBook XML, a document system (this book is written in XML, for instance).</para></listitem>
</itemizedlist>


<tip><title>Printing documentation</title>
<para>The man pages contain pre-formatted <command>troff</command> data which has to be formatted before it can roll out of your printer.  Printing is done using the <option>-t</option> option to the <command>man</command> command:</para>
<cmdsynopsis><command>man <option>-t</option> <parameter>command</parameter> &gt; <filename>man-command.ps</filename></command></cmdsynopsis>
<para>Then print the PostScript file.  If a default print destination is configured for your system/account, you can just issue the command <command>man <option>-t</option> <parameter>command</parameter></command> to send the formatted page to the printer directly.</para><para>For printing Info pages, refer to the Info pages on <command>info</command> (you will need the source code of the command).</para></tip>
</sect3>
<sect3 id="sect_08_01_02_02"><title>Previewing formatted files</title>
<para>Anything that you can send to the printer can normally be sent to the screen as well.  Depending on the file format, you can use one of these commands:</para>
<itemizedlist>
<listitem><para>PostScript files: with the <command>gv</command> (GhostView) command.</para></listitem>
<listitem><para>TeX dvi files: with <command>xdvi</command>.</para></listitem>
<listitem><para>PDF files: <command>xpdf</command> or Adobe's viewer, <command>acroread</command>, which is also available for free.</para></listitem>
<listitem><para>From within applications, such as Firefox or OpenOffice, you can usually select <menuchoice><guimenu>Print Preview</guimenu></menuchoice> from one of the menus.</para></listitem>
</itemizedlist>
</sect3>
</sect2>

</sect1>
<sect1 id="sect_08_02"><title>The server side</title>
<sect2 id="sect_08_02_01"><title>General</title>
<para>Until a couple of years ago, the choice for Linux users was simple:  everyone ran the same old LPD from BSD's Net-2 code.  Then LPRng became more popular, but nowadays most modern Linux distributions use <ulink url="http://www.cups.org">CUPS</ulink>, the Common UNIX Printing System.  <application>CUPS</application> is an implementation of the Internet Printing Protocol (IPP), an HTTP-like RFC standard replacement protocol for the venerable (and clunky) LPD protocol.  CUPS is distributed under the GNU Public License.  CUPS is also the default print system on MacOS X.</para>
</sect2>
<sect2 id="sect_08_02_02"><title>Graphical printer configuartion</title>
<para>Most distributions come with a GUI for configuring networked and local (parallel port or USB) printers.  They let you choose the printer type from a list and allow easy testing.  You don't have to bother about syntax and location of configuration files.  Check your system documentation before you attempt installing your printer.</para>
<para>CUPS can also be configured using a web interface that runs on port 631 on your computer.  To check if this feature is enabled, try browsing to <ulink url="localhost:631/help"></ulink>.</para>
</sect2>
<sect2 id="sect_08_02_04"><title>Buying a printer for Linux</title>
<para>As more and more printer vendors make drivers for CUPS available, CUPS will allow easy connection with almost any printer that you can plug into a serial, parallel, or USB port, plus any printer on the network.  CUPS will ensure a uniform presentation to you and your applications of all different types of printers.</para>
<para>Printers that only come with a Win9x driver could be problematic if they have no other support.  Check with the hardware compatibility HOWTO when in doubt.</para>
<para>In the past, your best choice would have been a printer with native PostScript support in the firmware, since nearly all UNIX or Linux software producing printable output, produces it in PostScript, the publishing industry's printer control language of choice.  PostScript printers are usually a bit more expensive, but it is a device-independent, open programming language and you're always 100% sure that they will work.  These days, however, the importance of this rule of thumb is dwindling.</para>
</sect2>

</sect1>
<sect1 id="sect_08_03"><title>Print problems</title>
<para>In this section, we will discuss what you can do as a user when something goes wrong.  We won't discuss any problems that have to do with the daemon-part of the printing service, as that is a task for system administrators.</para>
<sect2 id="sect_08_03_01"><title>Wrong file</title>
<para>If you print the wrong file, the job may be canceled using the command <command>lprm <parameter>jobID</parameter></command>, where jobID is in the form <emphasis>printername-printjobnumber</emphasis> (get it from information displayed by <command>lpq</command> or <command>lpstat</command>).  This will work when other jobs are waiting to be printed in this printer's queue.  However, you have to be really quick if you are the only one using this printer, since jobs are usually spooled and send to the printer in only seconds.  Once they arrive on the printer, it is too late to remove jobs using Linux tools.</para>
<para>What you can try in those cases, or in cases where the wrong print driver is configured and only rubbish comes out of the printer, is power off the printer.  However, that might not be the best course of action, as you might cause paper jams and other irregularities.</para>
</sect2>
<sect2 id="sect_08_03_02">
<title>My print hasn't come out</title>
<para>Use the <command>lpq</command> command and see if you can spot your job:</para>
<screen>
<prompt>elly:~&gt;</prompt> <command>lpq</command>
Printer: lp@blob
 Queue: 2 printable jobs
 Server: pid 29998 active
 Unspooler: pid 29999 active
 Status: waiting for subserver to exit at 09:43:20.699
 Rank   Owner/ID             Class Job Files          Size Time
1      elly@blob+997           A   997 (STDIN)         129 09:42:54
2      elly@blob+22            A    22 /etc/profile    917 09:43:20
</screen>
<para>Lots of printers have web interfaces these days, which can display status information by typing the printer's IP address in your web browser:</para>
<figure><title>Printer Status through web interface</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/brother-webinterface.eps" format="EPS"></imagedata>
</imageobject>
<imageobject>
<imagedata fileref="images/brother-webinterface.png" format="PNG"></imagedata>
</imageobject>
<textobject>
<phrase>This GUI shows printer status using your browser.  There is a trafic light indicating the status, and choices for managing the printer: view config, control panel, printer settings, online support and admin settings.</phrase>
</textobject>
</mediaobject>
</figure>

<note><title>CUPS web interface versus printer web interface</title>
<para>Note that this is not the CUPS web interface and only works for printers supporting this feature.  Check the documentation of your printer.</para></note>


<para>If your job ID is not there and not on the printer, contact your system administrator.  If your job ID is listed in the output, check that the printer is currently printing.  If so, just wait, your job will get done in due time.</para>
<para>If the printer is not printing, check that it has paper, check the physical connections to both electricity and data network.  If that's okay, the printer may need restarting.  Ask your system admin for advice.</para>
<para>In the case of a network printer, try printing from another host.  If the printer is reachable from your own host (see <xref linkend="chap_10"></xref> for the <command>ping</command> utility), you may try to put the formatted file on it, like <filename>file.ps</filename> in case of a PostScript printer, using an FTP client.  If that works, your print system is misconfigured.  If it doesn't work, maybe the printer doesn't understand the format you are feeding it.</para>
<para>The <ulink url="http://www.linuxprinting.org">GNU/Linux Printing site</ulink> contains more tips and tricks.</para>
</sect2>

</sect1>
<sect1 id="sect_08_05"><title>Summary</title>
<para>The Linux print service comes with a set of printing tools based on the standard UNIX LPD tools, whether it be the SystemV or BSD implementation.  Below is a list of print-related commands.</para>
<table frame="all"><title>Printing related commands</title>
<tgroup align="left" cols="2" colsep="1" rowsep="1">
<thead>
<row>
<entry>Command</entry><entry>Meaning</entry>
</row>
</thead>
<tbody>
<row>
<entry><command>lpr</command> or <command>lp</command></entry><entry>Print file</entry>
</row>
<row>
<entry><command>lpq</command> or <command>lpstat</command></entry><entry>Query print queue</entry>
</row>
<row>
<entry><command>lprm</command> or <command>cancel</command></entry><entry>Remove print job</entry>
</row>
<row>
<entry><command>acroread</command></entry><entry>PDF viewer</entry>
</row>
<row>
<entry><command>groff</command></entry><entry>Formatting tool</entry>
</row>
<row>
<entry><command>gv</command></entry><entry>PostScript viewer</entry>
</row>
<row>
<entry><command>printconf</command></entry><entry>Configure printers</entry>
</row>
<row>
<entry><command>xdvi</command></entry><entry>DVI viewer</entry>
</row>
<row>
<entry><command>xpdf</command></entry><entry>PDF viewer</entry>
</row>
<row>
<entry><command>*2ps</command></entry><entry>Convert file to PostScript</entry>
</row>
</tbody>
</tgroup>
</table>

</sect1>
<sect1 id="sect_08_06"><title>Exercises</title>
<para>Configuring and testing printers involves being in the possession of one, and having access to the <emphasis>root</emphasis> account.  If so, you may try:</para>
<itemizedlist>
<listitem><para>Installing the printer using the GUI on your system.</para></listitem>
<listitem><para>Printing a test page using the GUI.</para></listitem>
<listitem><para>Printing a test page using the <command>lp</command> command.</para></listitem>
<listitem><para>Print from within an application, for example Mozilla or OpenOffice, by choosing <menuchoice><guimenu>File</guimenu><guimenuitem>Print</guimenuitem></menuchoice> from the menu.</para></listitem>
<listitem><para>Disconnect the printer from the network or the local machine/print-server.  What happens when you try to print something?</para></listitem>
</itemizedlist>
<para>The following exercises can be done without printer or root access.</para>
<itemizedlist>
<listitem><para>Try to make PostScript files from different source files, (e.g. HTML, PDF, man pages).  Test the results with the <command>gv</command> viewer.</para></listitem>
<listitem><para>Check that the print daemon is running.</para></listitem>
<listitem><para>Print the files anyway.  What happens?</para></listitem>
<listitem><para>Make a PostScript file using Mozilla.  Test it with <command>gv</command>.</para></listitem>
<listitem><para>Convert it to PDF format.  Test with <command>xpdf</command>.</para></listitem>
<listitem><para>How would you go about printing a GIF file from the command line?</para></listitem>
<listitem><para>Use <command>a2ps</command> to print the <filename>/etc/profile</filename> file to an output file.  Test again with <command>gv</command>.  What happens if you don't specify an output file?</para></listitem>
</itemizedlist>

</sect1>
</chapter>
 
<chapter id="chap_09">
<title>Fundamental Backup Techniques</title>
<abstract><para>Accidents will happen sooner or later.  In this chapter, we'll discuss how to get data to a safe place using other hosts, floppy disks, CD-ROMs and tapes.  We will also discuss the most popular compressing and archiving commands.</para>
<para>Upon completion of this chapter, you will know how to:</para>
<para>
<itemizedlist>
<listitem><para>Make, query and unpack file archives</para></listitem>
<listitem><para>Handle floppy disks and make a boot disk for your system</para></listitem>
<listitem><para>Write CD-ROMs</para></listitem>
<listitem><para>Make incremental backups</para></listitem>
<listitem><para>Create Java archives</para></listitem>
<listitem><para>Find documentation to use other backup devices and programs</para></listitem>
</itemizedlist>
</para>

</abstract>

<sect1 id="sect_09_01"><title>Introduction</title>
<para>Although Linux is one of the safest operating systems in existence, and even if it is designed to keep on going, data can get lost.  Data loss is most often the consequence of user errors, but occasionally a system fault, such as a power failure, is the cause, so it's always a good idea to keep an extra copy of sensitive and/or important data.</para>
<sect2 id="sect_09_01_01"><title>Preparing your data</title>
<sect3 id="sect_09_01_01_01"><title>Archiving with tar</title>
<para>In most cases, we will first collect all the data to back up in a single archive file, which we will compress later on.  The process of archiving involves concatenating all listed files and taking out unnecessary blanks.  In Linux, this is commonly done with the <command>tar</command> command.  <command>tar</command> was originally designed to archive data on tapes, but it can also make archives, known as <emphasis>tarballs</emphasis>.</para>
<para><command>tar</command> has many options, the most important ones are cited below:</para>
<itemizedlist>
<listitem><para><option>-v</option>: verbose</para></listitem>
<listitem><para><option>-t</option>: test, shows content of a tarball</para></listitem>
<listitem><para><option>-x</option>: extract archive</para></listitem>
<listitem><para><option>-c</option>: create archive</para></listitem>
<listitem><para><option>-f</option> <filename>archivedevice</filename>: use <filename>archivedevice</filename> as source/destination for the tarball, the device defaults to the first tape device (usually <filename>/dev/st0</filename> or something similar)</para></listitem>
<listitem><para><option>-j</option>: filter through <command>bzip2</command>, see <xref linkend="sect_09_01_01_02"></xref></para></listitem>
</itemizedlist>
<para>It is common to leave out the dash-prefix with <command>tar</command> options, as you can see from the examples below.</para>
<note><title>Use GNU tar for compatibility</title>
<para>The archives made with a proprietary <command>tar</command> version on one system, may be incompatible with <command>tar</command> on another proprietary system.  This may cause much headaches, such as if the archive needs to be recovered on a system that doesn't exist anymore.  Use the GNU <command>tar</command> version on all systems to prevent your system admin from bursting into tears.  Linux always uses GNU tar.  When working on other UNIX machines, enter <command>tar <option>--help</option></command> to find out which version you are using.  Contact your system admin if you don't see the word GNU somewhere.</para></note>
<para>In the example below, an archive is created and unpacked.</para>
<screen>
<prompt>gaby:~&gt;</prompt> <command>ls images/</command>
me+tux.jpg  nimf.jpg

<prompt>gaby:~&gt;</prompt> <command>tar cvf images-in-a-dir.tar images/</command>
images/
images/nimf.jpg
images/me+tux.jpg

<prompt>gaby:~&gt;</prompt> <command>cd images</command>

<prompt>gaby:~/images&gt;</prompt> <command>tar cvf images-without-a-dir.tar *.jpg</command>
me+tux.jpg
nimf.jpg

<prompt>gaby:~/images&gt;</prompt> <command>cd</command>

<prompt>gaby:~&gt;</prompt> <command>ls */*.tar</command>
images/images-without-a-dir.tar

<prompt>gaby:~&gt;</prompt> <command>ls *.tar</command>
images-in-a-dir.tar 

<prompt>gaby:~&gt;</prompt> <command>tar xvf images-in-a-dir.tar </command>
images/
images/nimf.jpg
images/me+tux.jpg

<prompt>gaby:~&gt;</prompt> <command>tar tvf images/images-without-dir.tar </command>
-rw-r--r-- gaby/gaby  42888 1999-06-30 20:52:25 me+tux.jpg
-rw-r--r-- gaby/gaby   7578 2000-01-26 12:58:46 nimf.jpg

<prompt>gaby:~&gt;</prompt> <command>tar xvf images/images-without-a-dir.tar </command>
me+tux.jpg
nimf.jpg

<prompt>gaby:~&gt;</prompt> <command>ls *.jpg</command>
me+tux.jpg  nimf.jpg
</screen>
<para>This example also illustrates the difference between a tarred directory and a bunch of tarred files.  It is advisable to only compress directories, so files don't get spread all over when unpacking the tarball (which may be on another system, where you may not know which files where already there and which are the ones from the archive).</para>
<para>When a tape drive is connected to your machine and configured by your system administrator, the file names ending in <filename>.tar</filename> are replaced with the tape device name, for example:</para>
<para><command>tar <option>cvf</option> <filename>/dev/tape</filename> <filename>mail/</filename></command></para>
<para>The directory <filename>mail</filename> and all the files it contains are compressed into a file that is written on the tape immediately.  A content listing is displayed because we used the verbose option.</para>
</sect3>
<sect3 id="sect_09_01_01_02"><title>Incremental backups with tar</title>
<para>The <command>tar</command> tool supports the creation of incremental backups, using the <option>-N</option> option.  With this option, you can specify a date, and <command>tar</command> will check modification time of all specified files against this date.  If files are changed more recent than date, they will be included in the backup.  The example below uses the timestamp on a previous archive as the date value.  First, the initial archive is created and the timestamp on the initial backup file is shown.  Then a new file is created, upon which we take a new backup, containing only this new file:</para>
<screen>
<prompt>jimmy:~&gt;</prompt> <command>tar cvpf /var/tmp/javaproggies.tar java/*.java</command>
java/btw.java
java/error.java
java/hello.java
java/income2.java
java/income.java
java/inputdevice.java
java/input.java
java/master.java
java/method1.java
java/mood.java
java/moodywaitress.java
java/test3.java
java/TestOne.java
java/TestTwo.java
java/Vehicle.java

<prompt>jimmy:~&gt;</prompt> <command>ls -l /var/tmp/javaproggies.tar</command>
-rw-rw-r-- 1 jimmy   jimmy   10240 Jan 21 11:58 /var/tmp/javaproggies.tar

<prompt>jimmy:~&gt;</prompt> <command>touch java/newprog.java</command>

<prompt>jimmy:~&gt;</prompt> <command>tar -N /var/tmp/javaproggies.tar \
-cvp /var/tmp/incremental1-javaproggies.tar java/*.java 2&gt; /dev/null</command>
java/newprog.java

<prompt>jimmy:~&gt;</prompt> <command>cd /var/tmp/</command>

<prompt>jimmy:~&gt;</prompt> <command>tar xvf incremental1-javaproggies.tar</command>
java/newprog.java
</screen>
<para>Standard errors are redirected to <filename>/dev/null</filename>.  If you don't do this, <command>tar</command> will print a message for each unchanged file, telling you it won't be dumped.</para> 
<para>This way of working has the disadvantage that it looks at timestamps on files.  Say that you download an archive into the directory containing your backups, and the archive contains files that have been created two years ago.  When checking the timestamps of those files against the timestamp on the initial archive, the new files will actually seem old to <command>tar</command>, and will not be included in an incremental backup made using the <option>-N</option> option.</para>
<para>A better choice would be the <option>-g</option> option, which will create a list of files to backup.  When making incremental backups, files are checked against this list.  This is how it works:</para>
<screen>
<prompt>jimmy:~&gt;</prompt> <command>tar cvpf work-20030121.tar -g snapshot-20030121 work/</command>
work/
work/file1
work/file2
work/file3

<prompt>jimmy:~&gt;</prompt> <command>file snapshot-20030121</command>
snapshot-20030121: ASCII text
</screen>
<para>The next day, user <emphasis>jimmy</emphasis> works on <filename>file3</filename> a bit more, and creates <filename>file4</filename>.  At the end of the day, he makes a new backup:</para>
<screen>
<prompt>jimmy:~&gt;</prompt> <command>tar cvpf work-20030122.tar -g snapshot-20030121 work/</command>
work/
work/file3
work/file4
</screen>
<para>These are some very simple examples, but you could also use this kind of command in a cronjob (see <xref linkend="sect_04_04_04"></xref>), which specifies for instance a snapshot file for the weekly backup and one for the daily backup.  Snapshot files should be replaced when taking full backups, in that case.</para>
<para>More information can be found in the <command>tar</command> documentation.</para>
<tip><title>The real stuff</title>
<para>As you could probably notice, <command>tar</command> is OK when we are talking about a simple directory, a set of files that belongs together.  There are tools that are easier to manage, however, when you want to archive entire partitions or disks or larger projects.  We just explain about <command>tar</command> here because it is a very popular tool for distributing archives.  It will happen quite often that you need to install a software that comes in a so-called <quote>compressed tar ball</quote>.  See <xref linkend="sect_09_03"></xref> for an easier way to perform regular backups.</para>
</tip>
</sect3>
<sect3 id="sect_09_01_01_03"><title>Compressing and unpacking with <command>gzip</command> or <command>bzip2</command></title>
<para>
Data, including tarballs, can be compressed using zip tools.  The <command>gzip</command> command will add the suffix .gz to the file name and remove the original file.
</para>
<screen>
<prompt>jimmy:~&gt;</prompt> <command>ls -la | grep tar</command>
-rw-rw-r-- 1 jimmy  jimmy    61440 Jun  6 14:08 images-without-dir.tar

<prompt>jimmy:~&gt;</prompt> <command>gzip images-without-dir.tar</command> 

<prompt>jimmy:~&gt;</prompt> <command>ls -la images-without-dir.tar.gz </command>
-rw-rw-r-- 1 jimmy  jimmy    50562 Jun  6 14:08 images-without-dir.tar.gz
</screen>
<para>Uncompress gzipped files with the <option>-d</option> option.</para>
<para><command>bzip2</command> works in a similar way, but uses an improved compression algorithm, thus creating smaller files.  See the <command>bzip2</command> info pages for more.</para>

<para>Linux software packages are often distributed in a gzipped tarball.  The sensible thing to do after unpacking that kind of archives is find the <filename>README</filename> and read it.  It will generally contain guidelines to installing the package.</para>
<para>The GNU <command>tar</command> command is aware of gzipped files.  Use the command</para>
<cmdsynopsis><command>tar <option>zxvf</option> <filename>file.tar.gz</filename></command></cmdsynopsis>
<para>for unzipping and untarring <filename>.tar.gz</filename> or <filename>.tgz</filename> files.  Use</para>
<cmdsynopsis><command>tar <option>jxvf</option> <filename>file.tar.bz2</filename></command></cmdsynopsis>
<para>for unpacking <command>tar</command> archives that were compressed with <command>bzip2</command>.</para> 
</sect3>
<sect3 id="sect_09_01_01_04"><title>Java archives</title>
<para>The GNU project provides us with the <command>jar</command> tool for creating Java archives.  It is a Java application that combines multiple files into a single JAR archive file.  While also being a general purpose archiving and compression tool, based on ZIP and the ZLIB compression format, <command>jar</command> was mainly designed to facilitate the packing of Java code, applets and/or applications in a single file.  When combined in a single archive, the components of a Java application, can be downloaded much faster.</para>
<para>Unlike <command>tar</command>, <command>jar</command> compresses by default, independent from other tools - because it is basically the Java version of <command>zip</command>.  In addition, it allows individual entries in an archive to be signed by the author, so that origins can be authenticated.</para>
<para>The syntax is almost identical as for the <command>tar</command> command, we refer to <command>info <parameter>jar</parameter></command> for specific differences.</para>
<note><title>tar, jar and symbolic links</title>
<para>One noteworthy feature not really mentioned in the standard documentation is that <command>jar</command> will follow symbolic links.  Data to which these links are pointing will be included in the archive.  The default in <command>tar</command> is to only backup the symbolic link, but this behavior can be changed using the <option>-h</option> to <command>tar</command>.</para>
</note>

</sect3>
<sect3 id="sect_09_01_01_05"><title>Transporting your data</title>
<para>Saving copies of your data on another host is a simple but accurate way of making backups.  See <xref linkend="chap_10"></xref>, Communications, for more information on <command>scp</command>, <command>ftp</command> and many more.</para>
<para>In the next section we'll discuss local backup devices.</para>
</sect3>
</sect2>

</sect1>
<sect1 id="sect_09_02">
<title>Moving your data to a backup device</title>
<sect2 id="sect_09_02_01"><title>Making a copy on a floppy disk</title>
<sect3 id="sect_09_02_01_01"><title>Formatting the floppy</title>
<para>On most Linux systems, users have access to the floppy disk device.  The name of the device may vary depending on the size and number of floppy drives, contact your system admin if you are unsure.  On sensibly administered systems, there will likely be a link <filename>/dev/floppy</filename> pointing to the right device, probably <filename>/dev/fd0</filename> (the auto-detecting floppy device) or <filename>/dev/fd0H1440</filename> (set for 1,44MB floppies).</para>
<para>
<command>fdformat</command> is the low-level floppy disk formatting tool.  It has the device name of the floppy disk as an option.  <command>fdformat</command> will display an error when the floppy is write-protected.
</para>
<screen>
<prompt>emma:~&gt;</prompt> <command>fdformat /dev/fd0H1440</command>
Double-sided, 80 tracks, 18 sec/track. Total capacity 1440 kB.
Formatting ... done
Verifying ... done
<prompt>emma:~&gt;</prompt>
</screen>
<para>The <command>mformat</command> command (from the mtools package) is used to create DOS-compatible floppies which can then be accessed using the <command>mcopy</command>, <command>mdir</command> and other m-commands.</para>
<para>Graphical tools are also available.</para>
<figure><title>Floppy formatter</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/formatfloppy.eps" format="EPS"></imagedata></imageobject><imageobject>
<imagedata fileref="images/formatfloppy.png" format="PNG"></imagedata>
</imageobject>
<textobject>
<phrase>This GUI allows for chosing the FS type and density.</phrase>
</textobject>
</mediaobject>
</figure>
<para>After the floppy is formatted, it can be mounted into the file system and accessed as a normal, be it small, directory, usually via the <filename>/mnt/floppy</filename> entry.</para>
<para>Almost every Linux distribution provides the <command>mkbootdisk</command> utility, which makes a floppy from which the current system can boot.</para>
</sect3>
<sect3 id="sect_09_02_01_02"><title>Using the <command>dd</command> command to dump data</title>
<para>The <command>dd</command> command can be used to put data on a disk, or get it off again, depending on the given input and output devices.  An example:</para>
<screen>
<prompt>gaby:~&gt;</prompt> <command>dd if=images-without-dir.tar.gz of=/dev/fd0H1440</command>
98+1 records in
98+1 records out

<prompt>gaby~&gt;</prompt> <command>dd if=/dev/fd0H1440 of=/var/tmp/images.tar.gz</command>
2880+0 records in
2880+0 records out

<prompt>gaby:~&gt;</prompt> <command>ls /var/tmp/images*</command>
/var/tmp/images.tar.gz

</screen>
<para>Note that the dumping is done on an unmounted device.  Floppies created using this method will not be mountable in the file system, but it is of course the way to go for creating boot or rescue disks.  For more information on the possibilities of <command>dd</command>, read the man pages.</para>
<para>This tool is part of the GNU <emphasis>coreutils</emphasis> package.</para>
<note><title>Dumping disks</title>
<para>The <command>dd</command> command can also be used to make a raw dump of an entire hard disk.</para></note>
</sect3>
</sect2>
<sect2 id="sect_09_02_02"><title>Making a copy with a CD-writer</title>
<para>On some systems users are allowed to use the CD-writer device.  Your data will need to be formatted first.  Use the <command>mkisofs</command> command to do this in the directory containing the files you want to backup.  Check with <command>df</command> that enough disk space is available, because a new file about the same size as the entire current directory will be created:</para>
<screen>
<prompt>[rose@blob recordables]</prompt> <command>df -h .</command>
Filesystem            Size  Used Avail Use% Mounted on
/dev/hde5              19G   15G  3.2G  82% /home

<prompt>[rose@blob recordables]</prompt> <command>du -h -s .</command>
325M    .

<prompt>[rose@blob recordables]</prompt> <command>mkisofs -J -r -o cd.iso .</command>
&lt;--snap--&gt;
making a lot of conversions
&lt;--/snap--&gt;
98.95% done, estimate finish Fri Apr  5 13:54:25 2002
Total translation table size: 0
Total rockridge attributes bytes: 35971
Total directory bytes: 94208
Path table size(bytes): 452
Max brk space used 37e84
166768 extents written (325 Mb)
</screen>
<para>The <option>-J</option> and <option>-r</option> options are used to make the CD-ROM mountable on different systems, see the man pages for more.  After that, the CD can be created using the <command>cdrecord</command> tool with appropriate options:</para>
<screen>
<prompt>[rose@blob recordables]</prompt> <command>cdrecord -dev 0,0,0 -speed=8 cd.iso</command>
Cdrecord 1.10 (i686-pc-linux-gnu) (C) 1995-2001 Joerg Schilling
scsidev: '0,0,0'
scsibus: 0 target: 0 lun: 0
Linux sg driver version: 3.1.20
Using libscg version 'schily-0.5'
Device type    : Removable CD-ROM
Version        : 0
Response Format: 1
Vendor_info    : 'HP      '
Identification : 'CD-Writer+ 8100 '
Revision       : '1.0g'
Device seems to be: Generic mmc CD-RW.
Using generic SCSI-3/mmc CD-R driver (mmc_cdr).
Driver flags   : SWABAUDIO
Starting to write CD/DVD at speed 4 in write mode for single session.
Last chance to quit, starting real write in 0 seconds. 
Operation starts.
</screen>
<para>Depending on your CD-writer, you now have the time to smoke a cigarette and/or get a cup of coffee.  Upon finishing the job, you will get a confirmation message:</para>
<screen>
Track 01: Total bytes read/written: 341540864/341540864 
          (166768 sectors).
</screen>
<para>There are some graphical tools available to make it easier on you.  One of the popular ones is <command>xcdroast</command>, which is freely available from <ulink url="http://www.xcdroast.org/">the X-CD-Roast web site</ulink> and is included on most systems and in the GNU directory.  Both the KDE and Gnome desktop managers have facilities to make your own CDs.</para>
</sect2>
<sect2 id="sect_09_02_03"><title>Backups on/from jazz drives, USB devices and such</title>
<para>These devices are usually mounted into the file system.  After the mount procedure, they are accessed as normal directories, so you can use the standard commands for manipulating files.</para>
<para>In the example below, images are copied from a USB camera to the hard disk:</para>
<screen>
<prompt>robin:~&gt;</prompt> <command>mount <filename>/mnt/camera</filename></command>

<prompt>robin:~&gt;</prompt> <command>mount | grep <parameter>camera</parameter></command>
/dev/sda1 on /mnt/camera type vfat (rw,nosuid,nodev)
</screen>
<para>If the camera is the only USB storage device that you ever connect to your system, this is safe.  But keep in mind that USB devices are assigned entries in <filename>/dev</filename> as they are connected to the system.  Thus, if you first connect a USB stick to your system, it will be on the <filename>/dev/sda</filename> entry, and if you connect your camera after that, it will be assigned to <filename>/dev/sdb</filename> - provided that you do not have any SCSI disks, which are also on <filename>/dev/sd*</filename>.  On newer systems, since kernel 2.6, a hotplug system called HAL (Hardware Abstraction Layer) ensures that users don't have to deal with this burden.  If you want to check where your device is, type <command>dmesg</command> after inserting it.</para>
<para>You can now copy the files:</para>
<screen>
<prompt>robin:~&gt;</prompt> <command>cp -R /mnt/camera/* images/</command>

<prompt>robin:~&gt;</prompt> <command>umount /mnt/camera</command>
</screen>
<para>Likewise, a jazz drive may be mounted on <filename>/mnt/jazz</filename>.</para>
<para>Appropriate lines should be added in <filename>/etc/modules.conf</filename> and <filename>/etc/fstab</filename> to make this work.  Refer to specific hardware HOWTOs for more information.</para> 
</sect2>
<sect2 id="sect_09_02_04"><title>Backing up data using a tape device</title>
<para>This is done using <command>tar</command> (see above).  The <command>mt</command> tool is used for controlling the magnetic tape device, like <filename>/dev/st0</filename>.  Entire books have been written about tape backup, therefore, refer to our reading-list in <xref linkend="app2"></xref> for more information.  Keep in mind that databases might need other backup procedures because of their architecture.</para>
<para>The appropriate backup commands are usually put in one of the <emphasis>cron</emphasis> directories in order to have them executed on a regular basis.  In larger environments, the freely available <ulink url="http://www.amanda.org">Amanda</ulink> backup suite or a commercial solution may be implemented to back up multiple machines.  Working with tapes, however, is a system administration task beyond the scope of this document.</para>
</sect2>
<sect2 id="sect_09_02_05"><title>Tools from your distribution</title>
<para>Most Linux distributions offer their own tools for making your life easy.  A short overview:</para>
<itemizedlist>
<listitem><para>SuSE: YaST now includes expanded backup and restore modules.</para></listitem>
<listitem><para>RedHat: the File Roller tool provides visual management of (compressed) archives.  They seem to be in favour of the X-CD-Roast tool for moving backups to an external device.</para></listitem>
<listitem><para>Mandrake: X-CD-Roast.</para></listitem>
<listitem><para>Most distributions come with the BSD <command>dump</command> and <command>restore</command> utilities for making backups of <emphasis>ext2</emphasis> and <emphasis>ext3</emphasis> file systems.  This tool can write to a variety of devices and literally dumps the file(s) or file system bit per bit onto the specified device.  Like <command>dd</command>, this allows for backing up special file types such as the ones in <filename>/dev</filename>.</para></listitem>
</itemizedlist>
</sect2>

</sect1>

<sect1 id="sect_09_03"><title>Using rsync</title>
<sect2 id="sect_09_03_01"><title>Introduction</title>
<para>The <command>rsync</command> program is a fast and flexible tool for remote backup.  It is common on UNIX and UNIX-like systems, easy to configure and use in scripts.  While the <emphasis>r</emphasis> in <command>rsync</command> stands for <quote>remote</quote>, you do not need to take this all too literally.  Your <quote>remote</quote> device might just as well be a USB storage device or another partition on your hard disk, you do not need to have two separated machines.</para>
</sect2>
<sect2 id="sect_09_03_02"><title>An example: rsync to a USB storage device</title>
<para>As discussed in <xref linkend="sect_03_01_02_03"></xref>, we will first have to mount the device.  This is done as <emphasis>root</emphasis>:</para>
<screen>
<prompt>root@theserver# </prompt><command>mkdir <filename>/mnt/usbstore</filename></command>

<prompt>root@theserver# </prompt><command>mount <option>-t vfat</option> <filename>/dev/sda1 /mnt/usbstore</filename></command>
</screen>
<para>Note that this guideline requires USB support to be installed on your system.  See <ulink url="http://www.linux-usb.org/USB-guide/">the USB Guide</ulink> for help if this does not work.  Check with <command>dmesg</command> that <filename>/dev/sda1</filename> is indeed the device to mount.</para>
<para>Then you can start the actual backup, for instance of the <filename>/home/karl</filename> directory:</para>
<screen>
<prompt>karl@theserver:~&gt; </prompt><command>rsync <option>-avg</option> <filename>/home/karl /mnt/usbstore</filename></command>
</screen>
<para>As usual, refer to the man pages for more.</para>
</sect2>
</sect1>

<sect1 id="sect_09_04"><title>Summary</title>
<para>Here's a list of the commands involving file backup:</para>
<table frame="all"><title>Backup commands</title>
<tgroup align="left" cols="2" colsep="1" rowsep="1">
<thead>
<row><entry>Command</entry><entry>Meaning</entry></row>
</thead>
<tbody>
<row><entry><command>bzip2</command></entry><entry>A block-sorting file compressor.</entry></row>
<row><entry><command>cdrecord</command></entry><entry>Record audio or data Compact Disks from a master.</entry></row>
<row><entry><command>dd</command></entry><entry>Convert and copy a file</entry></row>
<row><entry><command>fdformat</command></entry><entry>Low-level formats a floppy disk.</entry></row>
<row><entry><command>gzip</command></entry><entry>Compress or expand files.</entry></row>
<row><entry><command>mcopy</command></entry><entry>Copy MSDOS files to/from UNIX.</entry></row>
<row><entry><command>mdir</command></entry><entry>Display an MSDOS directory.</entry></row>
<row><entry><command>mformat</command></entry><entry>Add an MSDOS file system to a low-level formatted floppy disk.</entry></row>
<row><entry><command>mkbootdisk</command></entry><entry>Creates a stand-alone boot floppy for the running system.</entry></row>
<row><entry><command>mount</command></entry><entry>Mount a file system (integrate it with the current file system by connecting it to a mount point).</entry></row>
<row><entry><command>rsync</command></entry><entry>Synchronize directories.</entry></row>
<row><entry><command>tar</command></entry><entry>Tape archiving utility, also used for making archives on disk instead of on tape.</entry></row>
<row><entry><command>umount</command></entry><entry>Unmount file systems.</entry></row>
</tbody>
</tgroup>
</table>

</sect1>
<sect1 id="sect_09_05"><title>Exercises</title>
<itemizedlist>
<listitem><para>Make a backup copy of your home directory in <filename>/var/tmp</filename> using the <command>tar</command> command.  Then further compress the file using <command>gzip</command> or <command>bzip2</command>.  Make it a clean tarred file, one that doesn't make a mess when unpacking.</para></listitem>
<listitem><para>Format a floppy and put some files from your home directory on it.  Switch floppies with another trainee and recover his/her floppy in your home directory.</para></listitem>
<listitem><para>DOS format the floppy.  Use the <emphasis>mtools</emphasis> to put and delete files on it.</para></listitem>
<listitem><para>What happens to an unformatted floppy when you want to mount it into the file system?</para></listitem>
<listitem><para>If you have any USB storage, try to put a file on it.</para></listitem>
<listitem><para>Using <command>rsync</command>, make a copy of your home directory to another local or remote file system.</para></listitem>
</itemizedlist>

</sect1>
</chapter>
 
<chapter id="chap_10"><title>Networking</title>
<abstract>
<para>When it comes to networking, Linux is your operating system of choice, not only because networking is tightly integrated with the OS itself and a wide variety of free tools and applications are available, but for the robustness under heavy loads that can only be achieved after years of debugging and testing in an Open Source project.</para>
<para>Bookshelves full of information have been written about Linux and networking, but we will try to give an overview in this chapter.  After completing this, you will know more about</para>
<para>
<itemizedlist>
<listitem><para>Supported networking protocols</para></listitem>
<listitem><para>Network configuration files</para></listitem>
<listitem><para>Commands for configuring and probing the network</para></listitem>
<listitem><para>Daemons and client programs enabling different network applications</para></listitem>
<listitem><para>File sharing and printing</para></listitem>
<listitem><para>Remote execution of commands and applications</para></listitem>
<listitem><para>Basic network interconnection</para></listitem>
<listitem><para>Secure execution of remote applications</para></listitem>
<listitem><para>Firewalls and intrusion detection</para></listitem>
</itemizedlist>
</para>
</abstract>
<sect1 id="sect_10_01"><title>Networking Overview</title>
<sect2 id="sect_10_01_01"><title>Networking protocols</title>
<para>A protocol is, simply put, a set of rules for communication.</para>
<para>Linux supports many different networking protocols.  We list only the most important:</para>
<sect3 id="sect_10_01_01_01"><title>TCP/IP</title>
<para>The Transport Control Protocol and the Internet Protocol are the two most popular ways of communicating on the Internet.  A lot of applications, such as your browser and E-mail program, are built on top of this protocol suite.</para>
<para>Very simply put, IP provides a solution for sending packets of information from one machine to another, while TCP ensures that the packets are arranged in streams, so that packets from different applications don't get mixed up, and that the packets are sent and received in the correct order.</para>
<para>The Internet was originally developed three decades ago for the United States Department of Defense (DoD), mainly for the purpose of interconnecting different-brand computers.  Another reason for the development of TCP/IP was to provide a reliable data transport system over an unreliable network.</para>
<para>TCP/IP networking has been present in Linux since its beginnings. It has been implemented from scratch. It is one of the most robust, fast and reliable implementations and is one of the key factors of the success of Linux.  Linux and networking are made for each other, in so much that not connecting your Linux system to the network may result in slow startup and other troubles.  Even if you don't use any network connections to other computers, networking protocols are used for internal system and application communications.  Linux expects to be networked.
</para>
<para>A good starting point for learning more about TCP and IP is in the following documents:</para>
<itemizedlist>
<listitem><para><command>man <option>7</option> <parameter>ip</parameter></command>: Describes the IPv4 protocol implementation on Linux (version 4 currently being the most wide-spread edition of the IP protocol).</para></listitem>
<listitem><para><command>man <option>7</option> <parameter>tcp</parameter></command>: Implementation of the TCP protocol.</para></listitem>
<listitem><para>RFC793, RFC1122, RFC2001 for TCP, and RFC791, RFC1122 and RFC1112 for IP.</para>
<para>The Request For Comments documents contain the descriptions of networking standards, protocols, applications and implementation.  These documents are managed by the Internet Engineering Task Force, an international community concerned with the smooth operation of the Internet and the evolution and development of the Internet architecture.</para>
<para>Your ISP usually has an RFC archive available, or you can browse the RFCs via <ulink url="http://www.ietf.org/rfc.html"></ulink>.</para>
</listitem>
</itemizedlist>


</sect3>
<sect3 id="sect_10_01_01_02"><title>TCP/IPv6</title>
<para>Nobody expected the Internet to grow as fast as it does.  IP proved to have quite some disadvantages when a really large number of computers is in a network, the most important being the availability of unique addresses to assign to each machine participating.  Thus, IP version 6 was deviced to meet the needs of today's Internet.</para>
<para>Unfortunately, not all applications and services support IPv6, yet.  A migration is currently being set in motion in many environments that can benefit from an upgrade to IPv6.  For some applications, the old protocol is still used, for applications that have been reworked the new version is already active.  So when checking your network configuration, sometimes it might be a bit confusing since all kinds of measures can be taken to hide one protocol from the other so as the two don't mix up connections.</para>
<para>More information can be found in the following documents:</para>
<itemizedlist>
<listitem><para><command>man <option>7</option> <parameter>ipv6</parameter></command>: the Linux IPv6 protocol implementation.</para></listitem>
<listitem><para>RFC1883 describing the IPv6 protocol.</para></listitem>
</itemizedlist>

</sect3>
<sect3 id="sect_10_01_01_03"><title>PPP, SLIP, PLIP, PPPOE</title>
<para>The Linux kernel has built-in support for PPP (Point-to-Point-Protocol), SLIP (Serial Line IP) and PLIP (Parallel Line IP). PPP is the most popular way individual users access their ISP (Internet Service Provider), although in densely populated areas it is often being replaced by PPPOE, PPP over Ethernet, the protocol used in cable modem connections.</para>
<para>Most Linux distributions provide easy-to-use tools for setting up an Internet connection.  The only thing you basically need is a username and password to connect to your Internet Service Provider (ISP), and a telephone number in the case of PPP.  These data are entered in the graphical configuration tool, which will likely also allow for starting and stopping the connection to your provider.</para>
</sect3>
<sect3 id="sect_10_01_01_04"><title>ISDN</title>
<para>The Linux kernel has built-in ISDN capabilities. Isdn4linux controls ISDN PC cards and can emulate a modem with the Hayes command set (<quote>AT</quote> commands). The possibilities range from simply using a terminal program to full connection to the Internet.</para>
<para>Check your system documentation.</para>
</sect3>
<sect3 id="sect_10_01_01_05"><title>AppleTalk</title>
<para>Appletalk is the name of Apple's internetworking stack. It allows a peer-to-peer network model which provides basic functionality such as file and printer sharing. Each machine can simultaneously act as a client and a server, and the software and hardware necessary are included with every Apple computer.</para>
<para>Linux provides full AppleTalk networking. Netatalk is a kernel-level implementation of the AppleTalk Protocol Suite, originally for BSD-derived systems. It includes support for routing AppleTalk, serving UNIX and AFS file systems using AppleShare and serving UNIX printers and accessing AppleTalk printers.</para>
</sect3>
<sect3 id="sect_10_01_01_07"><title>SMB/NMB</title>
<para>For compatibility with MS Windows environments, the Samba suite, including support for the NMB and SMB protocols, can be installed on any UNIX-like system.  The Server Message Block protocol (also called Session Message Block, NetBIOS or LanManager protocol) is used on MS Windows 3.11, NT, 95/98, 2K and XP to share disks and printers.</para>
<para>The basic functions of the Samba suite are:  sharing Linux drives with Windows machines, accessing SMB shares from Linux machines, sharing Linux printers with Windows machines and sharing Windows printers with Linux machines.</para>
<para>Most Linux distributions provide a <emphasis>samba</emphasis> package, which does most of the server setup and starts up <command>smbd</command>, the Samba server, and <command>nmbd</command>, the netbios name server, at boot time by default.  Samba can be configured graphically, via a web interface or via the command line and text configuration files.  The daemons make a Linux machine appear as an MS Windows host in an MS Windows My Network Places/Network Neighbourhood window; a share from a Linux machine will be indistinguishable from a share on any other host in an MS Windows environment.</para>
<para>More information can be found at the following locations:</para>
<itemizedlist>
<listitem><para><command>man <filename>smb.conf</filename></command>: describes the format of the main Samba configuration file.</para></listitem>
<listitem><para><ulink url="http://www.redhat.com/support/resources/print_file/samba.html">The Samba section</ulink> of the RedHat Support Resources on Printing and File Services.</para></listitem>
<listitem><para>The <ulink url="http://ftp.easynet.be/samba/docs/Samba-HOWTO-Collection.html">Samba Project Documentation</ulink> (or check your local samba.org mirror) contains an easy to read installation and testing guide, which also explains how to configure your Samba server as a Primary Domain Controller.</para></listitem>
<listitem><para>The <ulink url="http://www.samba.org">Samba website</ulink> contains more documentation, including a troubleshooting guide.</para></listitem>
</itemizedlist>
</sect3>
<sect3 id="sect_10_01_01_08"><title>Miscellaneous protocols</title>
<para>Linux also has support for Amateur Radio, WAN internetworking (X25, Frame Relay, ATM), InfraRed and other wireless connections, but since these protocols usually require special hardware, we won't discuss them in this document.</para>
</sect3>
</sect2>
<sect2 id="sect_10_01_02"><title>Network configuration and information</title>
<sect3 id="sect_10_01_02_01"><title>Configuration of local network interfaces</title>
<para>All the big, userfriendly Linux distributions come with various graphical tools, allowing for easy setup of the computer in a local network or for connecting it to an Internet Service Provider.  These tools can be started up from the command line or from a menu:</para>
<itemizedlist>
<listitem><para>Ubuntu configuration is done selecting <menuchoice>System<guimenu>Administration</guimenu><guimenuitem>Networking</guimenuitem></menuchoice>.</para></listitem>
<listitem><para>RedHat Linux comes with <command>redhat-config-network</command>, which has both a graphical and a text mode interface.</para></listitem>
<listitem><para>Suse's YAST or YAST2 is an all-in-one configuration tool.</para></listitem>
<listitem><para>Mandrake/Mandriva comes with a Network and Internet Configuration Wizard, which is preferably started up from Mandrake's Control Center.</para></listitem>
</itemizedlist>
<para>Your system documentation provides plenty of advice and information about availability and use of tools.</para>
<para>Information you'll need to provide:</para>
<itemizedlist>
<listitem><para>For connecting to the local network, for instance with your home computers, or at work: hostname, domainname and IP address.  If you want to set up your own network, best do some more reading first.  At work, this information is likely to be given to your computer automatically when you boot it up.  When in doubt, it is better not to specify any information than making it up.</para></listitem>
<listitem><para>For connecting to the Internet: username and password for your ISP, telephone number when using a modem.  Your ISP usually automatically assigns you a hostname, IP address and all the other things necessary for your Internet applications to work.</para></listitem>
</itemizedlist>
</sect3>

<sect3 id="sect_10_01_02_02"><title>Network configuration files</title>
<para>The graphical helper tools edit a specific set of network configuration files, using a couple of basic commands.  The exact names of the configuration files and their location in the file system is largely dependent on your Linux distribution and version.  However, a couple of network configuration files are common on all UNIX systems:</para>
<itemizedlist>
<listitem><para><filename>/etc/hosts</filename>: always contains the <emphasis>localhost</emphasis> IP address, 127.0.0.1, which is used for interprocess communication.  Never remove this line!  Sometimes contains addresses of additional hosts, which can be contacted without using an external naming service such as DNS (the Domain Name Server).</para>
<para>A sample <filename>hosts</filename> file for a small home network:</para>
<screen>
# Do not remove the following line, or various programs
# that require network functionality will fail.
127.0.0.1       localhost.localdomain   localhost
192.168.52.10	tux.mylan.com		tux
192.168.52.11	winxp.mylan.com		winxp
</screen>
<para>Read more in <command>man <filename>hosts</filename></command>.</para>
</listitem>
<listitem><para><filename>/etc/resolv.conf</filename>: configure access to a DNS server.  This file contains your domain name and the name server(s) to contact:</para>
<screen>
search mylan.com
nameserver 193.134.20.4
</screen>
<para>Read more in the <filename>resolv.conf</filename> man page.</para>
</listitem>
<listitem><para><filename>/etc/nsswitch.conf</filename>: defines the order in which to contact different name services.  For Internet use, it is important that <emphasis>dns</emphasis> shows up in the <quote>hosts</quote> line:</para>
<screen>
<prompt>[bob@tux ~]</prompt> <command>grep hosts /etc/nsswitch.conf</command>
hosts:	files dns
</screen>
<para>This instructs your computer to look up hostnames and IP addresses first in the <filename>/etc/hosts</filename> file, and to contact the DNS server if a given host does not occur in the local <filename>hosts</filename> file.  Other possible name services to contact are LDAP, NIS and NIS+.</para>
<para>More in <command>man <filename>nsswitch.conf</filename></command>.</para>
</listitem>
</itemizedlist>
</sect3>
<sect3 id="sect_10_01_02_03"><title>Network configuration commands</title>
<para>The distribution-specific scripts and graphical tools are front-ends to <command>ip</command> (or <command>ifconfig</command> and <command>route</command> on older systems) to display and configure the kernel's networking configuration.</para>
<para>The <command>ip</command> command is used for assigning IP addresses to interfaces, for setting up routes to the Internet and to other networks, for displaying TCP/IP configurations etcetera.</para>
<para>The following commands show IP address and routing information:</para>

<screen>
<prompt>benny@home benny&gt;</prompt> <command>ip addr show</command>
1: lo: &lt;LOOPBACK,UP&gt; mtu 16436 qdisc noqueue 
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 brd 127.255.255.255 scope host lo
    inet6 ::1/128 scope host 
2: eth0: &lt;BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc pfifo_fast qlen 100
    link/ether 00:50:bf:7e:54:9a brd ff:ff:ff:ff:ff:ff
    inet 192.168.42.15/24 brd 192.168.42.255 scope global eth0
    inet6 fe80::250:bfff:fe7e:549a/10 scope link 

<prompt>benny@home benny&gt;</prompt> <command>ip route show</command>
192.168.42.0/24 dev eth0  scope link 
127.0.0.0/8 dev lo  scope link 
default via 192.168.42.1 dev eth0 

</screen>
<para>Things to note:</para>
<itemizedlist>
<listitem><para>two networkinterfaces, even on a system that has only one network connection: <quote>lo</quote> is the local loop, used for internal network communication; <quote>eth0</quote> is a common name for a <emphasis>real</emphasis> interface.  Do not ever change the local loop configuration, or your machine will start mallfunctioning!  Wireless interfaces are usually defined as <quote>wlan0</quote>; modem interfaces as <quote>ppp0</quote>, but there might be other names as well.</para></listitem>
<listitem><para>IP addresses, marked with <quote>inet</quote>: the local loop always has 127.0.0.1, the physical interface can have any other combination.</para></listitem>
<listitem><para>The hardware address of your interface, which might be required as part of the authentication procedure to connect to a network, is marked with <quote>ether</quote>.  The local loop has 6 pairs of all zeros, the physical loop has 6 pairs of hexadecimal characters, of which the first 3 pairs are vendor-specific.</para></listitem>
</itemizedlist>


<para>While <command>ip</command> is the most novel way to configure a Linux system, <command>ifconfig</command> is still very popular.  Use it without option fo displaying network interface information:</para>
<screen>
<prompt>els@asus:~$</prompt> <command>/sbin/ifconfig</command>
eth0      Link encap:Ethernet  HWaddr 00:50:70:31:2C:14
          inet addr:60.138.67.31  Bcast:66.255.255.255  Mask:255.255.255.192
          inet6 addr: fe80::250:70ff:fe31:2c14/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:31977764 errors:0 dropped:0 overruns:0 frame:0
          TX packets:51896866 errors:0 dropped:0 overruns:0 carrier:0
          collisions:802207 txqueuelen:1000
          RX bytes:2806974916 (2.6 GiB)  TX bytes:2874632613 (2.6 GiB)
          Interrupt:11 Base address:0xec00
										lo        Link encap:Local Loopback
	  inet addr:127.0.0.1  Mask:255.0.0.0
	  inet6 addr: ::1/128 Scope:Host
	  UP LOOPBACK RUNNING  MTU:16436  Metric:1
	  RX packets:765762 errors:0 dropped:0 overruns:0 frame:0
	  TX packets:765762 errors:0 dropped:0 overruns:0 carrier:0
	  collisions:0 txqueuelen:0
	  RX bytes:624214573 (595.2 MiB)  TX bytes:624214573 (595.2 MiB)
</screen>								      

<para>Here, too, we note the most important aspects of the interface configuration:</para>
<itemizedlist>
<listitem><para>The IP address is marked with <quote>inet addr</quote>.</para></listitem>
<listitem><para>The hardware address follows the <quote>HWaddr</quote> tag.</para></listitem>
</itemizedlist>
<para>Both <command>ifconfig</command> and <command>ip</command> display more detailed configuration information and a number of statistics about each interface and, maybe most important, whether it is <quote>UP</quote> and <quote>RUNNING</quote>.</para>

<para>On your laptop which you usually connect to the company network using the onboard Ethernet connection, but which you are now to configure for dial-in at home or in a hotel, you might need to activate the PCMCIA card.  This is done using the <command>cardctl</command> control utility.  However, a good distribution should provide PCMCIA support in the network configuration tools, preventing users from having to execute PCMCIA commands manually.</para>
<para>Further discussion of network configuration is out of the scope of this document.  Your primary source for extra information is the man pages for the services you want to set up.  Additional reading:</para>
<itemizedlist>
<listitem><para><ulink url="http://www.tldp.org/HOWTO/Modem-HOWTO.html">The Modem-HOWTO</ulink>:  Help with selecting, connecting, configuring, trouble-shooting, and understanding analog modems for a PC.</para></listitem>
<listitem><para><ulink url="http://www.tldp.org/HOWTO/HOWTO-INDEX/networking.html#NETGENERAL">LDP HOWTO Index, section 4.4</ulink>: categorized list of HOWTOs about general networking, protocols, dial-up, DNS, VPNs, bridging, routinfg, security and more.</para></listitem>
<listitem><para>The <filename>/usr/share/doc/iproute-&lt;version&gt;ip-cref.ps</filename> file, viewable with for instance <command>gv</command>.</para></listitem>
</itemizedlist>
</sect3>
<sect3 id="sect_10_01_02_04"><title>Network interface names</title>
<para>On a Linux machine, the device name <emphasis>lo</emphasis> or the <emphasis>local loop</emphasis> is linked with the internal 127.0.0.1 address.  The computer will have a hard time making your applications work if this device is not present; it is always there, even on computers which are not networked.</para>
<para>The first ethernet device, <emphasis>eth0</emphasis> in the case of a standard network interface card, points to your local LAN IP address.  Normal client machines only have one network interface card.  Routers, connecting networks together, have one network device for each network they serve.</para>
<para>If you use a modem to connect to the Internet, your network device will probably be named <emphasis>ppp0</emphasis>.  This is normally also the case for connections using a cable modem.</para>
<para>There are many more names, for instance for Virtual Private Network interfaces (VPNs), and multiple interfaces can be active simultaneously, so that the output of the <command>ifconfig</command> or <command>ip</command> commands might become quite extensive when no options are used.  Even multiple interfaces of the same type can be active.  In that case, they are numbered sequentially: the first will get the number 0, the second will get a suffix of 1, the third will get 2, and so on.  This is the case on many application servers, on machines which have a failover configuration, on routers, firewalls and many more.</para>
</sect3>

<sect3 id="sect_10_01_02_05"><title>Your host configuration</title>
<para>Apart from the <command>ip</command> command for displaying the network configuration, there's the common <command>netstat</command> command which has a lot of options and is generally useful on any UNIX system.</para>
<para>Routing information can be displayed with the <option>-nr</option> option to the <command>netstat</command> command:</para>
<screen>
<prompt>bob:~&gt;</prompt> <command>netstat -nr</command>
Kernel IP routing table
Destination  Gateway      Genmask       Flags MSS Window irtt Iface
192.168.42.0 0.0.0.0      255.255.255.0 U      40 0         0 eth0
127.0.0.0    0.0.0.0      255.0.0.0     U      40 0         0 lo
0.0.0.0      192.168.42.1 0.0.0.0       UG     40 0         0 eth0
</screen>
<para>This is a typical client machine in an IP network. It only has one network device, <emphasis>eth0</emphasis>.  The <emphasis>lo</emphasis> interface is the local loop.</para>
<para>When this machine tries to contact a host that is on another network than its own, indicated by the line starting with 0.0.0.0, it will send the connection requests to the machine (router) with IP address 192.168.42.1, and it will use its primary interface, eth0, to do this.</para>
<para>Hosts that are on the same network, the line starting with 192.168.42.0, will also be contacted through the primary network interface, but no router is necessary, the data are just put on the network.</para>
<para>Machines can have much more complicated routing tables than this one, with lots of different <quote>Destination-Gateway</quote> pairs to connect to different networks.  If you have the occasion to connect to an application server, for instance at work, it is most educating to check the routing information.</para>
</sect3>
<sect3 id="sect_10_01_02_06"><title>Other hosts</title>
<para>An impressive amount of tools is focused on network management and remote administration of Linux machines.  Your local Linux software mirror will offer plenty of those.  It would lead us too far to discuss them in this document, so please refer to the program-specific documentation.</para>
<para>We will only discuss some common UNIX/Linux text tools in this section.</para>
<para>To display information on hosts or domains, use the <command>host</command> command:</para>
<screen>
<prompt>[emmy@pc10 emmy]$</prompt> <command>host www.eunet.be</command>
www.eunet.be. has address 193.74.208.177

<prompt>[emmy@pc10 emmy]$</prompt> <command>host -t any eunet.be</command>
eunet.be. SOA dns.eunet.be. hostmaster.Belgium.EU.net. 
  2002021300 28800 7200 604800 86400
eunet.be. mail is handled by 50 pophost.eunet.be.
eunet.be. name server ns.EU.net.
eunet.be. name server dns.eunet.be.
</screen>
<para>Similar information can be displayed using the <command>dig</command> command, which gives additional information about how records are stored in the name server.</para>
<para>To check if a host is alive, use <command>ping</command>.  If your system is configured to send more than one packet, interrupt <command>ping</command> with the <keycap>Ctrl</keycap>+<keycap>C</keycap> key combination:</para>
<screen>
<prompt>[emmy@pc10 emmy]$</prompt> <command>ping a.host.be </command>
PING a.host.be (1.2.8.3) from 80.20.84.26: 56(84) bytes of data.
64 bytes from a.host.be(1.2.8.3):icmp_seq=0 ttl=244 time=99.977msec
--- a.host.be ping statistics ---
1 packets transmitted, 1 packets received, 0% packet loss
round-trip min/avg/max/mdev = 99.977/99.977/99.977/0.000 ms
</screen>
<para>To check the route that packets follow to a network host, use the <command>traceroute</command> command:</para>
<screen>
<prompt>[emmy@pc10 emmy]$</prompt> <command>/usr/sbin/traceroute www.eunet.be</command>
traceroute to www.eunet.be(193.74.208.177),30 hops max,38b packets
1 blob (10.0.0.1)  
       0.297ms  0.257ms  0.174ms
2 adsl-65.myprovider.be (217.136.111.1) 
       12.120ms 13.058ms 13.009ms
3 194.78.255.177 (194.78.255.177)  
       13.845ms 14.308ms 12.756ms
4 gigabitethernet2-2.intl2.gam.brussels.skynet.be (195.238.2.226)
       13.123ms 13.164ms 12.527ms
5 pecbru2.car.belbone.be (194.78.255.118) 
       16.336ms 13.889ms 13.028ms
6 ser-2-1-110-ias-be-vil-ar01.kpnbelgium.be (194.119.224.9)
       14.602ms 15.546ms 15.959ms
7 unknown-195-207-939.eunet.be (195.207.93.49) 
       16.514ms 17.661ms 18.889ms
8 S0-1-0.Leuven.Belgium.EU.net (195.207.129.1) 
       22.714ms 19.193ms 18.432ms
9 dukat.Belgium.EU.net (193.74.208.178) 22.758ms * 25.263ms
</screen>
<para>Specific domain name information can be queried using the <command>whois</command> command, as is explained by many <command>whois</command> servers, like the one below:</para>
<screen>
<prompt>[emmy@pc10 emmy]$</prompt> <command>whois cnn.com</command>
[whois.crsnic.net]

Whois Server Version 1.3

	$&lt;--snap server message--&gt;

   Domain Name: CNN.COM
   Registrar: NETWORK SOLUTIONS, INC.
   Whois Server: whois.networksolutions.com
   Referral URL: http://www.networksolutions.com
   Name Server: TWDNS-01.NS.AOL.COM
   Name Server: TWDNS-02.NS.AOL.COM
   Name Server: TWDNS-03.NS.AOL.COM
   Name Server: TWDNS-04.NS.AOL.COM
   Updated Date: 12-mar-2002
&gt;&gt;&gt; Last update of whois database: Fri, 5 Apr 2002 05:04:55 EST &lt;&lt;&lt;

The Registry database contains ONLY .COM, .NET, .ORG, .EDU domains
and Registrars.

[whois.networksolutions.com]

        $&lt;--snap server message--&gt;

Registrant:
Turner Broadcasting (CNN-DOM)
   1 CNN Center
   Atlanta, GA 30303

   Domain Name: CNN.COM

   Administrative Contact:
        $&lt;--snap contactinfo--&gt;   
   Technical Contact:
        $&lt;--snap contactinfo--&gt;   
   Billing Contact:
	$&lt;--snap contactinfo--&gt;
   Record last updated on 12-Mar-2002.
   Record expires on 23-Sep-2009.
   Record created on 22-Sep-1993.
   Database last updated on 4-Apr-2002 20:10:00 EST.

   Domain servers in listed order:

   TWDNS-01.NS.AOL.COM		149.174.213.151
   TWDNS-02.NS.AOL.COM		152.163.239.216
   TWDNS-03.NS.AOL.COM		205.188.146.88
   TWDNS-04.NS.AOL.COM		64.12.147.120
</screen>
<para>For other domain names than .com, .net, .org and .edu, specify the whois server, such as this one for .be domains:</para>
<cmdsynopsis><command>whois <parameter>domain.be@whois.dns.be</parameter></command></cmdsynopsis>
</sect3>
</sect2>

</sect1>
<sect1 id="sect_10_02"><title>Internet/Intranet applications</title>
<para>The Linux system is a great platform for offering networking services.  In this section, we will try to give an overview of most common network servers and applications.</para>
<sect2 id="sect_10_02_01"><title>Server types</title>
<sect3 id="sect_10_02_01_01"><title>Standalone server</title>
<para>Offering a service to users can be approached in two ways.  A daemon or service can run in standalone mode, or it can be dependent on another service to be activated.</para>
<para>Network services that are heavily and/or continuously used, usually run in the standalone mode: they are independent program daemons that are always running.  They are most likely started up at system boot time, and they wait for requests on the specific connection points or ports for which they are set up to listen.  When a request comes, it is processed, and the listening continues until the next request.  A web server is a typical example: you want it to be available 24 hours a day, and if it is too busy it should create more listening instances to serve simultaneous users.  Other examples are the large software archives such as <ulink url="http://sourceforge.net">Sourceforge</ulink> or <ulink url="http://tucows.com">your Tucows mirror</ulink>, which must handle thousands of FTP requests per day.</para>
<para>An example of a standalone network service on your home computer might be the <command>named</command> (name daemon), a caching name server.  Standalone services have there own processes running, you can check any time using <command>ps</command>:</para>
<screen>
<prompt>bob:~&gt;</prompt> <command>ps auxw | grep named</command>
named   908  0.0  1.0 14876 5108 ?   S  Mar14  0:07 named -u named
</screen>
<para>Most services on your home PC, such as the FTP service, don't have a running daemon, yet you can use them:</para>
<screen>
<prompt>bob:~&gt;</prompt> <command>ps auxw | grep ftp</command>
bob     738   690  0 16:17 pts/6    00:00:00 grep ftp

<prompt>bob:~&gt;</prompt> <command>ncftp localhost</command>
NcFTP 3.1.3 (Mar 27, 2002) by Mike Gleason (ncftp@ncftp.com).
Connecting to localhost(127.0.0.1)...
myhost.my.org FTP server (Version wu-2.6.2-8) ready.
Logging in...
Guest login ok, access restrictions apply.
Logged in to localhost.
<prompt>ncftp / &gt;</prompt>
</screen>
<para>Let's see in the next section how this is arranged.</para>
</sect3>
<sect3 id="sect_10_02_01_02"><title>(x)inetd</title>
<para>On your home PC, things are usually a bit calmer.  You may have a small network, for instance, and you may have to transfer files from one PC to another from time to time, using FTP or Samba (for connectivity with MS Windows machines).  In those cases, starting all the services which you only need occasionally and having them run all the time would be a waste of resources.  So in smaller setups, you will find the necessary daemons dependent on a central program, that listen on all the ports of the services for which it is responsible.</para>  
<para>This super-server, the Internet services daemon, is started up at system initialization time.  There are two common implementations: <command>inetd</command> and <command>xinetd</command> (the extended Internet services daemon).  One or the other is usually running on every Linux system:</para>
<screen>
<prompt>bob:~&gt;</prompt> <command>ps -ef | grep inet</command>
root  926   1 0 Mar14 ?   00:00:00 xinetd-ipv6 -stayalive -reuse \
-pidfile /var/run/xinetd.pid
</screen>
<para>The services for which the Internet daemon is responsible, are listed in its configuration file, <filename>/etc/inetd.conf</filename>, for <command>inetd</command>, and in the directory <filename>/etc/xinetd.d</filename> for <command>xinetd</command>.  Commonly managed services include file share and print services, SSH, FTP, telnet, the Samba configuration daemon, talk and time services.</para>
<para>As soon as a connection request is received, the central server will start an instance of the required server.  Thus, in the example below, when user <emphasis>bob</emphasis> starts an FTP session to the local host, an FTP daemon is running as long as the session is active:</para>
<screen>
<prompt>bob:~&gt;</prompt> <command>ps auxw | grep ftp</command>
bob     793  0.1  0.2  3960 1076 pts/6    S    16:44   0:00 ncftp localhost
ftp     794  0.7  0.5  5588 2608 ?        SN   16:44   0:00 ftpd: 
localhost.localdomain: anonymous/bob@his.server.com: IDLE
</screen>
<para>Of course, the same happens when you open connections to remote hosts: either a daemon answers directly, or a remote <command>(x)inetd</command> starts the service you need and stops it when you quit.</para>
</sect3>
</sect2>

<sect2 id="sect_10_02_02"><title>Mail</title>
<sect3 id="sect_10_02_02_01"><title>Servers</title>
<para><emphasis>Sendmail</emphasis> is the standard mail server program or Mail Transport Agent for UNIX platforms.  It is robust, scalable, and when properly configured with appropriate hardware, handles thousands of users without blinking.  More information about how to configure Sendmail is included with the sendmail and sendmail-cf packages, you may want to read the <filename>README</filename> and <filename>README.cf</filename> files in <filename>/usr/share/doc/sendmail</filename>.  The <command>man <parameter>sendmail</parameter></command> and <command>man <parameter>aliases</parameter></command> are also useful.</para>
<para>Qmail is another mail server, gaining popularity because it claims to be more secure than Sendmail.  While Sendmail is a monolithic program, Qmail consists of smaller interacting program parts that can be better secured.  Postfix is another mail server which is gaining popularity.</para>
<para>These servers handle mailing lists, filtering, virus scanning and much more.  Free and commercial scanners are available for use with Linux.  Examples of mailing list software are Mailman, Listserv, Majordomo and EZmlm.  See the web page of your favorite virus scanner for information on Linux client and server support.  Amavis and Spamassassin are free implementations of a virus scanner and a spam scanner.</para>
</sect3>
<sect3 id="sect_10_02_02_02"><title>Remote mail servers</title>
<para>The most popular protocols to access mail remotely are <emphasis>POP3</emphasis> and <emphasis>IMAP4</emphasis>.  IMAP and POP both allow offline operation, remote access to new mail and they both rely on an SMTP server to send mail.</para>
<para>While POP is a simple protocol, easy to implement and supported by almost any mail client, IMAP is to be preferred because:</para>
<itemizedlist>
<listitem><para>It can manipulate persistent message status flags.</para></listitem>
<listitem><para>It can store as well as fetch mail messages.</para></listitem>
<listitem><para>It can access and manage multiple mailboxes.</para></listitem>
<listitem><para>It supports concurrent updates and shared mailboxes.</para></listitem>
<listitem><para>It is also suitable for accessing Usenet messages and other documents.</para></listitem>
<listitem><para>IMAP works both on-line and off-line.</para></listitem>
<listitem><para>it is optimized for on-line performance, especially over low-speed links.</para></listitem>
</itemizedlist>

</sect3>
<sect3 id="sect_10_02_02_03"><title>Mail user-agents</title>
<para>There are plenty of both text and graphical E-mail clients, we'll just name a few of the common ones.  Pick your favorite.</para>
<para>The UNIX <command>mail</command> command has been around for years, even before networking existed.  It is a simple interface to send messages and small files to other users, who can then save the message, redirect it, reply to it and such.</para>
<para>While it is not commonly used as a client anymore, the <command>mail</command> program is still useful, for example to mail the output of a command to somebody:</para>
<cmdsynopsis><command>mail <email>future.employer@whereIwant2work.com</email> &lt; <filename>cv.txt</filename></command></cmdsynopsis>
<para>The <command>elm</command> mail reader is a much needed improvement to <command>mail</command>, and so is <command>pine</command> (Pine Is Not ELM).  The <command>mutt</command> mail reader is even more recent and offers features like threading.</para>
<para>For those users who prefer a graphical interface to their mail (and a tennis elbow or a mouse arm), there are hundreds of options.  The most popular for new users are Mozilla Mail/Thunderbird, which has easy anti-spam configuring options, and the Ximian MS Exchange clone, Evolution.</para>

  
<figure><title>Evolution mail and news reader</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/evolution.eps" format="EPS"></imagedata></imageobject><imageobject>
<imagedata fileref="images/evolution.png" format="PNG"></imagedata>
</imageobject>
<textobject>
<phrase>Evolution E-mail client looks just like MS Outlook.</phrase>
</textobject>
</mediaobject>
</figure>

<para>There are also tens of web mail applications available, such as <application>Squirrelmail</application>, <application>Yahoo!</application> mail, <application>gmail</application> from Google and <application>Hotmail</application>.</para>
<para>An overview is available via the <ulink url="http://www.tldp.org/HOWTO/Mail-User-HOWTO/index.html">Linux Mail User HOWTO</ulink>.</para>

<para>Most Linux distributions include <command>fetchmail</command>, a mail-retrieval and forwarding utility.  It fetches mail from remote mail servers (POP, IMAP and some others) and forwards it to your local delivery system.  You can then handle the retrieved mail using normal mail clients.  It can be run in daemon mode to repeatedly poll one or more systems at a specified interval.  Information and usage examples can be found in the Info pages; the directory <filename>/usr/share/doc/fetchmail-&lt;version&gt;</filename> contains a full list of features and a FAQ for beginners.</para>

<para>The <command>procmail</command> filter can be used for filtering incoming mail, to create mailing lists, to pre-process mail, to selectively forward mail and more.  The accompanying <command>formail</command> program, among others, enables generation of auto-replies and splitting up mailboxes.  Procmail has been around for years on UNIX and Linux machines and is a very robust system, designed to work even in the worst circumstances.  More information may be found in the <filename>/usr/share/doc/procmail-&lt;version&gt;</filename> directory and in the man pages.</para>

</sect3>

</sect2>
<sect2 id="sect_10_02_03"><title>Web</title>
<sect3 id="sect_10_02_03_01"><title>The Apache Web Server</title>
<para>Apache is by far the most popular web server, used on more than half of all Internet web servers.  Most Linux distributions include Apache.  Apache's advantages include its modular design, SSL support, stability and speed. Given the appropriate hardware and configuration it can support the highest loads.</para>
<para>On Linux systems, the server configuration is usually done in the <filename>/etc/httpd</filename> directory.  The most important configuration file is <filename>httpd.conf</filename>; it is rather self-explanatory.  Should you need help, you can find it in the <command>httpd</command> man page or on the <ulink url="http://www.apache.org">Apache website</ulink>.</para>
</sect3>
<sect3 id="sect_10_02_03_02"><title>Web browsers</title>
<para>A number of web browsers, both free and commercial, exist for the Linux platform.  Netscape Navigator as the only decent option has long been a thing of the past, as Mozilla/Firefox offers a competitive alternative running on many other operating systems, like MS Windows and MacOS X as well.</para>
<para>Amaya is the W3C browser.  Opera is a commercial browser, compact and fast.  Many desktop managers offer web browsing features in their file manager, like <command>nautilus</command>.</para>
<para>Among the popular text based browsers are <command>lynx</command> and <command>links</command>.  You may need to define proxy servers in your shell, by setting the appropriate variables.  Text browsers are fast and handy when no graphical environment is available, such as when used in scripts.</para>
</sect3>
</sect2>
<sect2 id="sect_10_02_04"><title>File Transfer Protocol</title>
<sect3 id="sect_10_02_04_01"><title>FTP servers</title>
<para>On a Linux system, an FTP server is typically run from <command>xinetd</command>, using the <emphasis>WU-ftpd</emphasis> server, although the FTP server may be configured as a stand-alone server on systems with heavy FTP traffic.  See the exercises.</para>
<para>Other FTP servers include among others <emphasis>Ncftpd</emphasis> and <emphasis>Proftpd</emphasis>.</para>
<para>Most Linux distributions contain the <emphasis>anonftp</emphasis> package, which sets up an anonymous FTP server tree and accompanying configuration files.</para>
</sect3>
<sect3 id="sect_10_02_04_02"><title>FTP clients</title>
<para>Most Linux distributions include <command>ncftp</command>, an improved version of the common UNIX <command>ftp</command> command, which you may also know from the Windows command line.  The <command>ncftp</command> program offers extra features such as a nicer and more comprehensible user interface, file name completion, append and resume functions, bookmarking, session management and more:</para>
<screen>
<prompt>thomas:~&gt;</prompt> <command>ncftp blob</command>
NcFTP 3.0.3 (April 15, 2001) by Mike Gleason (ncftp@ncftp.com).
Connecting to blob...
blob.some.net FTP server (Version wu-2.6.1-20) ready.
Logging in...
Guest login ok, access restrictions apply.
Logged in to blob.
<prompt>ncftp / &gt;</prompt> <command>help</command>
Commands may be abbreviated.  'help showall' shows hidden and 
unsupported commands.  
'help &lt;command&gt;' gives a brief description of &lt;command&gt;.

ascii      cat      help      lpage     open     quote    site     
bgget      cd       jobs      lpwd      page     rename   type     
bgput      chmod    lcd       lrename   pdir     rhelp    umask    
bgstart    close    lchmod    lrm       pls      rm       version  
binary     debug    lls       lrmdir    put      rmdir      
bookmark   dir      lmkdir    ls        pwd      set        
bookmarks  get      lookup    mkdir     quit     show       
<prompt>ncftp / &gt;</prompt> 

</screen>
<para>Excellent help with lot of examples can be found in the man pages.  And again, a number of GUI applications are available.</para> 
<warning><title>FTP is insecure!</title>
<para>Don't use the File Transfer Protocol for non-anonymous login unless you know what you are doing.  Your user name and password might be captured by malevolent fellow network users!  Use secure FTP instead; the <command>sftp</command> program comes with the Secure SHell suite, see <xref linkend="sect_10_03_04"></xref>.</para></warning>
</sect3>
</sect2>
<sect2 id="sect_10_02_05"><title>Chatting and conferencing</title>
<para>Various clients and systems are available in each distribution, replacing the old-style IRC text-based chat.  A short and incomplete list of the most popular programs:</para>
<itemizedlist>
<listitem><para><command>gaim</command>: multi-protocol instant messaging client for Linux, Windows and Mac, compatible with MSN Messenger, ICQ, IRC and much more; see the Info pages or <ulink url="http://gaim.sourceforge.net">the Gaim site</ulink> for more.</para></listitem>
<listitem><para><command>xchat</command>: IRC client for the X window system:</para>
<figure><title>X-Chat</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/xchat.eps" format="EPS"></imagedata></imageobject><imageobject>
<imagedata fileref="images/xchat.png" format="PNG"></imagedata>
</imageobject>
</mediaobject>
</figure>
<para>The home page is at <ulink url="http://sourceforge.net/projects/xchat/">SourceForge</ulink>.</para>
</listitem>
<listitem><para>JMSN: Java MSN Messenger clone with many features that the original does not have.</para></listitem>
<listitem><para><command>Konversation</command>, <command>KVIrc</command> and many other K-tools from the KDE suite.</para></listitem>
<listitem><para><command>gnomemeeting</command>: videoconferencing program for UNIX (now <application>Ekiga</application>).</para></listitem>
<listitem><para><command>jabber</command>: Open Source Instant Messenging platform, compatible with ICQ, AIM, Yahoo, MSN, IRC, SMTP and much more.</para></listitem>
<listitem><para><command>psi</command>: jabber client, see <ulink url="http://psi.affinix.com/">the PSI Jabber Client Homepage</ulink>.</para></listitem>
<listitem><para><command>skype</command>: program for making telephone-like calls over the Internet to other <application>Skype</application> users, see <ulink url="http://www.skype.com"></ulink> for more info.  Skype is free but not open.</para></listitem>
<listitem><para><application>Gizmo</application>: a free phone for your computer, see <ulink url="http://www.gizmoproject.com"></ulink>.</para></listitem>
</itemizedlist>


</sect2>
<sect2 id="sect_10_02_06"><title>News services</title>
<para>Running a Usenet server involves a lot of expertise and fine-tuning, so refer to the <ulink url="http://www.isc.org">INN homepage</ulink> for more information.</para>
<para>There are a couple of interesting newsgroups in the <emphasis>comp.*</emphasis> hierarchy, which can be accessed using a variety of text and graphical clients.  A lot of mail clients support newsgroup browsing as well, check your program or see your local Open Source software mirror for text clients such as <command>tin</command>, <command>slrnn</command> and <command>mutt</command>, or download Mozilla or one of a number of other graphical clients.</para>
<para><ulink url="http://deja.com">Deja.com</ulink> keeps a searchable archive of all newsgroups, powered by Google.  This is a very powerful instrument for getting help: chances are very high that somebody has encountered your problem, found a solution and posted it in one of the newsgroups.</para>
</sect2>
<sect2 id="sect_10_02_07"><title>The Domain Name System</title>
<para>All these applications need DNS services to match IP addresses to host names and vice versa.  A DNS server does not know all the IP addresses in the world, but networks with other DNS servers which it can query to find an unknown address.  Most UNIX systems can run <command>named</command>, which is part of the bind (Berkeley Internet Name Domain) package distributed by the Internet Software Consortium.  It can run as a stand-alone caching <emphasis>nameserver</emphasis>, which is often done on Linux systems in order to speed up network access.</para>
<para>Your main client configuration file is <filename>/etc/resolv.conf</filename>, which determines the order in which Domain Name Servers are contacted:</para>
<screen>
search somewhere.org
nameserver 192.168.42.1
nameserver 193.74.208.137
</screen>
<para>More information can be found in the Info pages on <command>named</command>, in the <filename>/usr/share/doc/bind-&lt;version&gt;</filename> files and on the <ulink url="http://www.isc.org/products/BIND">Bind project</ulink> homepage.  The <ulink url="http://www.tldp.org/HOWTO/DNS-HOWTO.html">DNS HOWTO</ulink> covers the use of BIND as a DNS server.</para>
</sect2>
<sect2 id="sect_10_02_08"><title>DHCP</title>
<para>DHCP is the Dynamic Host Configuration Protocol, which is gradually replacing good old <command>bootp</command> in larger environments.  It is used to control vital networking parameters such as IP addresses and name servers of hosts.  DHCP is backward compatible with <command>bootp</command>.  For configuring the server, you will need to read the HOWTO.</para>
<para>DHCP client machines will usually be configured using a GUI that configures the <command>dhcpcd</command>, the DHCP client daemon.  Check your system documentation if you need to configure your machine as a DHCP client.</para>
</sect2>
<sect2 id="sect_10_02_09"><title>Authentication services</title>
<sect3 id="sect_10_02_09_01"><title>Traditional</title>
<para>Traditionally, users are authenticated locally, using the information stored in <filename>/etc/passwd</filename> and <filename>/etc/shadow</filename> on each system.  But even when using a network service for authenticating, the local files will always be present to configure system accounts for administrative use, such as the root account, the daemon accounts and often accounts for additional programs and purposes.</para>
<para>These files are often the first candidates for being examined by hackers, so make sure the permissions and ownerships are strictly set as should be:</para>
<screen>
<prompt>bob:~&gt;</prompt> <command>ls -l /etc/passwd /etc/shadow</command>
-rw-r--r--    1 root     root         1803 Mar 10 13:08 /etc/passwd
-r--------    1 root     root         1116 Mar 10 13:08 /etc/shadow
</screen>
</sect3>
<sect3 id="sect_10_02_09_02"><title>PAM</title>
<para>Linux can use PAM, the Pluggable Authentication Module, a flexible method of UNIX authentication.  Advantages of PAM:</para>
<itemizedlist>
<listitem><para>A common authentication scheme that can be used with a wide variety of applications.
</para></listitem>
<listitem><para>PAM can be implemented with various applications without having to recompile the applications to specifically support PAM.</para></listitem>
<listitem><para>Great flexibility and control over authentication for the administrator and application developer.
</para></listitem>
<listitem><para>Application developers do not need to develop their program to use a particular authentication scheme. Instead, they can focus purely on the details of their program.</para></listitem>
</itemizedlist>
<para>The directory <filename>/etc/pam.d</filename> contains the PAM configuration files (used to be <filename>/etc/pam.conf</filename>).  Each application or service has its own file.  Each line in the file has four elements:</para>
<itemizedlist>
<listitem><para><emphasis>Module</emphasis>:</para>
<itemizedlist>
<listitem><para><option>auth</option>: provides the actual authentication (perhaps asking for and checking a password) and sets credentials, such as group membership or Kerberos tickets.</para></listitem>
<listitem><para><option>account</option>: checks to make sure that access is allowed for the user (the account has not expired, the user is allowed to log in at this time of day, and so on).</para></listitem>
<listitem><para><option>password</option>: used to set passwords.</para></listitem>
<listitem><para><option>session</option>: used after a user has been authenticated.  This module performs additional tasks which are needed to allow access (for example, mounting the user's home directory or making their mailbox available).</para>
</listitem>
</itemizedlist>

<para>The order in which modules are stacked, so that multiple modules can be used, is very important.</para>

</listitem>
<listitem><para><emphasis>Control Flags</emphasis>: tell PAM which actions to take upon failure or success.  Values can be <option>required</option>, <option>requisite</option>, <option>sufficient</option> or <option>optional</option>.</para></listitem>
<listitem><para><emphasis>Module Path</emphasis>: path to the pluggable module to be used, usually in <filename>/lib/security</filename>.</para></listitem>
<listitem><para><emphasis>Arguments</emphasis>: information for the modules</para></listitem>
</itemizedlist>
<para>Shadow password files are automatically detected by PAM.</para>
<para>More information can be found in the <command>pam</command> man pages or at <ulink url="http://www.kernel.org/pub/linux/libs/pam">the Linux-PAM project</ulink> homepage.</para>
</sect3>
<sect3 id="sect_10_02_09_03"><title>LDAP</title>
<para>The Lightweight Directory Access Protocol is a client-server system for accessing global or local directory services over a network.  On Linux, the OpenLDAP implementation is used.  It includes <command>slapd</command>, a stand-alone server; <command>slurpd</command>, a stand-alone LDAP replication server; libraries implementing the LDAP protocol and a series of utilities, tools and sample clients.</para>
<para> The main benefit of using LDAP is the consolidation of certain types of information within your organization. For example, all of the different lists of users within your organization can be merged into one LDAP directory. This directory can be queried by any LDAP-enabled applications that need this information. It can also be accessed by users who need directory information.
</para><para>
Other LDAP or X.500 Lite benefits include its ease of implementation (compared to X.500) and its well-defined Application Programming Interface (API), which means that the number of LDAP-enabled applications and LDAP gateways should increase in the future.
</para><para>
On the negative side, if you want to use LDAP, you will need LDAP-enabled applications or the ability to use LDAP gateways. While LDAP usage should only increase, currently there are not very many LDAP-enabled applications available for Linux. Also, while LDAP does support some access control, it does not possess as many security features as X.500.
</para>
<para> Since LDAP is an open and configurable protocol, it can be used to store almost any type of information relating to a particular organizational structure.  Common examples are mail address lookups, central authentication in combination with PAM, telephone directories and machine configuration databases.</para>
<para>See your system specific information and the man pages for related commands such as <command>ldapmodify</command> and <command>ldapsearch</command> for details.  More information can be found in the <ulink url="http://www.tldp.org/HOWTO/LDAP-HOWTO.html">LDAP Linux HOWTO</ulink>, which discusses installation, configuration, running and maintenance of an LDAP server on Linux.  The <ulink url="http://www.tldp.org/HOWTO/LDAP-Implementation-HOWTO/index.html">LDAP Implementation HOWTO</ulink> describes the technical aspects of storing application data in an LDAP server.  The author of this Introduction to Linux document also wrote an <ulink url="training/ldap/">LDAP Operations HOWTO</ulink>, describing the basics everyone should know about when dealing with LDAP management, operations and integration of services.</para>
</sect3>
</sect2>

</sect1>
<sect1 id="sect_10_03"><title>Remote execution of applications</title>
<sect2 id="sect_10_03_01"><title>Introduction</title>
<para>There are a couple of different ways to execute commands or run programs on a remote machine and have the output, be it text or graphics, sent to your workstation.  The connections can be secure or insecure.  While it is of course advised to use secure connections instead of transporting your password over the network unencrypted, we will discuss some practical applications of the older (unsafe) mechanisms, as they are still useful in a modern networked environment, such as for troubleshooting or running exotic programs.</para>
</sect2>
<sect2 id="sect_10_03_02"><title>Rsh, rlogin and telnet</title>
<para>The <command>rlogin</command> and <command>rsh</command> commands for remote login and remote execution of commands are inherited from UNIX.  While seldom used because they are blatantly insecure, they still come with almost every Linux distribution for backward compatibility with UNIX programs.</para>
<para>Telnet, on the other hand, is still commonly used, often by system and network administrators.  Telnet is one of the most powerful tools for remote access to files and remote administration, allowing connections from anywhere on the Internet.  Combined with an X server, remote graphical applications can be displayed locally.  There is no difference between working on the local machine and using the remote machine.</para>
<para>Because the entire connection is unencrypted, allowing <command>telnet</command> connections involves taking high security risks.  For normal remote execution of programs, Secure SHell or <command>ssh</command> is advised.  We will discuss the secure method later in this section.</para>
<para>However, <command>telnet</command> is still used in many cases.  Below are some examples in which a mail server and a web server are tested for replies:</para>
<para>Checking that a mail server works:</para>
<screen>
<prompt>[jimmy@blob ~]</prompt> <command>telnet mailserver 25</command>
Trying 192.168.42.1...
Connected to mailserver.
Escape character is '^]'.
220 m1.some.net ESMTP Sendmail 8.11.6/8.11.6; 200302281626
<command>ehlo some.net</command>
250-m1.some.net Hello blob.some.net [10.0.0.1], pleased to meet you
250-ENHANCEDSTATUSCODES
250-8BITMIME
250-SIZE
250-DSN
250-ONEX
250-ETRN
250-XUSR
250 HELP
<command>mail from: jimmy@some.net</command>
250 2.1.0 jimmy@some.net... Sender ok
<command>rcpt to: davy@some.net</command>
250 2.1.5 davy@some.net... Recipient ok
<command>data</command>
354 Enter mail, end with "." on a line by itself
<command>test</command>
<command>.</command>
250 2.0.0 g2MA1R619237 Message accepted for delivery
<command>quit</command>
221 2.0.0 m1.some.net closing connection
Connection closed by foreign host.
</screen>
<para>Checking that a web server answers to basic requests:</para>
<screen>
<prompt>[jimmy@blob ~]</prompt> <command>telnet www.some.net 80</command>
Trying 64.39.151.23...
Connected to www.some.net.
Escape character is '^]'.
<command>HEAD / ;HTTP/1.1</command>

HTTP/1.1 200 OK
Date: Fri, 22 Mar 2002 10:05:14 GMT
Server: Apache/1.3.22 (UNIX) (Red-Hat/Linux) 
 mod_ssl/2.8.5 OpenSSL/0.9.6
 DAV/1.0.2 PHP/4.0.6 mod_perl/1.24_01
Last-Modified: Fri, 04 Jan 2002 08:21:00 GMT
ETag: "70061-68-3c3565ec"
Accept-Ranges: bytes
Content-Length: 104
Connection: close
Content-Type: text/html

Connection closed by foreign host.

<prompt>[jimmy@blob ~]</prompt>
</screen>
<para>This is perfectly safe, because you never have to give a username and/or password for getting the data you want, so nobody can snoop that important information off the cable.</para>
</sect2>
<sect2 id="sect_10_03_03"><title>The X Window System</title>
<sect3 id="sect_10_03_03_01"><title>X features</title>
<para>As we already explained in Chapter 7 (see <xref linkend="sect_07_03_03"></xref>), the X Window system comes with an X server which serves graphics to clients that need a display.</para>
<para>It is important to realize the distinction between the X server and the X client application(s).  The X server controls the display directly and is responsible for all input and output via keyboard, mouse and display.  The X client, on the other hand, does not access the input and output devices directly.  It communicates with the X server which handles input and output.  It is the X client which does the real work, like computing values, running applications and so forth.  The X server only opens windows to handle input and output for the specified client.</para>
<para>In normal operation (runlevel five, graphical mode), every Linux workstation is an X server to itself, even if it only runs client applications.  All the applications you are running (for example, Gimp, a terminal window, your browser, your office application, your CD playing tool, and so on) are clients to your X server.  Server and client are running on the same machine in this case.</para>
<para>This client/server nature of the X system makes it an ideal environment for remote execution of applications and programs.  Because the process is actually being executed on the remote machine, very little CPU power is needed on the local host.  Such machines, purely acting as servers for X, are called X terminals and were once very popular.  More information may be found in the <ulink url="http://www.tldp.org/HOWTO/mini/Remote-X-Apps.html">Remote X applications mini-HOWTO</ulink>.</para>
</sect3>
<sect3 id="sect_10_03_03_02"><title>Telnet and X</title>
<para>If you would want to use <command>telnet</command> to display graphical applications running on a remote machine, you first need to give the remote machine access to your display (to your X server!) using the <command>xhost</command> command, by typing a command similar to the one below in a terminal window on your local machine:</para>
<screen>
<prompt>davy:~&gt;</prompt> <command>xhost +remote.machine.com</command>
</screen>
<para>After that, connect to the remote host and tell it to display graphics on the local machine by setting the environment variable <varname>DISPLAY</varname>:</para>
<screen>
<prompt>[davy@remote ~]</prompt> <command>export DISPLAY="local.host.com:0.0"</command>
</screen>
<para>After completing this step, any application started in this terminal window will be displayed on your local desktop, using remote resources for computing, but your local graphical resources (your X server) for displaying the application.</para>
<para>This procedure assumes that you have some sort of X server (XFree86, Exceed, Cygwin) already set up on the machine where you want to display images.  The architecture and operating system of the client machine are not important as long as they allow you to run an X server on it.</para>
<para>Mind that displaying a terminal window from the remote machine is also considered to be a display of an image.</para>
</sect3>
</sect2>
<sect2 id="sect_10_03_04"><title>The SSH suite</title>
<sect3 id="sect_10_03_04_01"><title>Introduction</title>
<para>Most UNIX and Linux systems now run Secure SHell in order to leave out the security risks that came with <command>telnet</command>.  Most Linux systems will run a version of OpenSSH, an Open Source implementation of the SSH protocol, providing secure encrypted communications between untrusted hosts over an untrusted network.  In the standard setup X connections are automatically forwarded, but arbitrary TCP/IP ports may also be forwarded using a secure channel.</para>
<para>The <command>ssh</command> client connects and logs into the specified host name.  The user must provide his identity to the remote machine as specified in the <filename>sshd_config</filename> file, which can usually be found in <filename>/etc/ssh</filename>.  The configuration file is rather self-explanatory and by defaults enables most common features.  Should you need help, you can find it in the <command>sshd</command> man pages.</para>
<para>When the user's identity has been accepted by the server, the server either executes the given command, or logs into the machine and gives the user a normal shell on the remote machine.  All communication with the remote command or shell will be automatically encrypted.</para>
<para>The session terminates when the command or shell on the remote machine exits and all X11 and TCP/IP connections have been closed.</para>
<para>When connecting to a host for the first time, using any of the programs that are included in the SSH collection, you need to establish the authenticity of that host and acknowledge that you want to connect:</para>
<screen>
<prompt>lenny ~&gt;</prompt> <command>ssh blob</command>
The authenticity of host 'blob (10.0.0.1)' can't be established.
RSA fingerprint is 18:30:50:46:ac:98:3c:93:1a:56:35:09:8d:97:e3:1d.
Are you sure you want to continue connecting (yes/no)? <command>yes</command>
Warning: Permanently added 'blob,192.168.30.2' (RSA) to the list of 
known hosts.
Last login: Sat Dec 28 13:29:19 2002 from octarine
This space for rent.

<prompt>lenny is in ~</prompt>
</screen>
<para>It is important that you type <quote>yes</quote>, in three characters, not just <quote>y</quote>.  This edits your <filename>~/.ssh/known_hosts</filename> file, see <xref linkend="sect_10_03_04_03"></xref>.</para>
<para>If you just want to check something on a remote machine and then get your prompt back on the local host, you can give the commands that you want to execute remotely as arguments to <command>ssh</command>:</para>
<screen>
<prompt>lenny ~&gt;</prompt> <command>ssh blob who</command>
jenny@blob's password:
root     tty2         Jul 24 07:19
lena	 tty3         Jul 23 22:24
lena     0:	      Jul 25 22:03

<prompt>lenny ~&gt;</prompt> <command>uname -n</command>
magrat.example.com
</screen>
</sect3>
<sect3 id="sect_10_03_04_02"><title>X11 and TCP forwarding</title>
<para>If the <varname>X11Forwarding</varname> entry is set to <emphasis>yes</emphasis> and the user is using X applications, the <varname>DISPLAY</varname> environment variable is set, the connection to the X11 display is automatically forwarded to the remote side in such a way that any X11 programs started from the shell will go through the encrypted channel, and the connection to the real X server will be made from the local machine.  The user should not manually set <varname>DISPLAY</varname>.  Forwarding of X11 connections can be configured on the command line or in the <command>sshd</command> configuration file.</para>
<para>The value for <varname>DISPLAY</varname> set by <command>ssh</command> will point to the server machine, but with a display number greater than zero.  This is normal, and happens because <command>ssh</command> creates a <emphasis>proxy</emphasis> X server on the server machine (that runs the X client application) for forwarding the connections over the encrypted channel.</para>
<para>This is all done automatically, so when you type in the name of a graphical application, it is displayed on your local machine and not on the remote host.  We use <command>xclock</command> in the example, since it is a small program which is generally installed and ideal for testing:</para>
<figure><title>SSH X11 forwarding</title>
<mediaobject>
<imageobject>
<imagedata fileref="images/ssh_X11.eps" format="EPS"></imagedata></imageobject>
<imageobject>
<imagedata fileref="images/ssh_X11.png" format="PNG"></imagedata>
</imageobject>
</mediaobject>
</figure>
<para>SSH will also automatically set up Xauthority data on the server machine.  For this purpose, it will generate a random authorization cookie, store it in <filename>Xauthority</filename> on the server, and verify that any forwarded connections carry this cookie and replace it by the real cookie when the connection is opened.  The real authentication cookie is never sent to the server machine (and no cookies are sent in the plain).</para>
<para>Forwarding of arbitrary TCP/IP connections over the secure channel can be specified either on the command line or in a configuration file.</para>  
<note><title>The X server</title>
<para>This procedure assumes that you have a running X server on the client where you want to display the application from the remote host.  The client may be of different architecture and operating system than the remote host, as long as it can run an X server, such as Cygwin (which implements an XFree86 server for MS Windows clients and others) or Exceed, it should be possible to set up a remote connection with any Linux or UNIX machine.</para></note>
</sect3>
<sect3 id="sect_10_03_04_03"><title>Server authentication</title>
<para>The <command>ssh</command> client/server system automatically maintains and checks a database containing identifications for all hosts it has ever been used with.  Host keys are stored in <filename>$HOME/.ssh/known_hosts</filename> in the user's home directory.  Additionally, the file <filename>/etc/ssh/ssh_known_hosts</filename> is automatically checked for known hosts.  Any new hosts are automatically added to the user's file.  If a host's identification ever changes, <command>ssh</command> warns about this and disables password authentication to prevent a Trojan horse from getting the user's password.  Another purpose of this mechanism is to prevent man-in-the-middle attacks which could otherwise be used to circumvent the encryption.  In environments where high security is needed, <command>sshd</command> can even be configured to prevent logins to machines whose host keys have changed or are unknown.</para>
</sect3>
<sect3 id="sect_10_03_04_04"><title>Secure remote copying</title>
<para>The SSH suite provides <command>scp</command> as a secure alternative to the <command>rcp</command> command that used to be popular when only <command>rsh</command> existed.  <command>scp</command> uses <command>ssh</command> for data transfer, uses the same authentication and provides the same security as <command>ssh</command>.  Unlike <command>rcp</command>, <command>scp</command> will ask for passwords or passphrases if they are needed for authentication:</para>
<screen>
<prompt>lenny /var/tmp&gt;</prompt> <command>scp Schedule.sdc.gz blob:/var/tmp/</command>
lenny@blob's password:
Schedule.sdc.gz  100% |*****************************| 100 KB 00:00

<prompt>lenny /var/tmp&gt;</prompt>
</screen>
<para>Any file name may contain a host and user specification to indicate that the file is to be copied to/from that host.  Copies between two remote hosts are permitted.  See the Info pages for more information.</para>
<para>If you would rather use an FTP-like interface, use <command>sftp</command>:</para>
<screen>
<prompt>lenny /var/tmp&gt;</prompt> <command>sftp blob</command>
Connecting to blob...
lenny@blob's password:

<prompt>sftp&gt;</prompt> <command>cd /var/tmp</command>

<prompt>sftp&gt;</prompt> <command>get Sch*</command>
Fetching /var/tmp/Schedule.sdc.gz to Schedule.sdc.gz

<prompt>sftp&gt;</prompt> <command>bye</command>

<prompt>lenny /var/tmp&gt;</prompt>
</screen>
<note><title>Secure copy or FTP GUIs</title>
<para>Don't feel comfortable with the command line yet?  Try <application>Konqueror</application>'s capabilities for secure remote copy, or install <application>Putty</application>.</para>
</note>
</sect3>
<sect3 id="sect_10_03_04_05"><title>Authentication keys</title>
<para>The <command>ssh-keygen</command> command generates, manages and converts authentication keys for <command>ssh</command>.  It can create RSA keys for use by SSH protocol version 1 and RSA or DSA keys for use by SSH protocol version 2.</para>
<para>Normally each user wishing to use SSH with RSA or DSA authentication runs this once to create the authentication key in <filename>$HOME/.ssh/identity</filename>, <filename>id_dsa</filename> or <filename>id_rsa</filename>.  Additionally, the system administrator may use this to generate host keys for the system.</para>
<para>Normally this program generates the key and asks for a file in which to store the private key.  The public key is stored in a file with the same name but <emphasis>.pub</emphasis> appended.  The program also asks for a passphrase.  The passphrase may be empty to indicate no passphrase (host keys must have an empty passphrase), or it may be a string of arbitrary length.</para>
<para>There is no way to recover a lost passphrase.  If the passphrase is lost or forgotten, a new key must be generated and copied to the corresponding public keys.</para>
<para>We will study SSH keys in the exercises.  All information can be found in the man or Info pages.</para>
</sect3>
</sect2>
<sect2 id="sect_10_03_05"><title>VNC</title>
<para>VNC or Virtual Network Computing is in fact a remote display system which allows viewing a desktop environment not only on the local machine on which it is running, but from anywhere on the Internet and from a wide variety of machines and architectures, including MS Windows and several UNIX distributions.  You could, for example, run MS Word on a Windows NT machine and display the output on your Linux desktop.  VNC provides servers as well as clients, so the opposite also works and it may thus be used to display Linux programs on Windows clients.  VNC is probably the easiest way to have X connections on a PC.  The following features make VNC different from a normal X server or commercial implementations:</para>
<itemizedlist>
<listitem><para>No state is stored at the viewer side:  you can leave your desk and resume from another machine, continuing where you left.  When you are running a PC X server, and the PC crashes or is restarted, all remote applications that you were running will die.  With VNC, they keep on running.</para></listitem>
<listitem><para>It is small and simple, no installation needed, can be run from a floppy if needed.</para></listitem>
<listitem><para>Platform independent with the Java client, runs on virtually everything that supports X.</para></listitem>
<listitem><para>Sharable:  one desktop may be displayed on multiple viewers.</para></listitem>
<listitem><para>Free (GNU Public License).</para></listitem>
</itemizedlist>
<para>More information can be found in the VNC client man pages (<command>man <parameter>vncviewer</parameter></command>) or on the <ulink url="http://www.uk.research.att.com/vnc/">VNC website</ulink>.</para>
</sect2>
<sect2 id="sect_10_03_06"><title>The rdesktop protocol</title>
<para>In order to ease management of MS Windows hosts, recent Linux distributions support the Remote Desktop Protocol (RDP), which is implemented in the <command>rdesktop</command> client.  The protocol is used in a number of MicroSoft products, including Windows NT Terminal Server, Windows 2000 Server, Windows XP and Windows 2003 Server.</para>
<para>Surprise your friends (or management) with the fullscreen mode, multiple types of keyboard layouts and single application mode, just like the real thing.  The <command>man <parameter>rdesktop</parameter></command> manual provides more information.  The project's homepage is at <ulink url="http://www.rdesktop.org/"></ulink>.</para>
</sect2>
<sect2 id="sect_10_03_07"><title>Cygwin</title>

<para><ulink url="http://www.cygwin.com">Cygwin</ulink> provides substantial UNIX functionality on MS Windows systems.  Apart from providing UNIX command line tools and graphical applications, it can also be used to display a Linux desktop on an MS Windows machine, using remote X.  From a Cygwin Bash shell, type the command</para>
<cmdsynopsis><command>/usr/X11R6/bin/XWin.exe <option>-query</option> <parameter>your_linux_machine_name_or_IP</parameter></command></cmdsynopsis>
<para>The connection is by default denied.  You need to change the X Display Manager (XDM) configuration and possibly the X Font Server (XFS) configuration to enable this type of connection, where you get a login screen on the remote machine.  Depending on your desktop manager (Gnome, KDE, other), you might have to change some configurations there, too.</para>
<para>If you do not need to display the entire desktop, you can use SSH in Cygwin, just like explained in <xref linkend="sect_10_03_03_02"></xref>. without all the fuss of editing configuration files.</para>

</sect2>
</sect1>
<sect1 id="sect_10_05"><title>Security</title>
<sect2 id="sect_10_05_01"><title>Introduction</title>
<para>As soon as a computer is connected to the network, all kinds of abuse becomes possible, be it a UNIX-based or any other system.  Admittedly, mountains of papers have been spilled on this subject and it would lead us too far to discuss the subject of security in detail.  There are, however, a couple of fairly logical things even a novice user can do to obtain a very secure system, because most break-ins are the result of ignorant or careless users.</para>
<para>Maybe you are asking yourself if this all applies to you, using your computer at home or working at your office on a desktop in a fairly protected environment.  The questions you should be asking yourself, however, are more on the lines of:</para>
<itemizedlist>
<listitem><para>Do you want to be in control of your own system?</para></listitem>
<listitem><para>Do you want to (unwittingly) participate in criminal activities?</para></listitem>
<listitem><para>Do you want your equipment to be used by someone else?</para></listitem>
<listitem><para>Do you want to take risks on losing your Internet connection?</para></listitem>
<listitem><para>Do you want to rebuild your system every time it has been hacked?</para></listitem>
<listitem><para>Do you want to risk personal or other data loss?</para></listitem>
</itemizedlist>
<para>Presuming you don't, we will quickly list the steps you can take to secure your machine.  Extended information can be found in the <ulink url="http://www.tldp.org/HOWTO/Security-HOWTO.html">Linux Security HOWTO</ulink>.</para>
</sect2>
<sect2 id="sect_10_05_02"><title>Services</title>
<para>The goal is to run as few services as possible.  If the number of ports that are open for the outside world are kept to a minimum, this is all the better to keep an overview.  If services can't be turned off for the local network, try to at least disable them for outside connections.</para>
<para>A rule of thumb is that if you don't recognize a particular service, you probably won't need it anyway.  Also keep in mind that some services are not really meant to be used over the Internet.  Don't rely on what <emphasis>should</emphasis> be running, check which services are listening on what TCP ports using the <command>netstat</command> command:</para>
<screen>
<prompt>[elly@mars ~]</prompt> <command>netstat -l | grep tcp</command>
tcp     0      0 *:32769                 *:*      LISTEN
tcp     0      0 *:32771                 *:*      LISTEN
tcp     0      0 *:printer               *:*      LISTEN
tcp     0      0 *:kerberos_master       *:*      LISTEN
tcp     0      0 *:sunrpc                *:*      LISTEN
tcp     0      0 *:6001                  *:*      LISTEN
tcp     0      0 *:785                   *:*      LISTEN
tcp     0      0 localhost.localdom:smtp *:*      LISTEN
tcp     0      0 *:ftp                   *:*      LISTEN
tcp     0      0 *:ssh                   *:*      LISTEN
tcp     0      0 ::1:x11-ssh-offset      *:*      LISTEN
</screen>
<para>Things to avoid:</para>
<itemizedlist>
<listitem><para><command>exec</command>, <command>rlogin</command> and <command>rsh</command>, and <command>telnet</command> just to be on the safe side.</para></listitem>
<listitem><para>X11 on server machines.</para></listitem>
<listitem><para>No lp if no printer is physically attached.</para></listitem>
<listitem><para>No MS Windows hosts in the network, no Samba required.</para></listitem>
<listitem><para>Don't allow FTP unless an FTP server is required.</para></listitem>
<listitem><para>Don't allow NFS and NIS over the Internet, disable all related services on a stand-alone installation.</para></listitem>
<listitem><para>Don't run an MTA if you're not actually on a mail server.</para></listitem>
<listitem><para>...</para></listitem>
</itemizedlist>
<para>Stop running services using the <command>chkconfig</command> command, the initscripts or by editing the <command>(x)inetd</command> configuration files.
</para>
</sect2>
<sect2 id="sect_10_05_03"><title>Update regularly</title>
<para>Its ability to adapt quickly in an ever changing environment is what makes Linux thrive.  But it also creates a possibility that security updates have been released even while you are installing a brand new version, so the first thing you should do (and this goes for about any OS you can think of) after installing is getting the updates as soon as possible.  After that, update <emphasis>all</emphasis> the packages you use regularly.</para>
<para>Some updates may require new configuration files, and old files may be replaced.  Check the documentation, and ensure that everything runs normal after updating.</para>
<para>Most Linux distributions provide mailing list services for security update announcements, and tools for applying updates to the system.  General Linux only security issues are reported among others at <ulink url="http://linuxsecurity.com">Linuxsecurity.com</ulink>.</para>
<para>Updating is an ongoing process, so it should be an almost daily habit.</para>
</sect2>
<sect2 id="sect_10_05_04"><title>Firewalls and access policies</title>
<sect3 id="sect_10_05_04_01"><title>What is a firewall?</title>
<para>In the previous section we already mentioned firewall capabilities in Linux.  While firewall administration is one of the tasks of your network admin, you should know a couple of things about firewalls.</para>
<para><emphasis>Firewall</emphasis> is a vague term that can mean anything that acts as a protective barrier between us and the outside world, generally the Internet.  A firewall can be a dedicated system or a specific application that provides this functionality. Or it can be a combination of components, including various combinations of hardware and software. Firewalls are built from <quote>rules</quote> that are used to define what is allowed to enter and/or exit a given system or network.</para>
<para>After disabling unnecessary services, we now want to restrict accepted services as to allow only the minimum required connections.  A fine example is working from home: only the specific connection between your office and your home should be allowed, connections from other machines on the Internet should be blocked.</para>
</sect3>
<sect3 id="sect_10_05_04_02"><title>Packet filters</title>
<para>The first line of defense is a <emphasis>packet filter</emphasis>, which can look inside IP packages and make decisions based on the content.  Systems running the <command>ipchains</command> firewall are based on 2.2 kernels.  Newer systems (2.4 kernel) use <command>iptables</command>, a next generation packet filter for Linux, and the Gnome Lokkit tool.  This tool was only created to provide an easy interface for normal users.  It sets up a basic firewall configuration for a desktop, a dial-up or cable modem connection, and that's about it.  It should not be used in larger environments.</para>
<para>One of the most noteworthy enhancements in the newer kernels is the <emphasis>stateful inspection</emphasis> feature, which not only tells what is inside a packet, but also detects if a packet belongs or is related to a new or existing connection.</para>
<para>Development is ongoing, so it is best to check with each new version of a distribution which system is being used.</para>
<para>More information can be found at <ulink url="http://www.netfilter.org/">the netfilter/iptables project page</ulink>.</para>
</sect3>
<sect3 id="sect_10_05_04_03"><title>TCP wrappers</title>
<para>TCP wrapping provides much the same results as the packet filters, but works differently.  The wrapper actually accepts the connection attempt, then examines configuration files and decides whether to accept or reject the connection request.  It controls connections at the application level rather than at the network level.</para>
<para>TCP wrappers are typically used with <command>xinetd</command> to provide host name and IP-address-based access control.  In addition, these tools include logging and utilization management capabilities that are easy to configure.</para>
<para>The advantages of TCP wrappers are that the connecting client is unaware that wrappers are used, and that they operate separately from the applications they protect.</para>
<para>The host based access is controlled in the <filename>hosts.allow</filename> and <filename>hosts.deny</filename> files.  More information can be found in the TCP wrapper documentation files in <filename>/usr/share/doc/tcp_wrappers-&lt;version&gt;/</filename> and in the man pages for the host based access control files, which contain examples.</para>
</sect3>
<sect3 id="sect_10_05_04_04"><title>Proxies</title>
<para>Proxies can perform various duties, not all of which have much to do with security. But the fact that they are an intermediary make proxies a good place to enforce access control policies, limit direct connections through a firewall, and control how the network behind the proxy looks to the Internet.</para>
<para>Usually in combination with a packet filter, but sometimes all by themselves, proxies provide an extra level of control.  More information can be found in the <ulink url="http://www.tldp.org/HOWTO/Firewall-HOWTO.html">Firewall HOWTO</ulink> or on the Squid website.</para>
</sect3>
<sect3 id="sect_10_05_04_05"><title>Access to individual applications</title>
<para>Some servers may have their own access control features.  Common examples include Samba, X11, Bind, Apache and CUPS.  For every service you want to offer check which configuration files apply.</para>
</sect3>
<sect3 id="sect_10_05_04_06"><title>Log files</title>
<para>If anything, the UNIX way of logging all kinds of activities into all kinds of files confirms that <quote>it is doing something.</quote>  Of course, log files should be checked regularly, manually or automatically.  Firewalls and other means of access control tend to create huge amounts of log files, so the trick is to try and only log abnormal activities.</para></sect3>
</sect2>
<sect2 id="sect_10_05_05"><title>Intrusion detection</title>

<para> Intrusion Detection Systems are designed to catch what might have gotten past the firewall. They can either be designed to catch an active break-in attempt in progress, or to detect a successful break-in after the fact. In the latter case, it is too late to prevent any damage, but at least we have early awareness of a problem.  There are two basic types of IDS:  those protecting networks, and those protecting individual hosts.</para>
<para> For host based IDS, this is done with utilities that monitor the file system for changes. System files that have changed in some way, but should not change, are a dead give-away that something is amiss. Anyone who gets in and gets root access will presumably make changes to the system somewhere. This is usually the very first thing done, either so he can get back in through a backdoor, or to launch an attack against someone else, in which case, he has to change or add files to the system.  Some systems come with the <command>tripwire</command> monitoring system, which is documented at the <ulink url="http://www.tripwire.org">Tripwire Open Source Project</ulink> website.</para> 
<para>Network intrusion detection is handled by a system that sees all the traffic that passes the firewall (not by portscanners, which advertise usable ports).  <ulink url="http://www.snort.org">Snort</ulink> is an Open Source example of such a program.  Whitehats.com features an open Intrusion detection database, <ulink url="http://www.whitehats.com">arachNIDS</ulink>.  </para>
</sect2>
<sect2 id="sect_10_05_06"><title>More tips</title>
<para>Some general things you should keep in mind:</para>
<itemizedlist>
<listitem><para>Do not allow root logins.  UNIX developers came up with the <command>su</command> over two decades ago for extra security.</para></listitem>
<listitem><para>Take passwords seriously.  Use shadow passwords.  Change your passwords regularly.</para></listitem>
<listitem><para>Try to always use SSH.  Avoid <command>telnet</command>, FTP clients, and other client programs, such as a POP3 mail client, which send unencrypted passwords over the network.</para></listitem>
<listitem><para>Limit resources using <command>quota</command> and/or <command>ulimit</command>.</para></listitem>
<listitem><para>The mail for root should be delivered to, or at least read by, an actual person.</para></listitem>
<listitem>
<para>The <ulink url="http://www.sans.org">SANS institute</ulink> has more tips and tricks, sorted per distribution, with mailing list service.  They advertise the use of the <ulink url="http://www.bastille-linux.org">Bastille hardening system</ulink> for RedHat users.</para></listitem>
<listitem><para>Check the origin of new software, get it from a trusted place/site.  Verify new packages before installing.</para></listitem>
<listitem><para>When using a non-permanent Internet connection, shut it down as soon as you don't need it anymore.</para></listitem>
<listitem><para>Run private services on odd ports instead of the ones expected by possible hackers.</para></listitem>
<listitem><para>Know your system.  After a while, you can almost feel when something is happening.</para></listitem>
</itemizedlist>
</sect2>
<sect2 id="sect_10_05_07"><title>Have I been hacked?</title>
<para>How can you tell?  This is a checklist of suspicious events:</para>
<itemizedlist>
<listitem><para>Mysterious open ports, strange processes.</para></listitem>
<listitem><para>System utilities (common commands) behaving strange.</para></listitem>
<listitem><para>Login problems.</para></listitem>
<listitem><para>Unexplained bandwidth usage.</para></listitem>
<listitem><para>Damaged or missing log files, syslog daemon behaving strange.</para></listitem>
<listitem><para>Interfaces in unusual modes.</para></listitem>
<listitem><para>Unexpectedly modified configuration files.</para></listitem>
<listitem><para>Strange entries in shell history files.</para></listitem>
<listitem><para>Unidentified temporary files.</para></listitem>
</itemizedlist>
</sect2>
<sect2 id="sect_10_05_08"><title>Recovering from intrusion</title>
<para>In short, stay calm.  Then take the following actions in this order:</para>
<itemizedlist>
<listitem><para>Disconnect the machine from the network.</para></listitem>
<listitem><para>Try to find out as much as you can about how your security was breached.</para></listitem>
<listitem><para>Backup important non-system data.  If possible, check these data against existing backups, made before the system was compromised, to ensure data integrity.</para></listitem>
<listitem><para>Re-install the system.</para></listitem>
<listitem><para>Use new passwords.</para></listitem>
<listitem><para>Restore from system and data backups.</para></listitem>
<listitem><para>Apply all available updates.</para></listitem>
<listitem><para>Re-examine the system:  block off unnecessary services, check firewall rules and other access policies.</para></listitem>
<listitem><para>Reconnect.</para></listitem>
</itemizedlist>
</sect2>

</sect1>
<sect1 id="sect_10_06"><title>Summary</title>
<para>Linux and networking go hand in hand.  The Linux kernel has support for all common and most uncommon network protocols.  The standard UNIX networking tools are provided in each distribution.  Next to those, most distributions offer tools for easy network installation and management.</para>
<para>Linux is well known as a stable platform for running various Internet services, the amount of Internet software is endless.  Like UNIX, Linux can be just as well used and administered from a remote location, using one of several solutions for remote execution of programs.</para>
<para>We briefly touched the subject of security.  Linux is an ideal firewall system, light and cheap, but can be used in several other network functions such as routers and proxy servers.</para>
<para>Increasing network security is mainly done by applying frequent updates and common sense.</para>

</sect1>
<sect1 id="sect_10_07"><title>Exercises</title>

<sect2 id="sect_10_07_01"><title>General networking</title>
<itemizedlist>
<listitem><para>Display network information for your workstation: IP address, routes, name servers.</para></listitem>
<listitem><para>Suppose no DNS is available.  What would you do to reach your neighbour's machine without typing the IP address all the time?</para></listitem>
<listitem><para>How would you permanently store proxy information for a text mode browser such as <command>links</command>?</para></listitem>
<listitem><para>Which name servers handle the redhat.com domain?</para></listitem>
<listitem><para>Send an E-mail to your local account.  Try two different ways to send and read it.  How can you check that it really arrived?</para></listitem>
<listitem><para>Does your machine accept anonymous FTP connections?  How do you use the <command>ncftp</command> program to authenticate with your user name and password?</para></listitem>
<listitem><para>Does your machine run a web server?  If not, make it do so.  Check the log files!</para></listitem>
</itemizedlist>
</sect2>

<sect2 id="sect_10_07_02"><title>Remote connections</title>
<itemizedlist>
<listitem><para>From your local workstation, display a graphical application, such as <command>xclock</command> on your neighbour's screen.  The necessary accounts will have to be set up.  Use a secure connection!</para></listitem>
<listitem><para>Set up SSH keys so you can connect to your neighbour's machine without having to enter a password.</para></listitem>
<listitem><para>Make a backup copy of your home directory in <filename>/var/tmp</filename> on your neighbour's <quote>backup server,</quote> using <command>scp</command>.  Archive and compress before starting the data transfer!  Connect to the remote host using <command>ssh</command>, unpack the backup, and put one file back on the original machine using <command>sftp</command>.</para></listitem>
</itemizedlist>
</sect2>

<sect2 id="sect_10_07_03"><title>Security</title>
<itemizedlist>
<listitem><para>Make a list of open (listening) ports on your machine.</para></listitem>
<listitem><para>Supposing you want to run a web server.  Which services would you deactivate?  How would you do that?</para></listitem>
<listitem><para>Install available updates.</para></listitem>
<listitem><para>How can you see who connected to your system?</para></listitem>
<listitem><para>Make a repetitive job that reminds you to change your password every month, and preferably the <emphasis>root</emphasis> password as well.</para></listitem>
</itemizedlist>

</sect2>

</sect1>
</chapter>
 
<chapter id="chap_11"><title>Sound and Video</title>
<abstract>
<para>This chapter addresses the following tasks (briefly, as the field of sound and video is very wide):</para>
<itemizedlist>
<listitem><para>Sound card configuration</para></listitem>
<listitem><para>Playing CDs, copying CDs, </para></listitem>
<listitem><para>Playing music files</para></listitem>
<listitem><para>Volume control</para></listitem>
<listitem><para>Video and television</para></listitem>
<listitem><para>Recording sound</para></listitem>
</itemizedlist>
</abstract>
<sect1 id="sect_11_01"><title>Audio Basics</title>
<sect2 id="sect_11_01_01"><title>Installation</title>
<para>Most likely, your system is already installed with audio drivers and the configuration was done at installation time.  Likewise, should you ever need to replace your audio hardware, most systems provide tools that allow easy setup and configuration of the device.  Most currently available 
 plug-and-play sound cards should be recognized automatically.  If you can hear the samples that are played during configuration, just click <guibutton>OK</guibutton> 
and everything will be set up for you.</para>
<para>If your card is not detected automatically, you may be presented with a list of sound cards and/or of sound card properties from which to choose.  After that, you will have to provide the correct I/O port, IRQ and DMA settings.  Infor
mation about these settings can be found in your sound card documentation.  If you are on a dual boot system with MS Windows, this information can be found in t
he Windows Control Panel as well.</para>
<note><title>If automatic sound card detection fails</title>
<para>
If your soundcard is not supported by default, you will need to apply other tec
niques.  These are described in the <ulink url="http://www.tldp.org/HOWTO/Sound-HOWTO/index.html">Linux Sound HOWTO</ulink>.</para>
</note>
</sect2>
<sect2 id="sect_11_01_02"><title>Drivers and Architecture</title>
<para>There are generally two types of sound architecture: the older Open Sound System or OSS, which works with every UNIX-like system, and the newer Advanced Linux Sound Architecture or ALSA, that has better support for Linux, as the name indicates.  ALSA also has more features and allows for faster driver development.  We will focus here on the ALSA system.</para>

<para>Today, almost all mainstream audio chipsets are supported.  Only some high-end professional solutions and some cards developed by manufacturers refusing to document their chipset specifications are unsupported.  An overview of supported devices can be found on the ALSA site at <xref linked="http://www.alsa-project.org/alsa-doc/index.php?vendor=All#matrix"></xref>.</para>
<para>Configuring systems installed with ALSA is done using the <command>alsaconf</command> tool.  Additionally, distributions usually provide their own tools for configuring the sound card; these tools might even integrate the old and the new way of handling sound devices.</para>
</sect2>
</sect1>
<sect1 id="sect_11_02"><title>Sound and video playing</title>
<sect2 id="sect_11_02_01"><title>CD playing and copying</title>
<para>The <emphasis>cdp</emphasis> package comes with most distributions and provides <command>cdp</command> or <command>cdplay</command>, a text-based CD playe
r.  Desktop managers usually include a graphical tool, such as the <command>gnom
e-cd</command> player in Gnome, that can be started from a menu.</para>
<para>Be sure to understand the difference between an audio CD and a data CD.  
ou do not have to mount an audio CD into the file system in order to listen to it.  This is because the data on such a CD are not Linux file system data; they a
re accessed and sent to the audio output channel directly, using a CD player pr
gram.  If your CD is a data CD containing <filename>.mp3</filename> files, you will first need to mount it into the file system, and then use one of the program
s that we discuss below in order to play the music.  How to mount CDs into the file system is explained in <xref linkend="sect_07_06_05"></xref>.</para>
<para>The <command>cdparanoia</command> tool from the package with the same name
 reads audio directly as data from the CD, without analog conversions, and writes data to a file or pipe in different formats, of which <filename>.wav</filename> is probably the most popular.  Various tools for conversion to other formats, formats,  
 such as <filename>.mp3</filename>, come with most distributions or are downloadable as separate packages.  The GNU project provides several CD playing, ripping and encoding tools, database managers; see the <ulink url="http://www.gnu.org/directory/audio/">Free Software Directory, Audio section</ulink> for detailed information.</para>
 <para>Audio-CD creation is eased, among many others, with the <command>kaudiocreator</command> tool from the KDE suite.  It comes with clear information from the KDE Help Center and is included on systems that have the <application>kdemultimedia</application> package installed.</para>

 <para>CD burning is covered in general in <xref linkend="sect_09_02_02"></xref>.</para>
 </sect2>
 <sect2 id="sect_11_02_02"><title>Playing music files</title>
 <sect3 id="sect_11_02_02_01"><title>mp3 files</title>
 <para>The popular <filename>.mp3</filename> format is widely supported on Linux
 machines.  Most distributions include multiple programs that can play these files.  Among many other applications, <application>XMMS</application>, which is presented in the screenshot below, is one of the most wide-spread, partially because it has the same look and feel as the Windows tool.</para>

 <figure><title>XMMS mp3 player</title>
 <mediaobject>
 <imageobject>
 <imagedata fileref="images/xmms.eps" format="EPS"></imagedata></imageobject><imageobject>
 <imagedata fileref="images/xmms.png" format="PNG"></imagedata>
 </imageobject>
 <textobject>
 <phrase>XMMS looks very familiar to MS Windows users, showing a hi-fi installation frontpanel.</phrase>
 </textobject>
 </mediaobject>
 </figure>

 <para>Also very popular for playing music are <application>AmaroK</application>, a KDE application that is steadily gaining popularity, and <application>MPlayer</application>, which can also play movies.</para>

  <note><title>Restrictions</title>
  <para>Some distributions don't allow you to play MP3's without modifying your configuration, this is due to license restrictions on the MP3 tools.  You might need to install extra software to be able to play your music.</para>
  </note>
</sect3>
<sect3 id="sect_11_02_02_02"><title>Other formats</title>
<para>An (incomplete) overview of other common sound playing and manipulating so
ftware:</para>
<itemizedlist>
<listitem><para>Ogg Vorbis: Free audio format: see <ulink url="http://www.gnu.org/directory/audio/ogg/">the GNU audio directory</ulink> for tools - they might be included in your distribution as well.  The format was developed because MP3 is patented.</para></listitem>
<listitem><para>Real audio and video: <command>realplay</command> from <ulink url="http://real.com">RealNetworks</ulink>.</para></listitem>
<listitem><para>SoX or Sound eXchange: actually a sound converter, comes with th
e <command>play</command> program.  Plays <filename>.wav</filename>, <filename>.
ogg</filename> and various other formats, including raw binary formats.</para></listitem>
<listitem><para>Playmidi: a MIDI player, see the GNU directory.</para></listitem>
<listitem><para>AlsaPlayer: from the Advanced Linux Sound Architecture project, 
see the <ulink url="http://www.alsaplayer.org">AlsaPlayer web site</ulink>.</para></listitem>
<listitem><para><command>mplayer</command>: plays just about anything, including
 mp3 files.  More info on the <ulink url="http://www.mplayerhq.hu/">MPlayerHQ website</ulink>.</para></listitem>
 <listitem><para><command>hxplay</command>: supports RealAudio and RealVideo, mp3, mp4 audio, Flash, wav and more, see <ulink url="http://www.helixdna.com">HelixDNA</ulink> (not all components of this software are completely free).</para></listitem>
 <listitem><para><command>rhythmbox</command>: based on the <application>GStreamer</application> framework, can play everything supported in <application>GStreamer</application>, which claims to be able to play everything, see the <ulink url="http://www.rhythmbox.org">Rhythmbox</ulink> and <ulink url="http://gstreamer.freedesktop.org">GStreamer</ulink> sites.</para></listitem>
 </itemizedlist>

 <para>Check your system documentation and man pages for particular tools and detailed explanations on how to use them.</para>

 <note><title>I don't have these applications on my system!</title>
 <para>A lot of the tools and applications discussed in the above sections are optional software.  It is possible that such applications are not installed on your system by default, but that you can find them in your distribution as additional packages.  It might also very well be that the application that you are looking for is not in your distribution at all.  In that case, you need to download it from the application's web site.</para>
 </note>
 </sect3>
<sect3 id="sect_11_02_02_03"><title>Volume control</title>
<para><command>aumix</command> and <command>alsamixer</command> are two common t
ext tools for adjusting audio controls.  Use the arrow keys to toggle settings.  The <command>alsamixer</command> has a graphical interface when started from the Gnome menu or as <command>gnome-alsamixer</command> from the command line.  The <command>kmix</command> tool does the same in KDE.</para>
<para>Regardless of how you choose to listen to music or other sounds, remember that there may be other people who may not be interested in hearing you or your 
computer.  Try to be courteous, especially in office environments.  And use a qu
ality head-set.</para>
</sect3>
</sect2>
<sect2 id="sect_11_02_03"><title>Recording</title>
<para>Various tools are again available that allow you to record voice and music.  For recording voice you can use <command>arecord</command> on the command line:</para>
<screen>
<prompt>alexey@russia:~&gt;</prompt> <command>arecord <filename>/var/tmp/myvoice.wav</filename></command>
Recording WAVE '/var/tmp/myvoice.wav' : Unsigned 8 bit, Rate 8000 Hz, Mono
Aborted by signal Interrups...
</screen>
<para><quote>Interrupt</quote> means that the application has caught a <keycap>Ctrl</keycap>+<keycap>C</keycap>.  Play the sample using the simple <command>play</command> command.</para>
<para>This is a good test that you can execute prior to testing applications that need voice input, like Voice over IP (VoIP).  Keep in mind that the microphone input should be activated.  If you don't hear your own voice, check your sound settings.  It often happens that the microphone is muted or on verry low volume.  This can be easily adjusted using <command>alsamixer</command> or your distribution-specific graphical interface to the sound system.</para>
</sect2>
</sect1>
<sect1 id="sect_11_02_04"><title>Video playing, streams and television watching</title>
<para>Various players are available:</para>
<itemizedlist>
<listitem><para><command>xine</command>: a free video player</para></listitem>
<listitem><para><command>ogle</command>: DVD player.</para></listitem>
<listitem><para><command>okle</command>: KDE version of <command>ogle</command></para></listitem>
<listitem><para><command>mplayer</command>: Movie Player for Linux</para></listitem>
<listitem><para><command>gstreamer</command>: upcoming multimedia framework project developing the GStreamer library and accompanying tools for audio and video 
recording, editing and playing, to be included in Gnome.  See <ulink url="http://www.gstreamer.net">http://www.gstreamer.net</ulink> for more.</para></listitem>
<listitem><para><command>totem</command>: plays both audio and video files, audio CDs, VCD and DVD.</para></listitem>
<listitem><para><command>realplay</command>: from RealNetworks.</para></listitem>
<listitem><para><command>hxplay</command>: a Real alternative, see <ulink url="http://www.helixdna.org">HelixDNA</ulink>.</para></listitem>
</itemizedlist>
<para>Most likely, you will find one of these in your graphical menus.</para>
<para>The <ulink url="http://www.tldp.org/">LDP</ulink> released a new document recently that is very appropriate for this section.  It is entitled <ulink url="http://www.tldp.org/HOWTO/DVD-Playback-HOWTO/index.html">DVD Playback HOWTO</ulink> and describes the different tools available for viewing movies on a system that has a DVD drive.  It is a fine addition to the <ulink url="http://www.tldp.org/HOWTO/DVD-HOWTO.html">DVD HOWTO</ulink> that explains installation of the drive.</para>
 <para>For watching TV there is choice of the following tools, among many others for watching and capturing TV, video and other streams:</para>
 <itemizedlist>
<listitem><para><command>tvtime</command>: great program with station management, interaction with teletext, film mode and <ulink url="http://tvtime.sourceforge .net/">much more</ulink>.</para></listitem>
<listitem><para><command>zapping</command>: Gnome-specific TV viewer.</para></listitem>
<listitem><para><command>xawtv</command>: X11 TV viewer.</para></listitem>
</itemizedlist>
</sect1>
<sect1 id="sect_11_02_05"><title>Internet Telephony</title>
<sect2 id="sect_11_02_05_01"><title>What is it?</title>
<para>Internet telephony, or more common, Voice over IP (VoIP) or digital telephony allows parties to exchange voice data flows over the network.  The big difference is that the data flows over a general purpose network, the Internet, contrary to conventional telephony, that uses a dedicated network of voice transmission lines.  The two networks can be connected, however, under special circumstances, but for now this is certainly not a standard.  In other words: it is very likely that you will not be able to call people who are using a conventional telephone.</para>
<para>While there are currently various applications available for free download, both free and proprietary, there are some major drawbacks to telephony over the Internet.  Most noticably, the system is unreliable, it can be slow or there can be a lot of noise on the connection, and it can thus certainly not be used to replace conventional telephony - think about emergency calls.  While some providers take their precautions, there is no guarantee that you can reach the party that you want to call.</para>
</sect2>
<sect2 id="sect_11_05_02"><title>What do you need?</title>
<sect3 id="sect_11_05_02_01"><title>Server Side</title>
<para>First of all, you need a provider offering the service.  This service might integrate traditional telephony and it might or might not be free.  Among others are <ulink url="http://www.sipphone.com/">SIPphone</ulink>, <ulink url="http://www.vonage.com/">Vonage</ulink>, <ulink url="http://www.lingo.com/">Lingo</ulink>, <ulink url="http://www.totaltalk.com/">AOL TotalTalk</ulink> and many locally accessible providers offering the so-called <quote>full phone service</quote>.  Internet phone service only is offered by <ulink url="http://www.skype.com/">Skype</ulink>, <ulink url="http://www.sipbroker.com/">SIP Broker</ulink>, <ulink url="http://www.google.com/talk/">Google</ulink> and many others.</para>
<para>If you want to set up a server of your own, you might want to look into <ulink url="http://www.asterisk.org">Asterisk</ulink>, <ulink url="http://gizmoproject.com/">Gizmo</ulink> or <ulink url="http://www.gnomemeeting.org/">GnomeMeeting</ulink>, just to name some.</para>
</sect3>
<sect3 id="sect_11_05_02_02"><title>Client Side</title>
<para>On the client side, the applications that you can use depend on your network configuration.  If you have a direct Internet connection, there won't be any problems, provided that you know on what server you can connect, and usually that you also have a username and password to authenticate to the service.</para>
<para>If you are behind a firewall that does Network Address Translation (NAT), however, some services might not work, as they will only see the IP address of the firewall and not the address of your computer, which might well be unroutable over the Internet, for instance when you are in a company network and your IP address starts with 10., 192.168. or another non-routable subnet prefix.  This depends on the protocol that is used by the application.</para>
<para>Also, available bandwidth might be a blocking factor: some applications are optimized for low bandwidth consumption, while others might require high bandwidth connections.  This depends on the codec that is used by the application.</para>
<para>Among the most common applications are the Skype client, which has an interface that reminds of instant messaging, and <ulink url="http://www.counterpath.com/">X-Lite</ulink>, the free version of the <application>XTen softphone</application>, which looks like a mobile telephone.  However, while these programs are available for free download and very popular, they are not free as in free speech: they use proprietary protocols and/or are only available in binary packages, not in source format.</para>
<para>Free <emphasis>and open</emphasis> VoIP clients are for instance <ulink url="http://www.gnomemeeting.org/">GnomeMeeting</ulink> and <ulink url="http://www.wirlab.net/kphone/">KPhone</ulink>.</para>
<tip><title>Client hardware</title>
<para>While your computer, especially if it is a laptop PC, might have a built-in microphone, the result will be far better if you connect a headset.  If you have the choice, opt for a USB headset, as it functions independently from existing audio hardware.</para>
</tip>
<para>VoIP applications are definitely a booming market.  Volunteers try to document the current status at <ulink url="http://www.voip-info.org/"></ulink>.</para>
</sect3>
</sect2>
</sect1>
<sect1 id="sect_11_03"><title>Summary</title>
<para>The GNU/Linux platform is fully multi-media enabled.  A wide variety of devices like sound cards, tv-cards, headsets, microphones, CD and DVD players is supported.  The list of applications is sheer endless.</para>
</sect1>
<sect1 id="sect_11_04"><title>Exercises</title>
<orderedlist>
<listitem><para>Can you play an audio CD on your system?</para></listitem>
<listitem><para>Using the <command>locate</command> command, find a <filename>.wav</filename>, <filename>.ogg</filename> or <filename>.mp3</filename> on your system.  Play it.</para></listitem>
<listitem><para>Can you adjust the output volume?</para></listitem>
<listitem><para>Can you record a sample of your own voice?  (You need a microphone for this exercise.)  Can you play the sample?</para></listitem>
<listitem><para>Using the graphical interface, check what GUI applications are available on your system for playing sounds, recording and volume adjustment.</para></listitem>
</orderedlist>
</sect1>
<sect1 id="sect_11_05"><title>Exercises</title>
<para>The following exercises will help you to get to know your system.</para>
<orderedlist>
<listitem><para>From the Gnome or KDE menu, open your sound configuration panel.  Make sure audio boxes or headset are connected to your system and find an output level that is comfortable for you.  Make sure, when your system is ALSA-compatible, that you use the appropriate panel.</para></listitem>
<listitem><para>If you have a microphone, try recording a sample of your own voice.  Make sure the input volume is not too high, as this will result in high-pitched tones when you communicate with others, or in transfering background noise to the other party.  On the command line, you might even try to use <command>arecord</command> and <command>aplay</command> for recording and playing sound.</para></listitem>
<listitem><para>Locate sound files on your system and try to play them.</para></listitem>
<listitem><para>Insert an audio CD and try to play it.</para></listitem>
<listitem><para>Find a chat partner and configure a VoIP program.  (You might need to install one first.)</para></listitem>
<listitem><para>Can you listen to Internet radio?</para></listitem>
<listitem><para>If you have a DVD player and a movie on a DVD disk, try to play it.</para></listitem>
</orderedlist>

</sect1>
</chapter>
 <appendix id="app1">
    <title>Where to go from here?</title>
    <abstract>
        <para>This document gives an overview of useful books and sites.</para>
    </abstract>
    <sect1>
        <title>Useful Books</title>
        <sect2>
            <title>General Linux</title>
            <itemizedlist>
                <listitem>
                    <para>"Linux in a Nutshell" by Ellen Siever, Jessica P. Hackman, Stephen
                        SPainhour, Stephen Figgins, O'Reilly UK, ISBN 0596000251</para>
                </listitem>
                <listitem>
                    <para>"Running Linux" by Matt Welsh, Matthias Kalle Dalheimer, Lar Kaufman,
                        O'Reilly UK, ISBN 156592469X</para>
                </listitem>
                <listitem>
                    <para>"Linux Unleashed" by Tim Parker, Bill Ball, David Pitts, Sams, ISBN 0672316889</para>
                </listitem>
                <listitem>
                    <para>"When You Can't Find Your System Administrator" by Linda Mui, O'Reilly UK,
                        ISBN 1565921046</para>
                </listitem>
                <listitem>
                    <para>When you actually buy a distribution, it will contain a very decent user manual.</para>
                </listitem>
            </itemizedlist>
        </sect2>
        <sect2>
            <title>Editors</title>
            <itemizedlist>
                <listitem>
                    <para>"Learning the Vi Editor" by Linda Lamb and Arnold Robbins, O'Reilly UK,
                        ISBN 1565924266</para>
                </listitem>
                <listitem>
                    <para>"GNU Emacs Manual" by Richard M.Stallman, iUniverse.Com Inc., ISBN 0595100333</para>
                </listitem>
                <listitem>
                    <para>"Learning GNU Emacs" by Debra Cameron, Bill Rosenblatt and Eric Raymond,
                        O'Reilly UK, ISBN 1565921526</para>
                </listitem>
                <listitem>
                    <para>"Perl Cookbook" by Tom Christiansen and Nathan Torkington, O'Reilly UK,
                        ISBN 1565922433</para>
                </listitem>
            </itemizedlist>
        </sect2>
        <sect2>
            <title>Shells</title>
            <itemizedlist>
                <listitem>
                    <para>"Unix Shell Programming" by Stephen G.Kochan and Patrick H.Wood, Sams
                        Publishing, ISBN 067248448X</para>
                </listitem>
                <listitem>
                    <para>"Learning the Bash Shell" by Cameron Newham and Bill Rosenblatt, O'Reilly
                        UK, ISBN 1565923472</para>
                </listitem>
                <listitem>
                    <para>"The Complete Linux Shell Programming Training Course" by Ellie Quigley
                        and Scott Hawkins, Prentice Hall PTR, ISBN 0130406767</para>
                </listitem>
                <listitem>
                    <para>"Linux and Unix Shell Programming" by David Tansley, Addison Wesley
                        Publishing Company, ISBN 0201674726</para>
                </listitem>
                <listitem>
                    <para>"Unix C Shell Field Guide" by Gail and Paul Anderson, Prentice Hall, ISBN 013937468X</para>
                </listitem>
            </itemizedlist>
        </sect2>
        <sect2>
            <title>X Windows</title>
            <itemizedlist>
                <listitem>
                    <para>"Gnome User's Guide" by the Gnome Community, iUniverse.Com Inc., ISBN 0595132251</para>
                </listitem>
                <listitem>
                    <para>"KDE Bible" by Dave Nash, Hungry Minds Inc., ISBN 0764546929</para>
                </listitem>
                <listitem>
                    <para>"The Concise Guide to XFree86 for Linux" by Aron HSiao, Que, ISBN 0789721821</para>
                </listitem>
                <listitem>
                    <para>"The New XFree86" by Bill Ball, Prima Publishing, ISBN 0761531521</para>
                </listitem>
                <listitem>
                    <para>"Beginning GTK+ and Gnome" by Peter Wright, Wrox Press, ISBN 1861003811</para>
                </listitem>
                <listitem>
                    <para>"KDE 2.0 Development" by David Sweet and Matthias Ettrich, Sams
                        Publishing, ISBN 0672318911</para>
                </listitem>
                <listitem>
                    <para>"GTK+/Gnome Application Development" by Havoc Pennington, New Riders
                        Publishing, ISBN 0735700788</para>
                </listitem>
            </itemizedlist>
        </sect2>
        <sect2>
            <title>Networking</title>
            <itemizedlist>
                <listitem>
                    <para>"TCP/IP Illustrated, Volume I: The Protocols" by W. Richard Stevens,
                        Addison-Wesley Professional Computing Series, ISBN 0-201-63346-9</para>
                </listitem>
                <listitem>
                    <para>"DNS and BIND" by Paul Albitz, Cricket Liu, Mike Loukides and Deborah
                        Russell, O'Reilly &amp; Associates, ISBN 0596001584</para>
                </listitem>
                <listitem>
                    <para>"The Concise Guide to DNS and BIND" by Nicolai Langfeldt, Que, ISBN 0789722739</para>
                </listitem>
                <listitem>
                    <para>"Implementing LDAP" by Mark Wilcox, Wrox Press, ISBN 1861002211</para>
                </listitem>
                <listitem>
                    <para>"Understanding and deploying LDAP directory services" by Tim Howes and
                        co., Sams, ISBN 0672323168</para>
                </listitem>
                <listitem>
                    <para>"Sendmail" by Brian Costales and Eric Allman, O'Reilly UK, ISBN 1565922220</para>
                </listitem>
                <listitem>
                    <para>"Removing the Spam : Email Processing and Filtering" by Geoff Mulligan,
                        Addison Wesley Publishing Company, ISBN 0201379570</para>
                </listitem>
                <listitem>
                    <para>"Managing IMAP" by Dianna &amp; Kevin Mullet, O'Reilly UK, ISBN 059600012X</para>
                </listitem>
            </itemizedlist>
        </sect2>
    </sect1>
    <sect1>
        <title>Useful sites</title>
        <sect2>
            <title>General information</title>
            <itemizedlist>
                <listitem>
                    <para>
                        <ulink url="http://www.tldp.org">The Linux documentation project</ulink>:
                        all docs, manpages, HOWTOs, FAQs</para>
                </listitem>
		<listitem>
		    <para>
		    	<ulink url="http://www.linuxquestions.org">LinuxQuestions.org</ulink>: forum, downloads, docs and much more</para>
		</listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.google.com/linux">Google for Linux</ulink>: the
                        specialized search engine</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.deja.com">Deja</ulink>: an archive of all newsgroup
                        postings, including the comp.os.linux hierarchy</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://slashdot.org">Slashdot</ulink>: daily news</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.oreilly.com">http://www.oreilly.com</ulink>: books on
                        Linux System and Network administration, Perl, Java, ...</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.posix.com/posix.html">POSIX</ulink>: the standard</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.linuxhq.com">Linux HQ</ulink>: Maintains a complete
                        database of source, patches and documentation for various versions of the
                        Linux kernel.</para>
                </listitem>
            </itemizedlist>
        </sect2>
        <sect2>
            <title>Architecture Specific References</title>
            <itemizedlist>
                <listitem>
                    <para>
                        <ulink url="http://www.linuxppc.org">Linux PPC</ulink>: Linux on a Power PC
                        (e.g. Apple PowerPC, PowerMac, Amiga, IBM ThinkPad/PowerSeries/RS/6000, Motorola...)</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.alphalinux.org">AlphaLinux</ulink>: Linux on Alpha
                        architecture (e.g. Digital Workstation)</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.linux-mips.org">Linux-MIPS</ulink>: Linux on MIPS
                        (e.g. SGI Indy)</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://tldp.org/LDP/Mobile-Guide/html/index.html">Linux on the Road</ulink>: Specific guidelines for installing and running Linux on
                        laptops, PDAs, mobile phones and so on.  Configuration files for various models.</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.mklinux.org">MkLinux</ulink>: Linux on Apple</para>
                </listitem>
            </itemizedlist>
        </sect2>
        <sect2>
            <title>Distributions</title>
            <itemizedlist>
                <listitem>
                    <para>
                        <ulink url="http://fedora.redhat.com/">The Fedora Project</ulink>:
                        RedHat-sponsored community effort OS.</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.mandriva.com">Mandriva</ulink>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.debian.org">Debian</ulink>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.turbolinux.com">TurboLinux</ulink>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.slackware.com">Slackware</ulink>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.suse.de">SuSE</ulink>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.linuxiso.org">LinuxISO.org</ulink>: CD images for all distributions.</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.knoppix.org/">Knoppix</ulink>: distribution that runs
                        from a CD, you don't need to install anything for this one.</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.distrowatch.com/">DistroWatch.com</ulink>: find a
                        Linux that goes with your style.</para>
                </listitem>
                <listitem>
                    <para>...</para>
                </listitem>
            </itemizedlist>
        </sect2>
        <sect2>
            <title>Software</title>
            <itemizedlist>
                <listitem>
                    <para>
                        <ulink url="http://freshmeat.net">Freshmeat</ulink>: new software, software archives</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.openssh.org">OpenSSH</ulink>: Secure SHell site</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.openoffice.org">OpenOffice</ulink>: MS compatible
                        Office Suite</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.kde.org">KDE</ulink>: K Desktop site</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.gnu.org">GNU</ulink>: GNU and GNU software</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.gnome.org">Gnome</ulink>: The official Gnome site</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.ximian.com">Ximian</ulink>: Ximian Gnome, Red Carpet
                        package management system for StarOffice, Opera, CodeWeavers, Loki Demos,
                        Evolution, system packages, ...</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.rpmfind.net">RPM Find</ulink>: all RPM packages</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.samba.org">Samba</ulink>: MS Windows file and print services</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.openldap.org">Home of the OpenLDAP Project</ulink>:
                        OpenLDAP server/clients/utilities, FAQ and other documentation.</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.sendmail.org">Sendmail Homepage</ulink>: A thorough
                        technical discussion of Sendmail features, includes configuration examples.</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://netfilter.samba.org">Netfilter</ulink>: contains assorted
                        information about iptables: HOWTO, FAQ, guides, ...</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.gimp.org">Official GIMP website</ulink>: All
                        information about the GNU Image Manipulation Program.</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://sourceforge.net/">SourceForge.net</ulink>: Open SOurce
                        software development site.</para>
                </listitem>
                <listitem>
                    <para>
                        <ulink url="http://www.vim.org/">vIm homepage</ulink>
                    </para>
                </listitem>
            </itemizedlist>
        </sect2>
    </sect1>
</appendix>
 <appendix id="app2">
    <title>DOS versus Linux commands</title>
    <abstract>
        <para>In this appendix, we matched DOS commands with their Linux equivalent.</para>
    </abstract>
    <para>As an extra means of orientation for new users with a Windows background, the table below
        lists MS-DOS commands with their Linux counterparts. Keep in mind that Linux commands
        usually have a number of options. Read the Info or man pages on the command to find out more.</para>
    <table frame="all">
        <title>Overview of DOS/Linux commands</title>
        <tgroup align="left" cols="2" colsep="1" rowsep="1">
            <thead>
                <row>
                    <entry>DOS commands</entry>
                    <entry>Linux command</entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry>
                        <command>&lt;command&gt; /?</command>
                    </entry>
                    <entry>
                        <command>man &lt;command&gt;</command> or <command>command <option>--help</option></command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>cd</command>
                    </entry>
                    <entry>
                        <command>cd</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>chdir</command>
                    </entry>
                    <entry>
                        <command>pwd</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>cls</command>
                    </entry>
                    <entry>
                        <command>clear</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>copy</command>
                    </entry>
                    <entry>
                        <command>cp</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>date</command>
                    </entry>
                    <entry>
                        <command>date</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>del</command>
                    </entry>
                    <entry>
                        <command>rm</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>dir</command>
                    </entry>
                    <entry>
                        <command>ls</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>echo</command>
                    </entry>
                    <entry>
                        <command>echo</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>edit</command>
                    </entry>
                    <entry>
                        <command>vim (or other editor)</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>exit</command>
                    </entry>
                    <entry>
                        <command>exit</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>fc</command>
                    </entry>
                    <entry>
                        <command>diff</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>find</command>
                    </entry>
                    <entry>
                        <command>grep</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>format</command>
                    </entry>
                    <entry>
                        <command>mke2fs or mformat</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>mem</command>
                    </entry>
                    <entry>
                        <command>free</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>mkdir</command>
                    </entry>
                    <entry>
                        <command>mkdir</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>more</command>
                    </entry>
                    <entry>
                        <command>more or even less</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>move</command>
                    </entry>
                    <entry>
                        <command>mv</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>ren</command>
                    </entry>
                    <entry>
                        <command>mv</command>
                    </entry>
                </row>
                <row>
                    <entry>
                        <command>time</command>
                    </entry>
                    <entry>
                        <command>date</command>
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </table>
</appendix>
 <appendix id="app3">
    <title>Shell Features</title>
    <abstract>
        <para>This document gives an overview of common shell features (the same in every shell
            flavour) and differing shell features (shell specific features).</para>
    </abstract>
    <sect1>
        <title>Common features</title>
        <para> The following features are standard in every shell. Note that the stop, suspend,
            jobs, bg and fg commands are only available on systems that support job control.</para>
        <table frame="all">
            <title>Common Shell Features</title>
            <tgroup align="left" cols="2" colsep="1" rowsep="1">
                <thead>
                    <row>
                        <entry>Command</entry>
                        <entry>Meaning</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>&gt;</entry>
                        <entry>Redirect output</entry>
                    </row>
                    <row>
                        <entry>&gt;&gt;</entry>
                        <entry>Append to file</entry>
                    </row>
                    <row>
                        <entry>&lt;</entry>
                        <entry>Redirect input</entry>
                    </row>
                    <row>
                        <entry>&lt;&lt;</entry>
                        <entry>"Here" document (redirect input)</entry>
                    </row>
                    <row>
                        <entry>|</entry>
                        <entry>Pipe output</entry>
                    </row>
                    <row>
                        <entry>&amp;</entry>
                        <entry>Run process in background.</entry>
                    </row>
                    <row>
                        <entry>;</entry>
                        <entry>Separate commands on same line</entry>
                    </row>
                    <row>
                        <entry>*</entry>
                        <entry>Match any character(s) in filename</entry>
                    </row>
                    <row>
                        <entry>?</entry>
                        <entry>Match single character in filename</entry>
                    </row>
                    <row>
                        <entry>[ ]</entry>
                        <entry>Match any characters enclosed</entry>
                    </row>
                    <row>
                        <entry>( )</entry>
                        <entry>Execute in subshell</entry>
                    </row>
                    <row>
                        <entry>` `</entry>
                        <entry>Substitute output of enclosed command</entry>
                    </row>
                    <row>
                        <entry>" "</entry>
                        <entry>Partial quote (allows variable and command expansion)</entry>
                    </row>
                    <row>
                        <entry>' '</entry>
                        <entry>Full quote (no expansion)</entry>
                    </row>
                    <row>
                        <entry>\</entry>
                        <entry>Quote following character</entry>
                    </row>
                    <row>
                        <entry>$var</entry>
                        <entry>Use value for variable</entry>
                    </row>
                    <row>
                        <entry>$$</entry>
                        <entry>Process id</entry>
                    </row>
                    <row>
                        <entry>$0</entry>
                        <entry>Command name</entry>
                    </row>
                    <row>
                        <entry>$n</entry>
                        <entry>nth argument (n from 0 to 9)</entry>
                    </row>
                    <row>
                        <entry>$*</entry>
                        <entry>All arguments as a simple word</entry>
                    </row>
                    <row>
                        <entry>
                            <literal>#</literal>
                        </entry>
                        <entry>Begin comment</entry>
                    </row>
                    <row>
                        <entry>bg</entry>
                        <entry>Background execution</entry>
                    </row>
                    <row>
                        <entry>break</entry>
                        <entry>Break from loop statements</entry>
                    </row>
                    <row>
                        <entry>cd</entry>
                        <entry>Change directories</entry>
                    </row>
                    <row>
                        <entry>continue</entry>
                        <entry>Resume a program loop</entry>
                    </row>
                    <row>
                        <entry>echo</entry>
                        <entry>Display output</entry>
                    </row>
                    <row>
                        <entry>eval</entry>
                        <entry>Evaluate arguments</entry>
                    </row>
                    <row>
                        <entry>exec</entry>
                        <entry>Execute a new shell</entry>
                    </row>
                    <row>
                        <entry>fg</entry>
                        <entry>Foreground execution</entry>
                    </row>
                    <row>
                        <entry>jobs</entry>
                        <entry>Show active jobs</entry>
                    </row>
                    <row>
                        <entry>kill</entry>
                        <entry>Terminate running jobs</entry>
                    </row>
                    <row>
                        <entry>newgrp</entry>
                        <entry>Change to a new group</entry>
                    </row>
                    <row>
                        <entry>shift</entry>
                        <entry>Shift positional parameters</entry>
                    </row>
                    <row>
                        <entry>stop</entry>
                        <entry>Suspend a background job</entry>
                    </row>
                    <row>
                        <entry>suspend</entry>
                        <entry>Suspend a foreground job</entry>
                    </row>
                    <row>
                        <entry>time</entry>
                        <entry>Time a command</entry>
                    </row>
                    <row>
                        <entry>umask</entry>
                        <entry>Set or list file permissions</entry>
                    </row>
                    <row>
                        <entry>unset</entry>
                        <entry>Erase variable or function definitions</entry>
                    </row>
                    <row>
                        <entry>wait</entry>
                        <entry>Wait for a background job to finish</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
    </sect1>
    <sect1>
        <title>Differing features</title>
        <para>The table below shows major differences between the standard shell
            (<command>sh</command>), Bourne Again SHell (<command>bash</command>), Korn shell
            (<command>ksh</command>) and the C shell (<command>csh</command>).</para>
        <note>
            <title>Shell compatibility</title>
            <para>Since the Bourne Again SHell is a superset of <command>sh</command>, all
                <command>sh</command> commands will also work in <command>bash</command> - but not
                vice versa. <command>bash</command> has many more features of its own, and, as the
                table below demonstrates, many features incorporated from other shells.</para>
            <para>Since the Turbo C shell is a superset of <command>csh</command>, all
                <command>csh</command> commands will work in <command>tcsh</command>, but not the
                other way round.</para>
        </note>
        <table frame="all">
            <title>Differing Shell Features</title>
            <tgroup align="left" cols="5" colsep="1" rowsep="1">
                <thead>
                    <row>
                        <entry>
                            <command>sh</command>
                        </entry>
                        <entry>
                            <command>bash</command>
                        </entry>
                        <entry>
                            <command>ksh</command>
                        </entry>
                        <entry>
                            <command>csh</command>
                        </entry>
                        <entry>Meaning/Action</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>$</entry>
                        <entry>$</entry>
                        <entry>$</entry>
                        <entry>%</entry>
                        <entry>Default user prompt</entry>
                    </row>
                    <row>
                        <entry></entry>
                        <entry>
                            <command>&gt;|</command>
                        </entry>
                        <entry>
                            <command>&gt;|</command>
                        </entry>
                        <entry>
                            <command>&gt;!</command>
                        </entry>
                        <entry>Force redirection</entry>
                    </row>
                    <row>
                        <entry>
                            <command>&gt; <filename>file</filename> 2&gt;&amp;1</command>
                        </entry>
                        <entry>
                            <command>&amp;&gt; <filename>file</filename>
                            </command> or <command>&gt; <filename>file</filename> 2&gt;&amp;1</command>
                        </entry>
                        <entry>
                            <command>&gt; <filename>file</filename> 2&gt;&amp;1</command>
                        </entry>
                        <entry>
                            <command>&gt;&amp; <filename>file</filename>
                            </command>
                        </entry>
                        <entry>Redirect stdout and stderr to <filename>file</filename>
                        </entry>
                    </row>
                    <row>
                        <entry></entry>
                        <entry>
                            <command>{ }</command>
                        </entry>
                        <entry></entry>
                        <entry>
                            <command>{ }</command>
                        </entry>
                        <entry>Expand elements in list</entry>
                    </row>
                    <row>
                        <entry>
                            <command>`command`</command>
                        </entry>
                        <entry>
                            <command>`command`</command> or <command>$(command)</command>
                        </entry>
                        <entry>
                            <command>$(command)</command>
                        </entry>
                        <entry>
                            <command>`command`</command>
                        </entry>
                        <entry>Substitute output of enclosed <command>command</command>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <varname>$HOME</varname>
                        </entry>
                        <entry>
                            <varname>$HOME</varname>
                        </entry>
                        <entry>
                            <varname>$HOME</varname>
                        </entry>
                        <entry>
                            <varname>$home</varname>
                        </entry>
                        <entry>Home directory</entry>
                    </row>
                    <row>
                        <entry></entry>
                        <entry>~</entry>
                        <entry>~</entry>
                        <entry>~</entry>
                        <entry>Home directory symbol</entry>
                    </row>
                    <row>
                        <entry></entry>
                        <entry>
                            <filename>~+</filename>, <filename>~-</filename>, <command>dirs</command>
                        </entry>
                        <entry>
                            <filename>~+</filename>, <filename>~-</filename>
                        </entry>
                        <entry>
                            <filename>=-</filename>, <filename>=N</filename>
                        </entry>
                        <entry>Access directory stack</entry>
                    </row>
                    <row>
                        <entry>
                            <command>
                                <varname>var</varname>=value</command>
                        </entry>
                        <entry>
                            <command>
                                <varname>VAR</varname>=value</command>
                        </entry>
                        <entry>
                            <command>
                                <varname>var</varname>=value</command>
                        </entry>
                        <entry>
                            <command>set <varname>var</varname>=value</command>
                        </entry>
                        <entry>Variable assignment</entry>
                    </row>
                    <row>
                        <entry>
                            <command>export <varname>var</varname>
                            </command>
                        </entry>
                        <entry>
                            <command>export <varname>VAR</varname>=value</command>
                        </entry>
                        <entry>
                            <command>export <varname>var</varname>=val</command>
                        </entry>
                        <entry>
                            <command>setenv <varname>var</varname>
                                <parameter>val</parameter>
                            </command>
                        </entry>
                        <entry>Set environment variable</entry>
                    </row>
                    <row>
                        <entry></entry>
                        <entry>
                            <varname>${nnnn}</varname>
                        </entry>
                        <entry>
                            <varname>${nn}</varname>
                        </entry>
                        <entry></entry>
                        <entry>More than 9 arguments can be referenced</entry>
                    </row>
                    <row>
                        <entry>"<varname>$@</varname>"</entry>
                        <entry>"<varname>$@</varname>"</entry>
                        <entry>"<varname>$@</varname>"</entry>
                        <entry></entry>
                        <entry>All arguments as separate words</entry>
                    </row>
                    <row>
                        <entry>
                            <varname>$#</varname>
                        </entry>
                        <entry>
                            <varname>$#</varname>
                        </entry>
                        <entry>
                            <varname>$#</varname>
                        </entry>
                        <entry>
                            <varname>$#argv</varname>
                        </entry>
                        <entry>Number of arguments</entry>
                    </row>
                    <row>
                        <entry>
                            <varname>$?</varname>
                        </entry>
                        <entry>
                            <varname>$?</varname>
                        </entry>
                        <entry>
                            <varname>$?</varname>
                        </entry>
                        <entry>
                            <varname>$status</varname>
                        </entry>
                        <entry>Exit status of the most recently executed command</entry>
                    </row>
                    <row>
                        <entry>
                            <varname>$!</varname>
                        </entry>
                        <entry>
                            <varname>$!</varname>
                        </entry>
                        <entry>
                            <varname>$!</varname>
                        </entry>
                        <entry></entry>
                        <entry>PID of most recently backgrounded process</entry>
                    </row>
                    <row>
                        <entry>
                            <varname>$-</varname>
                        </entry>
                        <entry>
                            <varname>$-</varname>
                        </entry>
                        <entry>
                            <varname>$-</varname>
                        </entry>
                        <entry></entry>
                        <entry>Current options</entry>
                    </row>
                    <row>
                        <entry>
                            <command>. <filename>file</filename>
                            </command>
                        </entry>
                        <entry>
                            <command>source <filename>file</filename>
                            </command> or <command>. <filename>file</filename>
                            </command>
                        </entry>
                        <entry>
                            <command>. <filename>file</filename>
                            </command>
                        </entry>
                        <entry>
                            <command>source <filename>file</filename>
                            </command>
                        </entry>
                        <entry>Read commands in file</entry>
                    </row>
                    <row>
                        <entry></entry>
                        <entry>
                            <command>alias x='y'</command>
                        </entry>
                        <entry>
                            <command>alias x=y</command>
                        </entry>
                        <entry>
                            <command>alias x y</command>
                        </entry>
                        <entry>Name <command>x</command> stands for command <command>y</command>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <command>case</command>
                        </entry>
                        <entry>
                            <command>case</command>
                        </entry>
                        <entry>
                            <command>case</command>
                        </entry>
                        <entry>
                            <command>switch</command> or <command>case</command>
                        </entry>
                        <entry>Choose alternatives</entry>
                    </row>
                    <row>
                        <entry>
                            <command>done</command>
                        </entry>
                        <entry>
                            <command>done</command>
                        </entry>
                        <entry>
                            <command>done</command>
                        </entry>
                        <entry>
                            <command>end</command>
                        </entry>
                        <entry>End a loop statement</entry>
                    </row>
                    <row>
                        <entry>
                            <command>esac</command>
                        </entry>
                        <entry>
                            <command>esac</command>
                        </entry>
                        <entry>
                            <command>esac</command>
                        </entry>
                        <entry>
                            <command>endsw</command>
                        </entry>
                        <entry>End <command>case</command> or <command>switch</command>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <command>exit <parameter>n</parameter>
                            </command>
                        </entry>
                        <entry>
                            <command>exit <parameter>n</parameter>
                            </command>
                        </entry>
                        <entry>
                            <command>exit <parameter>n</parameter>
                            </command>
                        </entry>
                        <entry>
                            <command>exit <parameter>(expr)</parameter>
                            </command>
                        </entry>
                        <entry>Exit with a status</entry>
                    </row>
                    <row>
                        <entry>
                            <command>for</command>/<command>do</command>
                        </entry>
                        <entry>
                            <command>for</command>/<command>do</command>
                        </entry>
                        <entry>
                            <command>for</command>/<command>do</command>
                        </entry>
                        <entry>
                            <command>foreach</command>
                        </entry>
                        <entry>Loop through variables</entry>
                    </row>
                    <row>
                        <entry></entry>
                        <entry>
                            <command>set <option>-f</option>
                            </command>, <command>set <option>-o nullglob|dotglob|nocaseglob|noglob</option>
                            </command>
                        </entry>
                        <entry></entry>
                        <entry>
                            <command>noglob</command>
                        </entry>
                        <entry>Ignore substitution characters for filename generation</entry>
                    </row>
                    <row>
                        <entry>
                            <command>hash</command>
                        </entry>
                        <entry>
                            <command>hash</command>
                        </entry>
                        <entry>
                            <command>alias <option>-t</option>
                            </command>
                        </entry>
                        <entry>
                            <command>hashstat</command>
                        </entry>
                        <entry>Display hashed commands (tracked aliases)</entry>
                    </row>
                    <row>
                        <entry>
                            <command>hash <parameter>cmds</parameter>
                            </command>
                        </entry>
                        <entry>
                            <command>hash <parameter>cmds</parameter>
                            </command>
                        </entry>
                        <entry>
                            <command>alias <option>-t</option>
                                <parameter>cmds</parameter>
                            </command>
                        </entry>
                        <entry>
                            <command>rehash</command>
                        </entry>
                        <entry>Remember command locations</entry>
                    </row>
                    <row>
                        <entry>
                            <command>hash <option>-r</option>
                            </command>
                        </entry>
                        <entry>
                            <command>hash <option>-r</option>
                            </command>
                        </entry>
                        <entry></entry>
                        <entry>
                            <command>unhash</command>
                        </entry>
                        <entry>Forget command locations</entry>
                    </row>
                    <row>
                        <entry></entry>
                        <entry>
                            <command>history</command>
                        </entry>
                        <entry>
                            <command>history</command>
                        </entry>
                        <entry>
                            <command>history</command>
                        </entry>
                        <entry>List previous commands</entry>
                    </row>
                    <row>
                        <entry></entry>
                        <entry>
                            <keycap>ArrowUp</keycap>+<keycap>Enter</keycap> or <command>!!</command>
                        </entry>
                        <entry>
                            <command>r</command>
                        </entry>
                        <entry>
                            <command>!!</command>
                        </entry>
                        <entry>Redo previous command</entry>
                    </row>
                    <row>
                        <entry></entry>
                        <entry>
                            <command>!<parameter>str</parameter>
                            </command>
                        </entry>
                        <entry>
                            <command>r <parameter>str</parameter>
                            </command>
                        </entry>
                        <entry>
                            <command>!<parameter>str</parameter>
                            </command>
                        </entry>
                        <entry>Redo last command that starts with <quote>str</quote>
                        </entry>
                    </row>
                    <row>
                        <entry></entry>
                        <entry>
                            <command>!<parameter>cmd</parameter>:s/<parameter>x</parameter>/<parameter>y</parameter>/</command>
                        </entry>
                        <entry>
                            <command>r <parameter>x</parameter>=<parameter>y</parameter>
                                <parameter>cmd</parameter>
                            </command>
                        </entry>
                        <entry>
                            <command>!<parameter>cmd</parameter>:s/<parameter>x</parameter>/<parameter>y</parameter>/</command>
                        </entry>
                        <entry>Replace <quote>x</quote> with <quote>y</quote> in most recent command
                            starting with <quote>cmd</quote>, then execute.</entry>
                    </row>
                    <row>
                        <entry>
                            <command>if [ <varname>$i</varname> -eq <parameter>5</parameter> ]</command>
                        </entry>
                        <entry>
                            <command>if [ <varname>$i</varname> -eq <parameter>5</parameter> ]</command>
                        </entry>
                        <entry>
                            <command>if ((<varname>i</varname>==<parameter>5</parameter>))</command>
                        </entry>
                        <entry>
                            <command>if (<varname>$i</varname>==<parameter>5</parameter>)</command>
                        </entry>
                        <entry>Sample condition test</entry>
                    </row>
                    <row>
                        <entry>
                            <command>fi</command>
                        </entry>
                        <entry>
                            <command>fi</command>
                        </entry>
                        <entry>
                            <command>fi</command>
                        </entry>
                        <entry>
                            <command>endif</command>
                        </entry>
                        <entry>End <command>if</command> statement</entry>
                    </row>
                    <row>
                        <entry>
                            <command>ulimit</command>
                        </entry>
                        <entry>
                            <command>ulimit</command>
                        </entry>
                        <entry>
                            <command>ulimit</command>
                        </entry>
                        <entry>
                            <command>limit</command>
                        </entry>
                        <entry>Set resource limits</entry>
                    </row>
                    <row>
                        <entry>
                            <command>pwd</command>
                        </entry>
                        <entry>
                            <command>pwd</command>
                        </entry>
                        <entry>
                            <command>pwd</command>
                        </entry>
                        <entry>
                            <command>dirs</command>
                        </entry>
                        <entry>Print working directory</entry>
                    </row>
                    <row>
                        <entry>
                            <command>read</command>
                        </entry>
                        <entry>
                            <command>read</command>
                        </entry>
                        <entry>
                            <command>read</command>
                        </entry>
                        <entry>
                            <command>$&lt;</command>
                        </entry>
                        <entry>Read from terminal</entry>
                    </row>
                    <row>
                        <entry>
                            <command>trap <parameter>2</parameter>
                            </command>
                        </entry>
                        <entry>
                            <command>trap <parameter>2</parameter>
                            </command>
                        </entry>
                        <entry>
                            <command>trap <parameter>2</parameter>
                            </command>
                        </entry>
                        <entry>
                            <command>onintr</command>
                        </entry>
                        <entry>Ignore interrupts</entry>
                    </row>
                    <row>
                        <entry></entry>
                        <entry>
                            <command>unalias</command>
                        </entry>
                        <entry>
                            <command>unalias</command>
                        </entry>
                        <entry>
                            <command>unalias</command>
                        </entry>
                        <entry>Remove aliases</entry>
                    </row>
                    <row>
                        <entry>
                            <command>until</command>
                        </entry>
                        <entry>
                            <command>until</command>
                        </entry>
                        <entry>
                            <command>until</command>
                        </entry>
                        <entry></entry>
                        <entry>Begin <command>until</command> loop</entry>
                    </row>
                    <row>
                        <entry>
                            <command>while</command>/<command>do</command>
                        </entry>
                        <entry>
                            <command>while</command>/<command>do</command>
                        </entry>
                        <entry>
                            <command>while</command>/<command>do</command>
                        </entry>
                        <entry>
                            <command>while</command>
                        </entry>
                        <entry>Begin <command>while</command> loop</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <para>The Bourne Again SHell has many more features not listed here. This table is just to
            give you an idea of how this shell incorporates all useful ideas from other shells:
            there are no blanks in the column for <command>bash</command>. More information on
            features found only in Bash can be retrieved from the Bash info pages, in the
                <quote>Bash Features</quote> section.</para>
        <para>More information:</para>
        <para>You should at least read one manual, being the manual of your shell. The preferred
            choice would be <command>info bash</command>, <command>bash</command> being the GNU
            shell and easiest for beginners. Print it out and take it home, study it whenever you
            have 5 minutes.</para>
        <para>See <xref linkend="app2"></xref> if you are having difficulties to assimilate shell commands.</para>
    </sect1>
</appendix>
 <appendix id="app4">
    <title>GNU Free Documentation License</title>
    <para>Version 1.1, March 2000</para>
    <blockquote>
        <para>Copyright (C) 2000 Free Software Foundation, Inc. 59 Temple Place, Suite 330, Boston,
            MA 02111-1307 USA Everyone is permitted to copy and distribute verbatim copies of this
            license document, but changing it is not allowed.</para>
    </blockquote>
    <sect1 id="gfdl-0">
        <title>Preamble</title>
        <para>The purpose of this License is to make a manual, textbook, or other written document
            "free" in the sense of freedom: to assure everyone the effective freedom to copy and
            redistribute it, with or without modifying it, either commercially or noncommercially.
            Secondarily, this License preserves for the author and publisher a way to get credit for
            their work, while not being considered responsible for modifications made by others.</para>
        <para>This License is a kind of "copyleft", which means that derivative works of the
            document must themselves be free in the same sense. It complements the GNU General
            Public License, which is a copyleft license designed for free software.</para>
        <para>We have designed this License in order to use it for manuals for free software,
            because free software needs free documentation: a free program should come with manuals
            providing the same freedoms that the software does. But this License is not limited to
            software manuals; it can be used for any textual work, regardless of subject matter or
            whether it is published as a printed book. We recommend this License principally for
            works whose purpose is instruction or reference.</para>
    </sect1>
    <sect1 id="gfdl-1">
        <title>Applicability and definitions</title>
        <para>This License applies to any manual or other work that contains a notice placed by the
            copyright holder saying it can be distributed under the terms of this License. The
            "Document", below, refers to any such manual or work. Any member of the public is a
            licensee, and is addressed as "you".</para>
        <para>A "Modified Version" of the Document means any work containing the Document or a
            portion of it, either copied verbatim, or with modifications and/or translated into
            another language.</para>
        <para>A "Secondary Section" is a named appendix or a front-matter section of the Document
            that deals exclusively with the relationship of the publishers or authors of the
            Document to the Document's overall subject (or to related matters) and contains nothing
            that could fall directly within that overall subject. (For example, if the Document is
            in part a textbook of mathematics, a Secondary Section may not explain any mathematics.)
            The relationship could be a matter of historical connection with the subject or with
            related matters, or of legal, commercial, philosophical, ethical or political position
            regarding them.</para>
        <para>The "Invariant Sections" are certain Secondary Sections whose titles are designated,
            as being those of Invariant Sections, in the notice that says that the Document is
            released under this License.</para>
        <para>The "Cover Texts" are certain short passages of text that are listed, as Front-Cover
            Texts or Back-Cover Texts, in the notice that says that the Document is released under
            this License.</para>
        <para>A "Transparent" copy of the Document means a machine-readable copy, represented in a
            format whose specification is available to the general public, whose contents can be
            viewed and edited directly and straightforwardly with generic text editors or (for
            images composed of pixels) generic paint programs or (for drawings) some widely
            available drawing editor, and that is suitable for input to text formatters or for
            automatic translation to a variety of formats suitable for input to text formatters. A
            copy made in an otherwise Transparent file format whose markup has been designed to
            thwart or discourage subsequent modification by readers is not Transparent. A copy that
            is not "Transparent" is called "Opaque".</para>
        <para>Examples of suitable formats for Transparent copies include plain ASCII without
            markup, Texinfo input format, LaTeX input format, SGML or XML using a publicly available
            DTD, and standard-conforming simple HTML designed for human modification. Opaque formats
            include PostScript, PDF, proprietary formats that can be read and edited only by
            proprietary word processors, SGML or XML for which the DTD and/or processing tools are
            not generally available, and the machine-generated HTML produced by some word processors
            for output purposes only.</para>
        <para>The "Title Page" means, for a printed book, the title page itself, plus such following
            pages as are needed to hold, legibly, the material this License requires to appear in
            the title page. For works in formats which do not have any title page as such, "Title
            Page" means the text near the most prominent appearance of the work's title, preceding
            the beginning of the body of the text.</para>
    </sect1>
    <sect1 id="gfdl-2">
        <title>Verbatim copying</title>
        <para>You may copy and distribute the Document in any medium, either commercially or
            noncommercially, provided that this License, the copyright notices, and the license
            notice saying this License applies to the Document are reproduced in all copies, and
            that you add no other conditions whatsoever to those of this License. You may not use
            technical measures to obstruct or control the reading or further copying of the copies
            you make or distribute. However, you may accept compensation in exchange for copies. If
            you distribute a large enough number of copies you must also follow the conditions in
            section 3.</para>
        <para>You may also lend copies, under the same conditions stated above, and you may publicly
            display copies.</para>
    </sect1>
    <sect1 id="gfdl-3">
        <title>Copying in quantity</title>
        <para>If you publish printed copies of the Document numbering more than 100, and the
            Document's license notice requires Cover Texts, you must enclose the copies in covers
            that carry, clearly and legibly, all these Cover Texts: Front-Cover Texts on the front
            cover, and Back-Cover Texts on the back cover. Both covers must also clearly and legibly
            identify you as the publisher of these copies. The front cover must present the full
            title with all words of the title equally prominent and visible. You may add other
            material on the covers in addition. Copying with changes limited to the covers, as long
            as they preserve the title of the Document and satisfy these conditions, can be treated
            as verbatim copying in other respects.</para>
        <para>If the required texts for either cover are too voluminous to fit legibly, you should
            put the first ones listed (as many as fit reasonably) on the actual cover, and continue
            the rest onto adjacent pages.</para>
        <para>If you publish or distribute Opaque copies of the Document numbering more than 100,
            you must either include a machine-readable Transparent copy along with each Opaque copy,
            or state in or with each Opaque copy a publicly-accessible computer-network location
            containing a complete Transparent copy of the Document, free of added material, which
            the general network-using public has access to download anonymously at no charge using
            public-standard network protocols. If you use the latter option, you must take
            reasonably prudent steps, when you begin distribution of Opaque copies in quantity, to
            ensure that this Transparent copy will remain thus accessible at the stated location
            until at least one year after the last time you distribute an Opaque copy (directly or
            through your agents or retailers) of that edition to the public.</para>
        <para>It is requested, but not required, that you contact the authors of the Document well
            before redistributing any large number of copies, to give them a chance to provide you
            with an updated version of the Document.</para>
    </sect1>
    <sect1 id="gfdl-4">
        <title>Modifications</title>
        <para>You may copy and distribute a Modified Version of the Document under the conditions of
            sections 2 and 3 above, provided that you release the Modified Version under precisely
            this License, with the Modified Version filling the role of the Document, thus licensing
            distribution and modification of the Modified Version to whoever possesses a copy of it.
            In addition, you must do these things in the Modified Version:</para>
        <orderedlist numeration="upperalpha">
            <listitem>
                <para>Use in the Title Page (and on the covers, if any) a title distinct from that
                    of the Document, and from those of previous versions (which should, if there
                    were any, be listed in the History section of the Document). You may use the
                    same title as a previous version if the original publisher of that version gives permission.</para>
            </listitem>
            <listitem>
                <para>List on the Title Page, as authors, one or more persons or entities
                    responsible for authorship of the modifications in the Modified Version,
                    together with at least five of the principal authors of the Document (all of its
                    principal authors, if it has less than five).</para>
            </listitem>
            <listitem>
                <para>State on the Title page the name of the publisher of the Modified Version, as
                    the publisher.</para>
            </listitem>
            <listitem>
                <para>Preserve all the copyright notices of the Document.</para>
            </listitem>
            <listitem>
                <para>Add an appropriate copyright notice for your modifications adjacent to the
                    other copyright notices.</para>
            </listitem>
            <listitem>
                <para>Include, immediately after the copyright notices, a license notice giving the
                    public permission to use the Modified Version under the terms of this License,
                    in the form shown in the Addendum below.</para>
            </listitem>
            <listitem>
                <para>Preserve in that license notice the full lists of Invariant Sections and
                    required Cover Texts given in the Document's license notice.</para>
            </listitem>
            <listitem>
                <para>Include an unaltered copy of this License.</para>
            </listitem>
            <listitem>
                <para>Preserve the section entitled "History", and its title, and add to it an item
                    stating at least the title, year, new authors, and publisher of the Modified
                    Version as given on the Title Page. If there is no section entitled "History" in
                    the Document, create one stating the title, year, authors, and publisher of the
                    Document as given on its Title Page, then add an item describing the Modified
                    Version as stated in the previous sentence.</para>
            </listitem>
            <listitem>
                <para>Preserve the network location, if any, given in the Document for public access
                    to a Transparent copy of the Document, and likewise the network locations given
                    in the Document for previous versions it was based on. These may be placed in
                    the "History" section. You may omit a network location for a work that was
                    published at least four years before the Document itself, or if the original
                    publisher of the version it refers to gives permission.</para>
            </listitem>
            <listitem>
                <para>In any section entitled "Acknowledgements" or "Dedications", preserve the
                    section's title, and preserve in the section all the substance and tone of each
                    of the contributor acknowledgements and/or dedications given therein.</para>
            </listitem>
            <listitem>
                <para>Preserve all the Invariant Sections of the Document, unaltered in their text
                    and in their titles. Section numbers or the equivalent are not considered part
                    of the section titles.</para>
            </listitem>
            <listitem>
                <para>Delete any section entitled "Endorsements". Such a section may not be included
                    in the Modified Version.</para>
            </listitem>
            <listitem>
                <para>Do not retitle any existing section as "Endorsements" or to conflict in title
                    with any Invariant Section.</para>
            </listitem>
        </orderedlist>
        <para>If the Modified Version includes new front-matter sections or appendices that qualify
            as Secondary Sections and contain no material copied from the Document, you may at your
            option designate some or all of these sections as invariant. To do this, add their
            titles to the list of Invariant Sections in the Modified Version's license notice. These
            titles must be distinct from any other section titles.</para>
        <para>You may add a section entitled "Endorsements", provided it contains nothing but
            endorsements of your Modified Version by various parties--for example, statements of
            peer review or that the text has been approved by an organization as the authoritative
            definition of a standard.</para>
        <para>You may add a passage of up to five words as a Front-Cover Text, and a passage of up
            to 25 words as a Back-Cover Text, to the end of the list of Cover Texts in the Modified
            Version. Only one passage of Front-Cover Text and one of Back-Cover Text may be added by
            (or through arrangements made by) any one entity. If the Document already includes a
            cover text for the same cover, previously added by you or by arrangement made by the
            same entity you are acting on behalf of, you may not add another; but you may replace
            the old one, on explicit permission from the previous publisher that added the old one.</para>
        <para>The author(s) and publisher(s) of the Document do not by this License give permission
            to use their names for publicity for or to assert or imply endorsement of any Modified Version.</para>
    </sect1>
    <sect1 id="gfdl-5">
        <title>Combining documents</title>
        <para>You may combine the Document with other documents released under this License, under
            the terms defined in section 4 above for modified versions, provided that you include in
            the combination all of the Invariant Sections of all of the original documents,
            unmodified, and list them all as Invariant Sections of your combined work in its license notice.</para>
        <para>The combined work need only contain one copy of this License, and multiple identical
            Invariant Sections may be replaced with a single copy. If there are multiple Invariant
            Sections with the same name but different contents, make the title of each such section
            unique by adding at the end of it, in parentheses, the name of the original author or
            publisher of that section if known, or else a unique number. Make the same adjustment to
            the section titles in the list of Invariant Sections in the license notice of the
            combined work.</para>
        <para>In the combination, you must combine any sections entitled "History" in the various
            original documents, forming one section entitled "History"; likewise combine any
            sections entitled "Acknowledgements", and any sections entitled "Dedications". You must
            delete all sections entitled "Endorsements."</para>
    </sect1>
    <sect1 id="gfdl-6">
        <title>Collections of documents</title>
        <para>You may make a collection consisting of the Document and other documents released
            under this License, and replace the individual copies of this License in the various
            documents with a single copy that is included in the collection, provided that you
            follow the rules of this License for verbatim copying of each of the documents in all
            other respects.</para>
        <para>You may extract a single document from such a collection, and distribute it
            individually under this License, provided you insert a copy of this License into the
            extracted document, and follow this License in all other respects regarding verbatim
            copying of that document.</para>
    </sect1>
    <sect1 id="gfdl-7">
        <title>Aggregation with independent works</title>
        <para>A compilation of the Document or its derivatives with other separate and independent
            documents or works, in or on a volume of a storage or distribution medium, does not as a
            whole count as a Modified Version of the Document, provided no compilation copyright is
            claimed for the compilation. Such a compilation is called an "aggregate", and this
            License does not apply to the other self-contained works thus compiled with the
            Document, on account of their being thus compiled, if they are not themselves derivative
            works of the Document.</para>
        <para>If the Cover Text requirement of section 3 is applicable to these copies of the
            Document, then if the Document is less than one quarter of the entire aggregate, the
            Document's Cover Texts may be placed on covers that surround only the Document within
            the aggregate. Otherwise they must appear on covers around the whole aggregate.</para>
    </sect1>
    <sect1 id="gfdl-8">
        <title>Translation</title>
        <para>Translation is considered a kind of modification, so you may distribute translations
            of the Document under the terms of section 4. Replacing Invariant Sections with
            translations requires special permission from their copyright holders, but you may
            include translations of some or all Invariant Sections in addition to the original
            versions of these Invariant Sections. You may include a translation of this License
            provided that you also include the original English version of this License. In case of
            a disagreement between the translation and the original English version of this License,
            the original English version will prevail.</para>
    </sect1>
    <sect1 id="gfdl-9">
        <title>Termination</title>
        <para>You may not copy, modify, sublicense, or distribute the Document except as expressly
            provided for under this License. Any other attempt to copy, modify, sublicense or
            distribute the Document is void, and will automatically terminate your rights under this
            License. However, parties who have received copies, or rights, from you under this
            License will not have their licenses terminated so long as such parties remain in full compliance.</para>
    </sect1>
    <sect1 id="gfdl-10">
        <title>Future revisions of this license</title>
        <para>The Free Software Foundation may publish new, revised versions of the GNU Free
            Documentation License from time to time. Such new versions will be similar in spirit to
            the present version, but may differ in detail to address new problems or concerns. See
                <ulink url="http://www.gnu.org/copyleft/">http://www.gnu.org/copyleft/</ulink>.</para>
        <para>Each version of the License is given a distinguishing version number. If the Document
            specifies that a particular numbered version of this License "or any later version"
            applies to it, you have the option of following the terms and conditions either of that
            specified version or of any later version that has been published (not as a draft) by
            the Free Software Foundation. If the Document does not specify a version number of this
            License, you may choose any version ever published (not as a draft) by the Free Software Foundation.</para>
    </sect1>
    <sect1 id="gfdl-11">
        <title>How to use this License for your documents</title>
        <para>To use this License in a document you have written, include a copy of the License in
            the document and put the following copyright and license notices just after the title page:</para>
        <blockquote>
            <para> Copyright (c) YEAR YOUR NAME. Permission is granted to copy, distribute and/or
                modify this document under the terms of the GNU Free Documentation License, Version
                1.1 or any later version published by the Free Software Foundation; with the
                Invariant Sections being LIST THEIR TITLES, with the Front-Cover Texts being LIST,
                and with the Back-Cover Texts being LIST. A copy of the license is included in the
                section entitled "GNU Free Documentation License".</para>
        </blockquote>
        <para>If you have no Invariant Sections, write "with no Invariant Sections" instead of
            saying which ones are invariant. If you have no Front-Cover Texts, write "no Front-Cover
            Texts" instead of "Front-Cover Texts being LIST"; likewise for Back-Cover Texts.</para>
        <para>If your document contains nontrivial examples of program code, we recommend releasing
            these examples in parallel under your choice of free software license, such as the GNU
            General Public License, to permit their use in free software.</para>
    </sect1>
</appendix>
 <appendix id="app5">
<title>proc.txt</title>
<abstract><para>This appendix holds the file proc.txt, which explains the <filename>proc</filename> file system on Linux machines.</para></abstract>
<sect1><title>The /proc Filesystem</title>
<para>This appendix contains a file from the documentation that comes with your Linux system, the <filename>proc.txt</filename> file.  It explains in detail the contents of the <filename>/proc</filename> directory on your system.  You'll find this directory very helpful for gathering system information.</para>
<screen>
------------------------------------------------------------------------------
                       T H E  /proc   F I L E S Y S T E M
------------------------------------------------------------------------------
/proc/sys         Terrehon Bowden &lt;terrehon@pacbell.net&gt;        October 7 1999
                  Bodo Bauer &lt;bb@ricochet.net&gt;

2.4.x update	  Jorge Nerin &lt;comandante@zaralinux.com&gt;      November 14 2000
------------------------------------------------------------------------------
Version 1.3                                              Kernel version 2.2.12
					      Kernel version 2.4.0-test11-pre4
------------------------------------------------------------------------------

Table of Contents
-----------------

  0     Preface
  0.1	Introduction/Credits
  0.2	Legal Stuff

  1	Collecting System Information
  1.1	Process-Specific Subdirectories
  1.2	Kernel data
  1.3	IDE devices in /proc/ide
  1.4	Networking info in /proc/net
  1.5	SCSI info
  1.6	Parallel port info in /proc/parport
  1.7	TTY info in /proc/tty

  2	Modifying System Parameters
  2.1	/proc/sys/fs - File system data
  2.2	/proc/sys/fs/binfmt_misc - Miscellaneous binary formats
  2.3	/proc/sys/kernel - general kernel parameters
  2.4	/proc/sys/vm - The virtual memory subsystem
  2.5	/proc/sys/dev - Device specific parameters
  2.6	/proc/sys/sunrpc - Remote procedure calls
  2.7	/proc/sys/net - Networking stuff
  2.8	/proc/sys/net/ipv4 - IPV4 settings
  2.9	Appletalk
  2.10	IPX

------------------------------------------------------------------------------
Preface
------------------------------------------------------------------------------

0.1 Introduction/Credits
------------------------

This documentation is  part of a soon (or  so we hope) to be  released book on
the SuSE  Linux distribution. As  there is  no complete documentation  for the
/proc file system and we've used  many freely available sources to write these
chapters, it  seems only fair  to give the work  back to the  Linux community.
This work is  based on the 2.2.*  kernel version and the  upcoming 2.4.*. I'm
afraid it's still far from complete, but we  hope it will be useful. As far as
we know, it is the first 'all-in-one' document about the /proc file system. It
is focused  on the Intel  x86 hardware,  so if you  are looking for  PPC, ARM,
SPARC, APX, etc., features, you probably  won't find what you are looking for.
It also only covers IPv4 networking, not IPv6 nor other protocols - sorry. But
additions and patches  are welcome and will  be added to this  document if you
mail them to Bodo.

We'd like  to  thank Alan Cox, Rik van Riel, and Alexey Kuznetsov and a lot of
other people for help compiling this documentation. We'd also like to extend a
special thank  you to Andi Kleen for documentation, which we relied on heavily
to create  this  document,  as well as the additional information he provided.
Thanks to  everybody  else  who contributed source or docs to the Linux kernel
and helped create a great piece of software... :)

If you  have  any comments, corrections or additions, please don't hesitate to
contact Bodo  Bauer  at  bb@ricochet.net.  We'll  be happy to add them to this
document.

The   latest   version    of   this   document   is    available   online   at
http://skaro.nightcrawler.com/~bb/Docs/Proc as HTML version.

If  the above  direction does  not works  for you,  ypu could  try the  kernel
mailing  list  at  linux-kernel@vger.kernel.org  and/or try  to  reach  me  at
comandante@zaralinux.com.

0.2 Legal Stuff
---------------

We don't  guarantee  the  correctness  of this document, and if you come to us
complaining about  how  you  screwed  up  your  system  because  of  incorrect
documentation, we won't feel responsible...

------------------------------------------------------------------------------
CHAPTER 1: COLLECTING SYSTEM INFORMATION
------------------------------------------------------------------------------

------------------------------------------------------------------------------
In This Chapter
------------------------------------------------------------------------------
* Investigating  the  properties  of  the  pseudo  file  system  /proc and its
  ability to provide information on the running Linux system
* Examining /proc's structure
* Uncovering  various  information  about the kernel and the processes running
  on the system
------------------------------------------------------------------------------


The proc  file  system acts as an interface to internal data structures in the
kernel. It  can  be  used to obtain information about the system and to change
certain kernel parameters at runtime (sysctl).

First, we'll  take  a  look  at the read-only parts of /proc. In Chapter 2, we
show you how you can use /proc/sys to change settings.

1.1 Process-Specific Subdirectories
-----------------------------------

The directory  /proc  contains  (among other things) one subdirectory for each
process running on the system, which is named after the process ID (PID).

The link  self  points  to  the  process reading the file system. Each process
subdirectory has the entries listed in Table 1-1.


Table 1-1: Process specific entries in /proc 
..............................................................................
 File    Content                                        
 cmdline Command line arguments                         
 cpu	 Current and last cpu in wich it was executed		(2.4)(smp)
 cwd	 Link to the current working directory
 environ Values of environment variables      
 exe	 Link to the executable of this process
 fd      Directory, which contains all file descriptors 
 maps	 Memory maps to executables and library files		(2.4)
 mem     Memory held by this process                    
 root	 Link to the root directory of this process
 stat    Process status                                 
 statm   Process memory status information              
 status  Process status in human readable form          
..............................................................................

For example, to get the status information of a process, all you have to do is
read the file /proc/PID/status:

  &gt;cat /proc/self/status 
  Name:   cat 
  State:  R (running) 
  Pid:    5452 
  PPid:   743 
  TracerPid:      0						(2.4)
  Uid:    501     501     501     501 
  Gid:    100     100     100     100 
  Groups: 100 14 16 
  VmSize:     1112 kB 
  VmLck:         0 kB 
  VmRSS:       348 kB 
  VmData:       24 kB 
  VmStk:        12 kB 
  VmExe:         8 kB 
  VmLib:      1044 kB 
  SigPnd: 0000000000000000 
  SigBlk: 0000000000000000 
  SigIgn: 0000000000000000 
  SigCgt: 0000000000000000 
  CapInh: 00000000fffffeff 
  CapPrm: 0000000000000000 
  CapEff: 0000000000000000 


This shows you nearly the same information you would get if you viewed it with
the ps  command.  In  fact,  ps  uses  the  proc  file  system  to  obtain its
information. The  statm  file  contains  more  detailed  information about the
process memory usage. Its seven fields are explained in Table 1-2.


Table 1-2: Contents of the statm files 
..............................................................................
 File     Content                         
 size     total program size              
 resident size of memory portions         
 shared   number of pages that are shared 
 trs      number of pages that are 'code' 
 drs      number of pages of data/stack   
 lrs      number of pages of library      
 dt       number of dirty pages           
..............................................................................

1.2 Kernel data
---------------

Similar to  the  process entries, the kernel data files give information about
the running kernel. The files used to obtain this information are contained in
/proc and  are  listed  in Table 1-3. Not all of these will be present in your
system. It  depends  on the kernel configuration and the loaded modules, which
files are there, and which are missing.

Table 1-3: Kernel info in /proc 
..............................................................................
 File        Content                                           
 apm         Advanced power management info                    
 bus         Directory containing bus specific information     
 cmdline     Kernel command line                               
 cpuinfo     Info about the CPU                                
 devices     Available devices (block and character)           
 dma         Used DMS channels                                 
 filesystems Supported filesystems                             
 driver	     Various drivers grouped here, currently rtc	(2.4)
 execdomains Execdomains, related to security			(2.4)
 fb	     Frame Buffer devices				(2.4)
 fs	     File system parameters, currently nfs/exports	(2.4)
 ide         Directory containing info about the IDE subsystem 
 interrupts  Interrupt usage                                   
 iomem	     Memory map						(2.4)
 ioports     I/O port usage                                    
 irq	     Masks for irq to cpu affinity			(2.4)(smp?)
 isapnp	     ISA PnP (Plug&amp;Play) Info				(2.4)
 kcore       Kernel core image (can be ELF or A.OUT(deprecated in 2.4))   
 kmsg        Kernel messages                                   
 ksyms       Kernel symbol table                               
 loadavg     Load average of last 1, 5 &amp; 15 minutes                
 locks       Kernel locks                                      
 meminfo     Memory info                                       
 misc        Miscellaneous                                     
 modules     List of loaded modules                            
 mounts      Mounted filesystems                               
 net         Networking info (see text)                        
 partitions  Table of partitions known to the system           
 pci	     Depreciated info of PCI bus (new way -&gt; /proc/bus/pci/, 
             decoupled by lspci					(2.4)
 rtc         Real time clock                                   
 scsi        SCSI info (see text)                              
 slabinfo    Slab pool info                                    
 stat        Overall statistics                                
 swaps       Swap space utilization                            
 sys         See chapter 2                                     
 sysvipc     Info of SysVIPC Resources (msg, sem, shm)		(2.4)
 tty	     Info of tty drivers
 uptime      System uptime                                     
 version     Kernel version                                    
 video	     bttv info of video resources			(2.4)
..............................................................................

You can,  for  example,  check  which interrupts are currently in use and what
they are used for by looking in the file /proc/interrupts:

  &gt; cat /proc/interrupts 
             CPU0        
    0:    8728810          XT-PIC  timer 
    1:        895          XT-PIC  keyboard 
    2:          0          XT-PIC  cascade 
    3:     531695          XT-PIC  aha152x 
    4:    2014133          XT-PIC  serial 
    5:      44401          XT-PIC  pcnet_cs 
    8:          2          XT-PIC  rtc 
   11:          8          XT-PIC  i82365 
   12:     182918          XT-PIC  PS/2 Mouse 
   13:          1          XT-PIC  fpu 
   14:    1232265          XT-PIC  ide0 
   15:          7          XT-PIC  ide1 
  NMI:          0 

In 2.4.* a couple of lines where added to this file LOC &amp; ERR (this time is the
output of a SMP machine):

  &gt; cat /proc/interrupts 

             CPU0       CPU1       
    0:    1243498    1214548    IO-APIC-edge  timer
    1:       8949       8958    IO-APIC-edge  keyboard
    2:          0          0          XT-PIC  cascade
    5:      11286      10161    IO-APIC-edge  soundblaster
    8:          1          0    IO-APIC-edge  rtc
    9:      27422      27407    IO-APIC-edge  3c503
   12:     113645     113873    IO-APIC-edge  PS/2 Mouse
   13:          0          0          XT-PIC  fpu
   14:      22491      24012    IO-APIC-edge  ide0
   15:       2183       2415    IO-APIC-edge  ide1
   17:      30564      30414   IO-APIC-level  eth0
   18:        177        164   IO-APIC-level  bttv
  NMI:    2457961    2457959 
  LOC:    2457882    2457881 
  ERR:       2155

NMI is incremented in this case because every timer interrupt generates a NMI
(Non Maskable Interrupt) which is used by the NMI Watchdog to detect lookups.

LOC is the local interrupt counter of the internal APIC of every CPU.

ERR is incremented in the case of errors in the IO-APIC bus (the bus that
connects the CPUs in a SMP system. This means that an error has been detected,
the IO-APIC automatically retry the transmission, so it should not be a big
problem, but you should read the SMP-FAQ.

In this context it could be interesting to note the new irq directory in 2.4.
It could be used to set IRQ to CPU affinity, this means that you can "hook" an
IRQ to only one CPU, or to exclude a CPU of handling IRQs. The contents of the
irq subdir is one subdir for each IRQ, and one file; prof_cpu_mask

For example 
  &gt; ls /proc/irq/
  0  10  12  14  16  18  2  4  6  8  prof_cpu_mask
  1  11  13  15  17  19  3  5  7  9
  &gt; ls /proc/irq/0/
  smp_affinity

The contents of the prof_cpu_mask file and each smp_affinity file for each IRQ
is the same by default:

  &gt; cat /proc/irq/0/smp_affinity 
  ffffffff

It's a bitmask, in wich you can specify wich CPUs can handle the IRQ, you can
set it by doing:

  &gt; echo 1 &gt; /proc/irq/prof_cpu_mask

This means that only the first CPU will handle the IRQ, but you can also echo 5
wich means that only the first and fourth CPU can handle the IRQ.

The way IRQs are routed is handled by the IO-APIC, and it's Round Robin
between all the CPUs which are allowed to handle it. As usual the kernel has
more info than you and does a better job than you, so the defaults are the
best choice for almost everyone.

There are  three  more  important subdirectories in /proc: net, scsi, and sys.
The general  rule  is  that  the  contents,  or  even  the  existence of these
directories, depend  on your kernel configuration. If SCSI is not enabled, the
directory scsi  may  not  exist. The same is true with the net, which is there
only when networking support is present in the running kernel.

The slabinfo  file  gives  information  about  memory usage at the slab level.
Linux uses  slab  pools for memory management above page level in version 2.2.
Commonly used  objects  have  their  own  slab  pool (such as network buffers,
directory cache, and so on).

1.3 IDE devices in /proc/ide
----------------------------

The subdirectory /proc/ide contains information about all IDE devices of which
the kernel  is  aware.  There is one subdirectory for each IDE controller, the
file drivers  and a link for each IDE device, pointing to the device directory
in the controller specific subtree.

The file  drivers  contains general information about the drivers used for the
IDE devices:

  &gt; cat /proc/ide/drivers 
  ide-cdrom version 4.53 
  ide-disk version 1.08 


More detailed  information  can  be  found  in  the  controller  specific
subdirectories. These  are  named  ide0,  ide1  and  so  on.  Each  of  these
directories contains the files shown in table 1-4.


Table 1-4: IDE controller info in  /proc/ide/ide? 
..............................................................................
 File    Content                                 
 channel IDE channel (0 or 1)                    
 config  Configuration (only for PCI/IDE bridge) 
 mate    Mate name                               
 model   Type/Chipset of IDE controller          
..............................................................................

Each device  connected  to  a  controller  has  a separate subdirectory in the
controllers directory.  The  files  listed in table 1-5 are contained in these
directories.


Table 1-5: IDE device information 
..............................................................................
 File             Content                                    
 cache            The cache                                  
 capacity         Capacity of the medium (in 512Byte blocks) 
 driver           driver and version                         
 geometry         physical and logical geometry              
 identify         device identify block                      
 media            media type                                 
 model            device identifier                          
 settings         device setup                               
 smart_thresholds IDE disk management thresholds             
 smart_values     IDE disk management values                 
..............................................................................

The most  interesting  file is settings. This file contains a nice overview of
the drive parameters:

  # cat /proc/ide/ide0/hda/settings 
  name                    value           min             max             mode 
  ----                    -----           ---             ---             ---- 
  bios_cyl                526             0               65535           rw 
  bios_head               255             0               255             rw 
  bios_sect               63              0               63              rw 
  breada_readahead        4               0               127             rw 
  bswap                   0               0               1               r 
  file_readahead          72              0               2097151         rw 
  io_32bit                0               0               3               rw 
  keepsettings            0               0               1               rw 
  max_kb_per_request      122             1               127             rw 
  multcount               0               0               8               rw 
  nice1                   1               0               1               rw 
  nowerr                  0               0               1               rw 
  pio_mode                write-only      0               255             w 
  slow                    0               0               1               rw 
  unmaskirq               0               0               1               rw 
  using_dma               0               0               1               rw 


1.4 Networking info in /proc/net
--------------------------------

The subdirectory  /proc/net  follows  the  usual  pattern. Table 1-6 shows the
additional values  you  get  for  IP  version 6 if you configure the kernel to
support this. Table 1-7 lists the files and their meaning.


Table 1-6: IPv6 info in /proc/net 
..............................................................................
 File       Content                                               
 udp6       UDP sockets (IPv6)                                    
 tcp6       TCP sockets (IPv6)                                    
 raw6       Raw device statistics (IPv6)                          
 igmp6      IP multicast addresses, which this host joined (IPv6) 
 if_inet6   List of IPv6 interface addresses                      
 ipv6_route Kernel routing table for IPv6                         
 rt6_stats  Global IPv6 routing tables statistics                 
 sockstat6  Socket statistics (IPv6)                              
 snmp6      Snmp data (IPv6)                                      
..............................................................................


Table 1-7: Network info in /proc/net 
..............................................................................
 File          Content                                                         
 arp           Kernel  ARP table                                               
 dev           network devices with statistics                                 
 dev_mcast     the Layer2 multicast groups a device is listening too
               (interface index, label, number of references, number of bound
               addresses). 
 dev_stat      network device status                                           
 ip_fwchains   Firewall chain linkage                                          
 ip_fwnames    Firewall chain names                                            
 ip_masq       Directory containing the masquerading tables                    
 ip_masquerade Major masquerading table                                        
 netstat       Network statistics                                              
 raw           raw device statistics                                           
 route         Kernel routing table                                            
 rpc           Directory containing rpc info                                   
 rt_cache      Routing cache                                                   
 snmp          SNMP data                                                       
 sockstat      Socket statistics                                               
 tcp           TCP  sockets                                                    
 tr_rif        Token ring RIF routing table                                    
 udp           UDP sockets                                                     
 unix          UNIX domain sockets                                             
 wireless      Wireless interface data (Wavelan etc)                           
 igmp          IP multicast addresses, which this host joined                  
 psched        Global packet scheduler parameters.                             
 netlink       List of PF_NETLINK sockets                                      
 ip_mr_vifs    List of multicast virtual interfaces                            
 ip_mr_cache   List of multicast routing cache                                 
..............................................................................

You can  use  this  information  to see which network devices are available in
your system and how much traffic was routed over those devices:

  &gt; cat /proc/net/dev 
  Inter-|Receive                                                   |[... 
   face |bytes    packets errs drop fifo frame compressed multicast|[... 
      lo:  908188   5596     0    0    0     0          0         0 [...         
    ppp0:15475140  20721   410    0    0   410          0         0 [...  
    eth0:  614530   7085     0    0    0     0          0         1 [... 
   
  ...] Transmit 
  ...] bytes    packets errs drop fifo colls carrier compressed 
  ...]  908188     5596    0    0    0     0       0          0 
  ...] 1375103    17405    0    0    0     0       0          0 
  ...] 1703981     5535    0    0    0     3       0          0 

In addition, each Channel Bond interface has it's own directory.  For
example, the bond0 device will have a directory called /proc/net/bond0/.
It will contain information that is specific to that bond, such as the
current slaves of the bond, the link status of the slaves, and how
many times the slaves link has failed.

1.5 SCSI info
-------------

If you  have  a  SCSI  host adapter in your system, you'll find a subdirectory
named after  the driver for this adapter in /proc/scsi. You'll also see a list
of all recognized SCSI devices in /proc/scsi:

  &gt;cat /proc/scsi/scsi 
  Attached devices: 
  Host: scsi0 Channel: 00 Id: 00 Lun: 00 
    Vendor: IBM      Model: DGHS09U          Rev: 03E0 
    Type:   Direct-Access                    ANSI SCSI revision: 03 
  Host: scsi0 Channel: 00 Id: 06 Lun: 00 
    Vendor: PIONEER  Model: CD-ROM DR-U06S   Rev: 1.04 
    Type:   CD-ROM                           ANSI SCSI revision: 02 


The directory  named  after  the driver has one file for each adapter found in
the system.  These  files  contain information about the controller, including
the used  IRQ  and  the  IO  address range. The amount of information shown is
dependent on  the adapter you use. The example shows the output for an Adaptec
AHA-2940 SCSI adapter:

  &gt; cat /proc/scsi/aic7xxx/0 
   
  Adaptec AIC7xxx driver version: 5.1.19/3.2.4 
  Compile Options: 
    TCQ Enabled By Default : Disabled 
    AIC7XXX_PROC_STATS     : Disabled 
    AIC7XXX_RESET_DELAY    : 5 
  Adapter Configuration: 
             SCSI Adapter: Adaptec AHA-294X Ultra SCSI host adapter 
                             Ultra Wide Controller 
      PCI MMAPed I/O Base: 0xeb001000 
   Adapter SEEPROM Config: SEEPROM found and used. 
        Adaptec SCSI BIOS: Enabled 
                      IRQ: 10 
                     SCBs: Active 0, Max Active 2, 
                           Allocated 15, HW 16, Page 255 
               Interrupts: 160328 
        BIOS Control Word: 0x18b6 
     Adapter Control Word: 0x005b 
     Extended Translation: Enabled 
  Disconnect Enable Flags: 0xffff 
       Ultra Enable Flags: 0x0001 
   Tag Queue Enable Flags: 0x0000 
  Ordered Queue Tag Flags: 0x0000 
  Default Tag Queue Depth: 8 
      Tagged Queue By Device array for aic7xxx host instance 0: 
        {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255} 
      Actual queue depth per device for aic7xxx host instance 0: 
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1} 
  Statistics: 
  (scsi0:0:0:0) 
    Device using Wide/Sync transfers at 40.0 MByte/sec, offset 8 
    Transinfo settings: current(12/8/1/0), goal(12/8/1/0), user(12/15/1/0) 
    Total transfers 160151 (74577 reads and 85574 writes) 
  (scsi0:0:6:0) 
    Device using Narrow/Sync transfers at 5.0 MByte/sec, offset 15 
    Transinfo settings: current(50/15/0/0), goal(50/15/0/0), user(50/15/0/0) 
    Total transfers 0 (0 reads and 0 writes) 


1.6 Parallel port info in /proc/parport
---------------------------------------

The directory  /proc/parport  contains information about the parallel ports of
your system.  It  has  one  subdirectory  for  each port, named after the port
number (0,1,2,...).

These directories contain the four files shown in Table 1-8.


Table 1-8: Files in /proc/parport 
..............................................................................
 File      Content                                                             
 autoprobe Any IEEE-1284 device ID information that has been acquired.         
 devices   list of the device drivers using that port. A + will appear by the
           name of the device currently using the port (it might not appear
           against any). 
 hardware  Parallel port's base address, IRQ line and DMA channel.             
 irq       IRQ that parport is using for that port. This is in a separate
           file to allow you to alter it by writing a new value in (IRQ
           number or none). 
..............................................................................

1.7 TTY info in /proc/tty
-------------------------

Information about  the  available  and actually used tty's can be found in the
directory /proc/tty.You'll  find  entries  for drivers and line disciplines in
this directory, as shown in Table 1-9.


Table 1-9: Files in /proc/tty 
..............................................................................
 File          Content                                        
 drivers       list of drivers and their usage                
 ldiscs        registered line disciplines                    
 driver/serial usage statistic and status of single tty lines 
..............................................................................

To see  which  tty's  are  currently in use, you can simply look into the file
/proc/tty/drivers:

  &gt; cat /proc/tty/drivers 
  pty_slave            /dev/pts      136   0-255 pty:slave 
  pty_master           /dev/ptm      128   0-255 pty:master 
  pty_slave            /dev/ttyp       3   0-255 pty:slave 
  pty_master           /dev/pty        2   0-255 pty:master 
  serial               /dev/cua        5   64-67 serial:callout 
  serial               /dev/ttyS       4   64-67 serial 
  /dev/tty0            /dev/tty0       4       0 system:vtmaster 
  /dev/ptmx            /dev/ptmx       5       2 system 
  /dev/console         /dev/console    5       1 system:console 
  /dev/tty             /dev/tty        5       0 system:/dev/tty 
  unknown              /dev/tty        4    1-63 console 


------------------------------------------------------------------------------
Summary
------------------------------------------------------------------------------
The /proc file system serves information about the running system. It not only
allows access to process data but also allows you to request the kernel status
by reading files in the hierarchy.

The directory  structure  of /proc reflects the types of information and makes
it easy, if not obvious, where to look for specific data.
------------------------------------------------------------------------------

------------------------------------------------------------------------------
CHAPTER 2: MODIFYING SYSTEM PARAMETERS
------------------------------------------------------------------------------

------------------------------------------------------------------------------
In This Chapter
------------------------------------------------------------------------------
* Modifying kernel parameters by writing into files found in /proc/sys
* Exploring the files which modify certain parameters
* Review of the /proc/sys file tree
------------------------------------------------------------------------------


A very  interesting part of /proc is the directory /proc/sys. This is not only
a source  of  information,  it also allows you to change parameters within the
kernel. Be  very  careful  when attempting this. You can optimize your system,
but you  can  also  cause  it  to  crash.  Never  alter kernel parameters on a
production system.  Set  up  a  development machine and test to make sure that
everything works  the  way  you want it to. You may have no alternative but to
reboot the machine once an error has been made.

To change  a  value,  simply  echo  the new value into the file. An example is
given below  in the section on the file system data. You need to be root to do
this. You  can  create  your  own  boot script to perform this every time your
system boots.

The files  in /proc/sys can be used to fine tune and monitor miscellaneous and
general things  in  the operation of the Linux kernel. Since some of the files
can inadvertently  disrupt  your  system,  it  is  advisable  to  read  both
documentation and  source  before actually making adjustments. In any case, be
very careful  when  writing  to  any  of these files. The entries in /proc may
change slightly between the 2.1.* and the 2.2 kernel, so if there is any doubt
review the kernel documentation in the directory /usr/src/linux/Documentation.
This chapter  is  heavily  based  on the documentation included in the pre 2.2
kernels, and became part of it in version 2.2.1 of the Linux kernel.

2.1 /proc/sys/fs - File system data
-----------------------------------

This subdirectory  contains  specific  file system, file handle, inode, dentry
and quota information.

Currently, these files are in /proc/sys/fs:

dentry-state
------------

Status of  the  directory  cache.  Since  directory  entries  are  dynamically
allocated and  deallocated,  this  file indicates the current status. It holds
six values, in which the last two are not used and are always zero. The others
are listed in table 2-1.


Table 2-1: Status files of the directory cache 
..............................................................................
 File       Content                                                            
 nr_dentry  Almost always zero                                                 
 nr_unused  Number of unused cache entries                                     
 age_limit  
            in seconds after the entry may be reclaimed, when memory is short 
 want_pages internally                                                         
..............................................................................

dquot-nr and dquot-max
----------------------

The file dquot-max shows the maximum number of cached disk quota entries.

The file  dquot-nr  shows  the  number of allocated disk quota entries and the
number of free disk quota entries.

If the number of available cached disk quotas is very low and you have a large
number of simultaneous system users, you might want to raise the limit.

file-nr and file-max
--------------------

The kernel  allocates file handles dynamically, but doesn't free them again at
this time.

The value  in  file-max  denotes  the  maximum number of file handles that the
Linux kernel will allocate. When you get a lot of error messages about running
out of  file handles, you might want to raise this limit. The default value is
4096. To change it, just write the new number into the file:

  # cat /proc/sys/fs/file-max 
  4096 
  # echo 8192 &gt; /proc/sys/fs/file-max 
  # cat /proc/sys/fs/file-max 
  8192 


This method  of  revision  is  useful  for  all customizable parameters of the
kernel - simply echo the new value to the corresponding file.

The three  values  in file-nr denote the number of allocated file handles, the
number of  used file handles, and the maximum number of file handles. When the
allocated file  handles  come close to the maximum, but the number of actually
used ones  is  far  behind,  you've  encountered  a peak in your usage of file
handles and you don't need to increase the maximum.

inode-state and inode-nr
------------------------

The file inode-nr contains the first two items from inode-state, so we'll skip
to that file...

inode-state contains  two  actual numbers and five dummy values. The numbers
are nr_inodes and nr_free_inodes (in order of appearance).

nr_inodes
~~~~~~~~~

Denotes the  number  of  inodes the system has allocated. This number will
grow and shrink dynamically.

nr_free_inodes
--------------

Represents the  number of free inodes. Ie. The number of inuse inodes is
(nr_inodes - nr_free_inodes).

super-nr and super-max
----------------------

Again, super  block structures are allocated by the kernel, but not freed. The
file super-max  contains  the  maximum  number  of super block handlers, where
super-nr shows the number of currently allocated ones.

Every mounted file system needs a super block, so if you plan to mount lots of
file systems, you may want to increase these numbers.

2.2 /proc/sys/fs/binfmt_misc - Miscellaneous binary formats
-----------------------------------------------------------

Besides these  files, there is the subdirectory /proc/sys/fs/binfmt_misc. This
handles the kernel support for miscellaneous binary formats.

Binfmt_misc provides  the ability to register additional binary formats to the
Kernel without  compiling  an additional module/kernel. Therefore, binfmt_misc
needs to  know magic numbers at the beginning or the filename extension of the
binary.

It works by maintaining a linked list of structs that contain a description of
a binary  format,  including  a  magic  with size (or the filename extension),
offset and  mask,  and  the  interpreter name. On request it invokes the given
interpreter with  the  original  program  as  argument,  as  binfmt_java  and
binfmt_em86 and  binfmt_mz  do.  Since binfmt_misc does not define any default
binary-formats, you have to register an additional binary-format.

There are two general files in binfmt_misc and one file per registered format.
The two general files are register and status.

Registering a new binary format
-------------------------------

To register a new binary format you have to issue the command

  echo :name:type:offset:magic:mask:interpreter: &gt; /proc/sys/fs/binfmt_misc/register 



with appropriate  name (the name for the /proc-dir entry), offset (defaults to
0, if  omitted),  magic, mask (which can be omitted, defaults to all 0xff) and
last but  not  least,  the  interpreter that is to be invoked (for example and
testing /bin/echo).  Type  can be M for usual magic matching or E for filename
extension matching (give extension in place of magic).

Check or reset the status of the binary format handler
------------------------------------------------------

If you  do a cat on the file /proc/sys/fs/binfmt_misc/status, you will get the
current status (enabled/disabled) of binfmt_misc. Change the status by echoing
0 (disables)  or  1  (enables)  or  -1  (caution:  this  clears all previously
registered binary  formats)  to status. For example echo 0 &gt; status to disable
binfmt_misc (temporarily).

Status of a single handler
--------------------------

Each registered  handler has an entry in /proc/sys/fs/binfmt_misc. These files
perform the  same function as status, but their scope is limited to the actual
binary format.  By  cating this file, you also receive all related information
about the interpreter/magic of the binfmt.

Example usage of binfmt_misc (emulate binfmt_java)
--------------------------------------------------

  cd /proc/sys/fs/binfmt_misc  
  echo ':Java:M::\xca\xfe\xba\xbe::/usr/local/java/bin/javawrapper:' &gt; register  
  echo ':HTML:E::html::/usr/local/java/bin/appletviewer:' &gt; register  
  echo ':Applet:M::&lt;applet::/usr/local/java/bin/appletviewer:' &gt; register 
  echo ':DEXE:M::\x0eDEX::/usr/bin/dosexec:' &gt; register 


These four  lines  add  support  for  Java  executables and Java applets (like
binfmt_java, additionally  recognizing the .html extension with no need to put
&lt;!--applet&gt; to  every  applet  file).  You  have  to  install  the JDK and the
shell-script /usr/local/java/bin/javawrapper  too.  It  works  around  the
brokenness of  the Java filename handling. To add a Java binary, just create a
link to the class-file somewhere in the path.

2.3 /proc/sys/kernel - general kernel parameters
------------------------------------------------

This directory  reflects  general  kernel  behaviors. As I've said before, the
contents depend  on  your  configuration.  Here you'll find the most important
files, along with descriptions of what they mean and how to use them.

acct
----

The file contains three values; highwater, lowwater, and frequency.

It exists  only  when  BSD-style  process  accounting is enabled. These values
control its behavior. If the free space on the file system where the log lives
goes below  lowwater  percentage,  accounting  suspends.  If  it  goes  above
highwater percentage,  accounting  resumes. Frequency determines how often you
check the amount of free space (value is in seconds). Default settings are: 4,
2, and  30.  That is, suspend accounting if there is less than 2 percent free;
resume it  if we have a value of 3 or more percent; consider information about
the amount of free space valid for 30 seconds

ctrl-alt-del
------------

When the value in this file is 0, ctrl-alt-del is trapped and sent to the init
program to  handle a graceful restart. However, when the value is greater that
zero, Linux's  reaction  to  this key combination will be an immediate reboot,
without syncing its dirty buffers.

[NOTE]
    When a  program  (like  dosemu)  has  the  keyboard  in  raw  mode,  the
    ctrl-alt-del is  intercepted  by  the  program  before it ever reaches the
    kernel tty  layer,  and  it is up to the program to decide what to do with
    it.

domainname and hostname
-----------------------

These files  can  be controlled to set the NIS domainname and hostname of your
box. For the classic darkstar.frop.org a simple:

  # echo "darkstar" &gt; /proc/sys/kernel/hostname 
  # echo "frop.org" &gt; /proc/sys/kernel/domainname 


would suffice to set your hostname and NIS domainname.

osrelease, ostype and version
-----------------------------

The names make it pretty obvious what these fields contain:

  &gt; cat /proc/sys/kernel/osrelease 
  2.2.12 
   
  &gt; cat /proc/sys/kernel/ostype 
  Linux 
   
  &gt; cat /proc/sys/kernel/version 
  #4 Fri Oct 1 12:41:14 PDT 1999 


The files  osrelease and ostype should be clear enough. Version needs a little
more clarification.  The  #4 means that this is the 4th kernel built from this
source base and the date after it indicates the time the kernel was built. The
only way to tune these values is to rebuild the kernel.

panic
-----

The value  in  this  file  represents  the  number of seconds the kernel waits
before rebooting  on  a  panic.  When  you  use  the  software  watchdog,  the
recommended setting  is  60. If set to 0, the auto reboot after a kernel panic
is disabled, which is the default setting.

printk
------

The four values in printk denote
* console_loglevel,
* default_message_loglevel,
* minimum_console_level and
* default_console_loglevel
respectively.

These values  influence  printk()  behavior  when  printing  or  logging error
messages, which  come  from  inside  the  kernel.  See  syslog(2)  for  more
information on the different log levels.

console_loglevel
----------------

Messages with a higher priority than this will be printed to the console.

default_message_level
---------------------

Messages without an explicit priority will be printed with this priority.

minimum_console_loglevel
------------------------

Minimum (highest) value to which the console_loglevel can be set.

default_console_loglevel
------------------------

Default value for console_loglevel.

sg-big-buff
-----------

This file  shows  the size of the generic SCSI (sg) buffer. At this point, you
can't tune  it  yet,  but  you  can  change  it  at  compile  time  by editing
include/scsi/sg.h and changing the value of SG_BIG_BUFF.

If you use a scanner with SANE (Scanner Access Now Easy) you might want to set
this to a higher value. Refer to the SANE documentation on this issue.

modprobe
--------

The location  where  the  modprobe  binary  is  located.  The kernel uses this
program to load modules on demand.

2.4 /proc/sys/vm - The virtual memory subsystem
-----------------------------------------------

The files  in  this directory can be used to tune the operation of the virtual
memory (VM)  subsystem  of  the  Linux  kernel.  In addition, one of the files
(bdflush) has some influence on disk usage.

bdflush
-------

This file  controls  the  operation of the bdflush kernel daemon. It currently
contains nine  integer  values,  six of which are actually used by the kernel.
They are listed in table 2-2.


Table 2-2: Parameters in /proc/sys/vm/bdflush 
..............................................................................
 Value      Meaning                                                            
 nfract     Percentage of buffer cache dirty to  activate bdflush              
 ndirty     Maximum number of dirty blocks to  write out per wake-cycle        
 nrefill    Number of clean buffers to try to obtain  each time we call refill 
 nref_dirt  buffer threshold for activating bdflush when trying to refill
            buffers. 
 dummy      Unused                                                             
 age_buffer Time for normal buffer to age before we flush it                   
 age_super  Time for superblock to age before we flush it                      
 dummy      Unused                                                             
 dummy      Unused                                                             
..............................................................................

nfract
------

This parameter  governs  the  maximum  number  of  dirty buffers in the buffer
cache. Dirty means that the contents of the buffer still have to be written to
disk (as  opposed  to  a  clean  buffer,  which  can just be forgotten about).
Setting this  to  a  higher value means that Linux can delay disk writes for a
long time, but it also means that it will have to do a lot of I/O at once when
memory becomes short. A lower value will spread out disk I/O more evenly.

ndirty
------

Ndirty gives the maximum number of dirty buffers that bdflush can write to the
disk at  one  time.  A high value will mean delayed, bursty I/O, while a small
value can lead to memory shortage when bdflush isn't woken up often enough.

nrefill
-------

This is  the  number  of  buffers  that  bdflush  will add to the list of free
buffers when  refill_freelist()  is  called.  It is necessary to allocate free
buffers beforehand,  since  the  buffers  are  often  different sizes than the
memory pages  and some bookkeeping needs to be done beforehand. The higher the
number, the  more  memory  will be wasted and the less often refill_freelist()
will need to run.

nref_dirt
---------

When refill_freelist() comes across more than nref_dirt dirty buffers, it will
wake up bdflush.

age_buffer and age_super
------------------------

Finally, the age_buffer and age_super parameters govern the maximum time Linux
waits before  writing  out  a  dirty buffer to disk. The value is expressed in
jiffies (clockticks),  the  number of jiffies per second is 100. Age_buffer is
the maximum age for data blocks, while age_super is for filesystems meta data.

buffermem
---------

The three  values  in  this  file  control  how much memory should be used for
buffer memory.  The  percentage  is calculated as a percentage of total system
memory.

The values are:

min_percent
-----------

This is  the  minimum  percentage  of  memory  that  should be spent on buffer
memory.

borrow_percent
--------------

When Linux is short on memory, and the buffer cache uses more than it has been
allotted, the  memory  management  (MM)  subsystem will prune the buffer cache
more heavily than other memory to compensate.

max_percent
-----------

This is the maximum amount of memory that can be used for buffer memory.

freepages
---------

This file contains three values: min, low and high:

min
---
When the  number  of  free  pages  in the system reaches this number, only the
kernel can allocate more memory.

low
---
If the number of free pages falls below this point, the kernel starts swapping
aggressively.

high
----
The kernel  tries  to  keep  up to this amount of memory free; if memory falls
below this point, the kernel starts gently swapping in the hopes that it never
has to do really aggressive swapping.

kswapd
------

Kswapd is  the  kernel  swap  out daemon. That is, kswapd is that piece of the
kernel that  frees  memory when it gets fragmented or full. Since every system
is different, you'll probably want some control over this piece of the system.

The file contains three numbers:

tries_base
----------

The maximum  number  of  pages kswapd tries to free in one round is calculated
from this  number.  Usually  this  number  will  be  divided  by  4  or 8 (see
mm/vmscan.c), so it isn't as big as it looks.

When you  need to increase the bandwidth to/from swap, you'll want to increase
this number.

tries_min
---------

This is  the  minimum number of times kswapd tries to free a page each time it
is called. Basically it's just there to make sure that kswapd frees some pages
even when it's being called with minimum priority.

swap_cluster
------------

This is probably the greatest influence on system performance.

swap_cluster is  the  number  of  pages kswapd writes in one turn. You'll want
this value  to  be  large  so that kswapd does its I/O in large chunks and the
disk doesn't  have  to  seek  as  often, but you don't want it to be too large
since that would flood the request queue.

overcommit_memory
-----------------

This file  contains  one  value.  The following algorithm is used to decide if
there's enough  memory:  if  the  value of overcommit_memory is positive, then
there's always  enough  memory. This is a useful feature, since programs often
malloc() huge  amounts  of  memory 'just in case', while they only use a small
part of  it.  Leaving  this value at 0 will lead to the failure of such a huge
malloc(), when in fact the system has enough memory for the program to run.

On the  other  hand,  enabling this feature can cause you to run out of memory
and thrash the system to death, so large and/or important servers will want to
set this value to 0.

pagecache
---------

This file  does exactly the same job as buffermem, only this file controls the
amount of memory allowed for memory mapping and generic caching of files.

You don't  want  the  minimum level to be too low, otherwise your system might
thrash when memory is tight or fragmentation is high.

pagetable_cache
---------------

The kernel  keeps a number of page tables in a per-processor cache (this helps
a lot  on  SMP systems). The cache size for each processor will be between the
low and the high value.

On a  low-memory,  single  CPU system, you can safely set these values to 0 so
you don't  waste  memory.  It  is  used  on SMP systems so that the system can
perform fast  pagetable allocations without having to acquire the kernel memory
lock.

For large  systems,  the  settings  are probably fine. For normal systems they
won't hurt  a  bit.  For  small  systems  (  less  than  16MB ram) it might be
advantageous to set both values to 0.

swapctl
-------

This file  contains  no less than 8 variables. All of these values are used by
kswapd.

The first four variables
* sc_max_page_age,
* sc_page_advance,
* sc_page_decline and
* sc_page_initial_age
are used  to  keep  track  of  Linux's page aging. Page aging is a bookkeeping
method to  track  which pages of memory are often used, and which pages can be
swapped out without consequences.

When a  page  is  swapped in, it starts at sc_page_initial_age (default 3) and
when the  page  is  scanned  by  kswapd,  its age is adjusted according to the
following scheme:

* If  the  page  was used since the last time we scanned, its age is increased
  by sc_page_advance  (default  3).  Where  the  maximum  value  is  given  by
  sc_max_page_age (default 20).
* Otherwise  (meaning  it wasn't used) its age is decreased by sc_page_decline
  (default 1).

When a page reaches age 0, it's ready to be swapped out.

The variables  sc_age_cluster_fract, sc_age_cluster_min, sc_pageout_weight and
sc_bufferout_weight, can  be  used  to  control  kswapd's  aggressiveness  in
swapping out pages.

Sc_age_cluster_fract is used to calculate how many pages from a process are to
be scanned by kswapd. The formula used is

(sc_age_cluster_fract divided by 1024) times resident set size

So if you want kswapd to scan the whole process, sc_age_cluster_fract needs to
have a  value  of  1024.  The  minimum  number  of  pages  kswapd will scan is
represented by sc_age_cluster_min, which is done so that kswapd will also scan
small processes.

The values  of  sc_pageout_weight  and sc_bufferout_weight are used to control
how many  tries  kswapd  will make in order to swap out one page/buffer. These
values can  be used to fine-tune the ratio between user pages and buffer/cache
memory. When  you find that your Linux system is swapping out too many process
pages in  order  to  satisfy  buffer  memory  demands,  you may want to either
increase sc_bufferout_weight, or decrease the value of sc_pageout_weight.

2.5 /proc/sys/dev - Device specific parameters
----------------------------------------------

Currently there is only support for CDROM drives, and for those, there is only
one read-only  file containing information about the CD-ROM drives attached to
the system:

  &gt;cat /proc/sys/dev/cdrom/info 
  CD-ROM information, Id: cdrom.c 2.55 1999/04/25 
   
  drive name:             sr0     hdb 
  drive speed:            32      40 
  drive # of slots:       1       0 
  Can close tray:         1       1 
  Can open tray:          1       1 
  Can lock tray:          1       1 
  Can change speed:       1       1 
  Can select disk:        0       1 
  Can read multisession:  1       1 
  Can read MCN:           1       1 
  Reports media changed:  1       1 
  Can play audio:         1       1 


You see two drives, sr0 and hdb, along with a list of their features.

2.6 /proc/sys/sunrpc - Remote procedure calls
---------------------------------------------

This directory  contains four files, which enable or disable debugging for the
RPC functions NFS, NFS-daemon, RPC and NLM. The default values are 0. They can
be set to one to turn debugging on. (The default value is 0 for each)

2.7 /proc/sys/net - Networking stuff
------------------------------------

The interface  to  the  networking  parts  of  the  kernel  is  located  in
/proc/sys/net. Table  2-3  shows all possible subdirectories. You may see only
some of them, depending on your kernel's configuration.


Table 2-3: Subdirectories in /proc/sys/net 
..............................................................................
 Directory Content             Directory  Content            
 core      General parameter   appletalk  Appletalk protocol 
 unix      Unix domain sockets netrom     NET/ROM            
 802       E802 protocol       ax25       AX25               
 ethernet  Ethernet protocol   rose       X.25 PLP layer     
 ipv4      IP version 4        x25        X.25 protocol      
 ipx       IPX                 token-ring IBM token ring     
 bridge    Bridging            decnet     DEC net            
 ipv6      IP version 6                   
..............................................................................

We will  concentrate  on IP networking here. Since AX15, X.25, and DEC Net are
only minor players in the Linux world, we'll skip them in this chapter. You'll
find some  short  info on Appletalk and IPX further on in this chapter. Review
the online  documentation  and the kernel source to get a detailed view of the
parameters for  those  protocols.  In  this  section  we'll  discuss  the
subdirectories printed  in  bold letters in the table above. As default values
are suitable for most needs, there is no need to change these values.

/proc/sys/net/core - Network core options
-----------------------------------------

rmem_default
------------

The default setting of the socket receive buffer in bytes.

rmem_max
--------

The maximum receive socket buffer size in bytes.

wmem_default
------------

The default setting (in bytes) of the socket send buffer.

wmem_max
--------

The maximum send socket buffer size in bytes.

message_burst and message_cost
------------------------------

These parameters  are used to limit the warning messages written to the kernel
log from  the  networking  code.  They  enforce  a  rate  limit  to  make  a
denial-of-service attack  impossible. A higher message_cost factor, results in
fewer messages that will be written. Message_burst controls when messages will
be dropped.  The  default  settings  limit  warning messages to one every five
seconds.

netdev_max_backlog
------------------

Maximum number  of  packets,  queued  on  the  INPUT  side, when the interface
receives packets faster than kernel can process them.

optmem_max
----------

Maximum ancillary buffer size allowed per socket. Ancillary data is a sequence
of struct cmsghdr structures with appended data.

/proc/sys/net/unix - Parameters for Unix domain sockets
-------------------------------------------------------

There are  only  two  files  in this subdirectory. They control the delays for
deleting and destroying socket descriptors.

2.8 /proc/sys/net/ipv4 - IPV4 settings
--------------------------------------

IP version  4  is  still the most used protocol in Unix networking. It will be
replaced by  IP version 6 in the next couple of years, but for the moment it's
the de  facto  standard  for  the  internet  and  is  used  in most networking
environments around  the  world.  Because  of the importance of this protocol,
we'll have a deeper look into the subtree controlling the behavior of the IPv4
subsystem of the Linux kernel.

Let's start with the entries in /proc/sys/net/ipv4.

ICMP settings
-------------

icmp_echo_ignore_all and icmp_echo_ignore_broadcasts
----------------------------------------------------

Turn on (1) or off (0), if the kernel should ignore all ICMP ECHO requests, or
just those to broadcast and multicast addresses.

Please note that if you accept ICMP echo requests with a broadcast/multi\-cast
destination address  your  network  may  be  used as an exploder for denial of
service packet flooding attacks to other hosts.

icmp_destunreach_rate, icmp_echoreply_rate, icmp_paramprob_rate and icmp_timeexeed_rate
---------------------------------------------------------------------------------------

Sets limits  for  sending  ICMP  packets  to specific targets. A value of zero
disables all  limiting.  Any  positive  value sets the maximum package rate in
hundredth of a second (on Intel systems).

IP settings
-----------

ip_autoconfig
-------------

This file contains the number one if the host received its IP configuration by
RARP, BOOTP, DHCP or a similar mechanism. Otherwise it is zero.

ip_default_ttl
--------------

TTL (Time  To  Live) for IPv4 interfaces. This is simply the maximum number of
hops a packet may travel.

ip_dynaddr
----------

Enable dynamic  socket  address rewriting on interface address change. This is
useful for dialup interface with changing IP addresses.

ip_forward
----------

Enable or  disable forwarding of IP packages between interfaces. Changing this
value resets  all other parameters to their default values. They differ if the
kernel is configured as host or router.

ip_local_port_range
-------------------

Range of  ports  used  by  TCP  and UDP to choose the local port. Contains two
numbers, the  first  number  is the lowest port, the second number the highest
local port.  Default  is  1024-4999.  Should  be  changed  to  32768-61000 for
high-usage systems.

ip_no_pmtu_disc
---------------

Global switch  to  turn  path  MTU  discovery off. It can also be set on a per
socket basis by the applications or on a per route basis.

ip_masq_debug
-------------

Enable/disable debugging of IP masquerading.

IP fragmentation settings
-------------------------

ipfrag_high_trash and ipfrag_low_trash
--------------------------------------

Maximum memory  used to reassemble IP fragments. When ipfrag_high_thresh bytes
of memory  is  allocated  for  this  purpose,  the  fragment handler will toss
packets until ipfrag_low_thresh is reached.

ipfrag_time
-----------

Time in seconds to keep an IP fragment in memory.

TCP settings
------------

tcp_ecn
-------

This file controls the use of the ECN bit in the IPv4 headers, this is a new
feature about Explicit Congestion Notification, but some routers and firewalls
block trafic that has this bit set, so it could be necessary to echo 0 to
/proc/sys/net/ipv4/tcp_ecn, if you want to talk to this sites. For more info
you could read RFC2481.

tcp_retrans_collapse
--------------------

Bug-to-bug compatibility with some broken printers. On retransmit, try to send
larger packets to work around bugs in certain TCP stacks. Can be turned off by
setting it to zero.

tcp_keepalive_probes
--------------------

Number of  keep  alive  probes  TCP  sends  out,  until  it  decides  that the
connection is broken.

tcp_keepalive_time
------------------

How often  TCP  sends out keep alive messages, when keep alive is enabled. The
default is 2 hours.

tcp_syn_retries
---------------

Number of  times  initial  SYNs  for  a  TCP  connection  attempt  will  be
retransmitted. Should  not  be  higher  than 255. This is only the timeout for
outgoing connections,  for  incoming  connections the number of retransmits is
defined by tcp_retries1.

tcp_sack
--------

Enable select acknowledgments after RFC2018.

tcp_timestamps
--------------

Enable timestamps as defined in RFC1323.

tcp_stdurg
----------

Enable the  strict  RFC793 interpretation of the TCP urgent pointer field. The
default is  to  use  the  BSD  compatible interpretation of the urgent pointer
pointing to the first byte after the urgent data. The RFC793 interpretation is
to have  it  point  to  the last byte of urgent data. Enabling this option may
lead to interoperatibility problems. Disabled by default.

tcp_syncookies
--------------

Only valid  when  the  kernel  was  compiled  with CONFIG_SYNCOOKIES. Send out
syncookies when  the  syn backlog queue of a socket overflows. This is to ward
off the common 'syn flood attack'. Disabled by default.

Note that  the  concept  of a socket backlog is abandoned. This means the peer
may not  receive  reliable  error  messages  from  an  over loaded server with
syncookies enabled.

tcp_window_scaling
------------------

Enable window scaling as defined in RFC1323.

tcp_fin_timeout
---------------

The length  of  time  in  seconds  it  takes to receive a final FIN before the
socket is  always  closed.  This  is  strictly  a  violation  of  the  TCP
specification, but required to prevent denial-of-service attacks.

tcp_max_ka_probes
-----------------

Indicates how  many  keep alive probes are sent per slow timer run. Should not
be set too high to prevent bursts.

tcp_max_syn_backlog
-------------------

Length of  the per socket backlog queue. Since Linux 2.2 the backlog specified
in listen(2)  only  specifies  the  length  of  the  backlog  queue of already
established sockets. When more connection requests arrive Linux starts to drop
packets. When  syncookies  are  enabled the packets are still answered and the
maximum queue is effectively ignored.

tcp_retries1
------------

Defines how  often  an  answer  to  a  TCP connection request is retransmitted
before giving up.

tcp_retries2
------------

Defines how often a TCP packet is retransmitted before giving up.

Interface specific settings
---------------------------

In the directory /proc/sys/net/ipv4/conf you'll find one subdirectory for each
interface the  system  knows about and one directory calls all. Changes in the
all subdirectory  affect  all  interfaces,  whereas  changes  in  the  other
subdirectories affect  only  one  interface.  All  directories  have  the same
entries:

accept_redirects
----------------

This switch  decides  if the kernel accepts ICMP redirect messages or not. The
default is 'yes' if the kernel is configured for a regular host and 'no' for a
router configuration.

accept_source_route
-------------------

Should source  routed  packages  be  accepted  or  declined.  The  default  is
dependent on  the  kernel  configuration.  It's 'yes' for routers and 'no' for
hosts.

bootp_relay
~~~~~~~~~~~

Accept packets  with source address 0.b.c.d with destinations not to this host
as local ones. It is supposed that a BOOTP relay daemon will catch and forward
such packets.

The default  is  0,  since this feature is not implemented yet (kernel version
2.2.12).

forwarding
----------

Enable or disable IP forwarding on this interface.

log_martians
------------

Log packets with source addresses with no known route to kernel log.

mc_forwarding
-------------

Do multicast routing. The kernel needs to be compiled with CONFIG_MROUTE and a
multicast routing daemon is required.

proxy_arp
---------

Does (1) or does not (0) perform proxy ARP.

rp_filter
---------

Integer value determines if a source validation should be made. 1 means yes, 0
means no.  Disabled by default, but local/broadcast address spoofing is always
on.

If you  set this to 1 on a router that is the only connection for a network to
the net,  it  will  prevent  spoofing  attacks  against your internal networks
(external addresses  can  still  be  spoofed), without the need for additional
firewall rules.

secure_redirects
----------------

Accept ICMP  redirect  messages  only  for gateways, listed in default gateway
list. Enabled by default.

shared_media
------------

If it  is  not  set  the kernel does not assume that different subnets on this
device can communicate directly. Default setting is 'yes'.

send_redirects
--------------

Determines whether to send ICMP redirects to other hosts.

Routing settings
----------------

The directory  /proc/sys/net/ipv4/route  contains  several  file  to  control
routing issues.

error_burst and error_cost
--------------------------

These parameters  are used to limit the warning messages written to the kernel
log from  the  routing  code.  The  higher the error_cost factor is, the fewer
messages will  be written. Error_burst controls when messages will be dropped.
The default settings limit warning messages to one every five seconds.

flush
-----

Writing to this file results in a flush of the routing cache.

gc_elastic, gc_interval, gc_min_interval, gc_tresh, gc_timeout
--------------------------------------------------------------

Values to  control  the  frequency  and  behavior  of  the  garbage collection
algorithm for the routing cache.

max_size
--------

Maximum size  of  the routing cache. Old entries will be purged once the cache
reached has this size.

max_delay, min_delay
--------------------

Delays for flushing the routing cache.

redirect_load, redirect_number
------------------------------

Factors which  determine  if  more ICPM redirects should be sent to a specific
host. No  redirects  will be sent once the load limit or the maximum number of
redirects has been reached.

redirect_silence
----------------

Timeout for redirects. After this period redirects will be sent again, even if
this has been stopped, because the load or number limit has been reached.

Network Neighbor handling
-------------------------

Settings about how to handle connections with direct neighbors (nodes attached
to the same link) can be found in the directory /proc/sys/net/ipv4/neigh.

As we  saw  it  in  the  conf directory, there is a default subdirectory which
holds the  default  values, and one directory for each interface. The contents
of the  directories  are identical, with the single exception that the default
settings contain additional options to set garbage collection parameters.

In the interface directories you'll find the following entries:

base_reachable_time
-------------------

A base  value  used for computing the random reachable time value as specified
in RFC2461.

retrans_time
------------

The time,  expressed  in  jiffies  (1/100 sec), between retransmitted Neighbor
Solicitation messages.  Used  for  address  resolution  and  to determine if a
neighbor is unreachable.

unres_qlen
----------

Maximum queue  length  for a pending arp request - the number of packets which
are accepted from other layers while the ARP address is still resolved.

anycast_delay
-------------

Maximum for  random  delay  of  answers  to  neighbor solicitation messages in
jiffies (1/100  sec). Not yet implemented (Linux does not have anycast support
yet).

ucast_solicit
-------------

Maximum number of retries for unicast solicitation.

mcast_solicit
-------------

Maximum number of retries for multicast solicitation.

delay_first_probe_time
----------------------

Delay for  the  first  time  probe  if  the  neighbor  is  reachable.  (see
gc_stale_time)

locktime
--------

An ARP/neighbor  entry  is only replaced with a new one if the old is at least
locktime old. This prevents ARP cache thrashing.

proxy_delay
-----------

Maximum time  (real  time is random [0..proxytime]) before answering to an ARP
request for  which  we have an proxy ARP entry. In some cases, this is used to
prevent network flooding.

proxy_qlen
----------

Maximum queue length of the delayed proxy arp timer. (see proxy_delay).

app_solcit
----------

Determines the  number of requests to send to the user level ARP daemon. Use 0
to turn off.

gc_stale_time
-------------

Determines how  often  to  check  for stale ARP entries. After an ARP entry is
stale it  will  be resolved again (which is useful when an IP address migrates
to another  machine).  When  ucast_solicit is greater than 0 it first tries to
send an  ARP  packet  directly  to  the  known  host  When  that  fails  and
mcast_solicit is greater than 0, an ARP request is broadcasted.

2.9 Appletalk
-------------

The /proc/sys/net/appletalk  directory  holds the Appletalk configuration data
when Appletalk is loaded. The configurable parameters are:

aarp-expiry-time
----------------

The amount  of  time  we keep an ARP entry before expiring it. Used to age out
old hosts.

aarp-resolve-time
-----------------

The amount of time we will spend trying to resolve an Appletalk address.

aarp-retransmit-limit
---------------------

The number of times we will retransmit a query before giving up.

aarp-tick-time
--------------

Controls the rate at which expires are checked.

The directory  /proc/net/appletalk  holds the list of active Appletalk sockets
on a machine.

The fields  indicate  the DDP type, the local address (in network:node format)
the remote  address,  the  size of the transmit pending queue, the size of the
received queue  (bytes waiting for applications to read) the state and the uid
owning the socket.

/proc/net/atalk_iface lists  all  the  interfaces  configured for appletalk.It
shows the  name  of the interface, its Appletalk address, the network range on
that address  (or  network number for phase 1 networks), and the status of the
interface.

/proc/net/atalk_route lists  each  known  network  route.  It lists the target
(network) that the route leads to, the router (may be directly connected), the
route flags, and the device the route is using.

2.10 IPX
--------

The IPX protocol has no tunable values in proc/sys/net.

The IPX  protocol  does,  however,  provide  proc/net/ipx. This lists each IPX
socket giving  the  local  and  remote  addresses  in  Novell  format (that is
network:node:port). In  accordance  with  the  strange  Novell  tradition,
everything but the port is in hex. Not_Connected is displayed for sockets that
are not  tied to a specific remote address. The Tx and Rx queue sizes indicate
the number  of  bytes  pending  for  transmission  and  reception.  The  state
indicates the  state  the  socket  is  in and the uid is the owning uid of the
socket.

The /proc/net/ipx_interface  file lists all IPX interfaces. For each interface
it gives  the network number, the node number, and indicates if the network is
the primary  network.  It  also  indicates  which  device  it  is bound to (or
Internal for  internal  networks)  and  the  Frame  Type if appropriate. Linux
supports 802.3,  802.2,  802.2  SNAP  and DIX (Blue Book) ethernet framing for
IPX.

The /proc/net/ipx_route  table  holds  a list of IPX routes. For each route it
gives the  destination  network, the router node (or Directly) and the network
address of the router (or Connected) for internal networks.

------------------------------------------------------------------------------
Summary
------------------------------------------------------------------------------
Certain aspects  of  kernel  behavior  can be modified at runtime, without the
need to  recompile  the kernel, or even to reboot the system. The files in the
/proc/sys tree  can  not only be read, but also modified. You can use the echo
command to write value into these files, thereby changing the default settings
of the kernel.
------------------------------------------------------------------------------

</screen>

</sect1>




</appendix>
 <glossary id="glossary"><?dbhtml filename="gloss.html"?>
  <title>Glossary</title>
<abstract><para>This section contains an alphabetical overview of commands discussed in this document.</para></abstract>
<glossdiv id="A"><title>A</title>

  <glossentry id="a2ps">
    <glossterm>a2ps</glossterm>
    <glossdef>
      <para>Format files for printing on a PostScript printer, see <xref linkend="sect_08_01_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="acroread">
    <glossterm>acroread</glossterm>
    <glossdef>
      <para>PDF viewer, see <xref linkend="sect_08_01_02_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="adduser">
    <glossterm>adduser</glossterm>
    <glossdef>
      <para>Create a new user or update default new user information.</para>
    </glossdef>
    </glossentry>

  <glossentry id="alias">
    <glossterm>alias</glossterm>
    <glossdef>
      <para>Create a shell alias for a command.</para>
    </glossdef>
    </glossentry>

  <glossentry id="anacron">
    <glossterm>anacron</glossterm>
    <glossdef>
      <para>Execute commands periodically, does not assume continuously running machine.</para>
    </glossdef>
    </glossentry>

  <glossentry id="apropos">
    <glossterm>apropos</glossterm>
    <glossdef>
      <para>Search the whatis database for strings, see <xref linkend="sect_02_03_03_02"></xref>.</para>
    </glossdef>
    </glossentry>


  <glossentry id="apt-get">
    <glossterm>apt-get</glossterm>
    <glossdef>
      <para>APT package handling utility, see <xref linkend="sect_07_06_03_02"></xref>.</para>
    </glossdef>
    </glossentry>


  <glossentry id="aspell">
    <glossterm>aspell</glossterm>
    <glossdef>
      <para>Spell checker.</para>
    </glossdef>
    </glossentry>

  <glossentry id="at">
    <glossterm>at, atq, atrm</glossterm>
    <glossdef>
      <para>Queue, examine or delete jobs for later execution, see <xref linkend="sect_04_01_02_02"></xref> and <xref linkend="sect_04_04_03"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="aumix">
    <glossterm>aumix</glossterm>
    <glossdef>
      <para>Adjust audio mixer, see <xref linkend="sect_11_02_02_03"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="awk">
    <glossterm>(g)awk</glossterm>
    <glossdef>
      <para>Pattern scanning and processing language.</para>
    </glossdef>
    </glossentry>

</glossdiv>

<glossdiv id="B"><title>B</title>
  <glossentry id="bash">
    <glossterm>bash</glossterm>
    <glossdef>
      <para>Bourne Again SHell, see <xref linkend="sect_03_02_03_02"></xref> and <xref linkend="sect_07_02_07"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="batch">
    <glossterm>batch</glossterm>
    <glossdef>
      <para>Queue, examine or delete jobs for later execution, see <xref linkend="sect_04_01_02_02"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="bg">
    <glossterm>bg</glossterm>
    <glossdef>
      <para>Run a job in the background, see <xref linkend="sect_04_01_02_01"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="bitmap">
    <glossterm>bitmap</glossterm>
    <glossdef>
      <para>Bitmap editor and converter utilities for the X window System.</para>
    </glossdef>
    </glossentry>

  <glossentry id="bzip2">
    <glossterm>bzip2</glossterm>
    <glossdef>
      <para>A block-sorting file compressor, see <xref linkend="sect_09_01_01_03"></xref>.</para>
    </glossdef>
    </glossentry>
</glossdiv>
<glossdiv id="C"><title>C</title>
  <glossentry id="cat">
    <glossterm>cat</glossterm>
    <glossdef>
      <para>Concatenate files and print to standard output, see <xref linkend="sect_02_02"></xref> and <xref linkend="sect_03_02_04"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="cd">
    <glossterm>cd</glossterm>
    <glossdef>
      <para>Change directory, see <xref linkend="sect_02_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="cdp">
    <glossterm>cdp/cdplay</glossterm>
    <glossdef>
      <para>An interactive text-mode program for controlling and playing
       audio CD Roms under Linux, see <xref linkend="sect_11_02_01"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="cdparanoia">
    <glossterm>cdparanoia</glossterm>
    <glossdef>
      <para>An audio CD reading utility which
       includes extra data verification features, see <xref linkend="sect_11_02_01"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="cdrecord">
    <glossterm>cdrecord</glossterm>
    <glossdef>
      <para>Record a CD-R, see <xref linkend="sect_09_02_02"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="chattr">
    <glossterm>chattr</glossterm>
    <glossdef>
      <para>Change file attributes.</para>
    </glossdef>
    </glossentry>

  <glossentry id="chgrp">
    <glossterm>chgrp</glossterm>
    <glossdef>
      <para>Change group ownership, see <xref linkend="sect_03_04_02_03"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="chkconfig">
    <glossterm>chkconfig</glossterm>
    <glossdef>
      <para>Update or query run level information for system services, see <xref linkend="sect_04_02_05_01"></xref>.</para>
    </glossdef>
    </glossentry>


  <glossentry id="chmod">
    <glossterm>chmod</glossterm>
    <glossdef>
      <para>Change file access permissions, see <xref linkend="sect_03_04_01"></xref>, <xref linkend="sect_03_04_02_01"></xref> and <xref linkend="sect_03_04_02_04"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="chown">
    <glossterm>chown</glossterm>
    <glossdef>
      <para>Change file owner and group, see <xref linkend="sect_03_04_02_03"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="compress">
<glossterm>compress</glossterm>
<glossdef><para>Compress files.</para>
</glossdef>
</glossentry>
  <glossentry id="cp">
    <glossterm>cp</glossterm>
    <glossdef>
      <para>Copy files and directories, see <xref linkend="sect_03_03_02"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="crontab">
    <glossterm>crontab</glossterm>
    <glossdef>
      <para>Maintain crontab files, see <xref linkend="sect_04_04_04"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="csh">
    <glossterm>csh</glossterm>
    <glossdef>
      <para>Open a C shell, see <xref linkend="sect_03_02_03_02"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="cut">
    <glossterm>cut</glossterm>
    <glossdef>
      <para>Remove sections from each line of file(s), see <xref linkend="sect_07_02_07_02"></xref>.</para>
    </glossdef>
    </glossentry>

</glossdiv>
<glossdiv id="D"><title>D</title>
  <glossentry id="date">
    <glossterm>date</glossterm>
    <glossdef>
      <para>Print or set system date and time.</para>
    </glossdef>
    </glossentry>
  <glossentry id="dd">
    <glossterm>dd</glossterm>
    <glossdef>
      <para>Convert and copy a file (disk dump), see <xref linkend="sect_09_02_01_02"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="df">
    <glossterm>df</glossterm>
    <glossdef>
      <para>Report file system disk usage, see <xref linkend="sect_03_01_02_03"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="dhcpcd">
    <glossterm>dhcpcd</glossterm>
    <glossdef>
      <para>DHCP client daemon, see <xref linkend="sect_10_02_08"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="diff">
    <glossterm>diff</glossterm>
    <glossdef>
      <para>Find differences between two files.</para>
    </glossdef>
    </glossentry>

  <glossentry id="dig">
    <glossterm>dig</glossterm>
    <glossdef>
      <para>Send domain name query packets to name servers, see <xref linkend="sect_10_01_02_06"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="dmesg">
    <glossterm>dmesg</glossterm>
    <glossdef>
      <para>Print or control the kernel ring buffer.</para>
    </glossdef>
    </glossentry>

  <glossentry id="du">
    <glossterm>du</glossterm>
    <glossdef>
      <para>Estimate file space usage.</para>
    </glossdef>
    </glossentry>
</glossdiv>
<glossdiv id="E"><title>E</title>

  <glossentry id="echo">
    <glossterm>echo</glossterm>
    <glossdef>
      <para>Display a line of text, see <xref linkend="sect_03_02_01"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="ediff">
    <glossterm>ediff</glossterm>
    <glossdef>
      <para>Diff to English translator.</para>
    </glossdef>
    </glossentry>
  <glossentry id="egrep">
    <glossterm>egrep</glossterm>
    <glossdef>
      <para>Extended grep.</para>
    </glossdef>
    </glossentry>

  <glossentry id="eject">
    <glossterm>eject</glossterm>
    <glossdef>
      <para>Unmount and eject removable media, see <xref linkend="sect_07_06_05_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="emacs">
    <glossterm>emacs</glossterm>
    <glossdef>
      <para>Start the Emacs editor, see <xref linkend="sect_06_01_02_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="exec">
    <glossterm>exec</glossterm>
    <glossdef>
      <para>Invoke subprocess(es).</para>
    </glossdef>
    </glossentry>

  <glossentry id="exit">
    <glossterm>exit</glossterm>
    <glossdef>
      <para>Exit current shell, see <xref linkend="sect_02_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="export">
    <glossterm>export</glossterm>
    <glossdef>
      <para>Add function(s) to the shell environment, see <xref linkend="sect_03_02_01"></xref>, <xref linkend="sect_07_02_02"></xref> and <xref linkend="sect_07_02_06_02"></xref>.</para>
    </glossdef>
    </glossentry>

</glossdiv>
<glossdiv id="F"><title>F</title>

  <glossentry id="fax2ps">
    <glossterm>fax2ps</glossterm>
    <glossdef>
      <para>Convert a TIFF facsimile to PostScript, see <xref linkend="sect_08_01_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="fdformat">
    <glossterm>fdformat</glossterm>
    <glossdef>
      <para>Format floppy disk, see <xref linkend="sect_09_02_01_01"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="fdisk">
    <glossterm>fdisk</glossterm>
    <glossdef>
      <para>Partition table manipulator for Linux, see <xref linkend="sect_03_01_02_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="fetchmail">
    <glossterm>fetchmail</glossterm>
    <glossdef>
      <para>Fetch mail from a POP, IMAP, ETRN or ODMR-capable server, see <xref linkend="sect_10_02_02_03"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="fg">
    <glossterm>fg</glossterm>
    <glossdef>
      <para>Bring a job in the foreground, see <xref linkend="sect_04_01_02_01"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="file">
    <glossterm>file</glossterm>
    <glossdef>
      <para>Determine file type, see <xref linkend="sect_03_03_01_02"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="find">
    <glossterm>find</glossterm>
    <glossdef>
      <para>Find files, see <xref linkend="sect_03_03_03_03"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="formail">
    <glossterm>formail</glossterm>
    <glossdef>
      <para>Mail (re)formatter, see <xref linkend="sect_10_02_02_03"></xref>.</para>
    </glossdef>
    </glossentry>


  <glossentry id="fortune">
    <glossterm>fortune</glossterm>
    <glossdef>
      <para>Print a random, hopefully interesting adage.</para>
    </glossdef>
    </glossentry>
  <glossentry id="ftp">
    <glossterm>ftp</glossterm>
    <glossdef>
      <para>Transfer files (unsafe unless anonymous account is used!)services, see <xref linkend="sect_10_02_04_02"></xref>.</para>
    </glossdef>
    </glossentry>
</glossdiv>
<glossdiv id="G"><title>G</title>

  <glossentry id="galeon">
    <glossterm>galeon</glossterm>
    <glossdef>
      <para>Graphical web browser.</para>
    </glossdef>
    </glossentry>

  <glossentry id="gdm">
    <glossterm>gdm</glossterm>
    <glossdef>
      <para>Gnome Display Manager, see <xref linkend="sect_04_02_04"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="getty">
    <glossterm>(min/a)getty</glossterm>
    <glossdef>
      <para>Control console devices.</para>
    </glossdef>
    </glossentry>

  <glossentry id="gimp">
    <glossterm>gimp</glossterm>
    <glossdef>
      <para>Image manipulation program.</para>
    </glossdef>
    </glossentry>

  <glossentry id="grep">
    <glossterm>grep</glossterm>
    <glossdef>
      <para>Print lines matching a pattern, see <xref linkend="sect_03_03_03_04"></xref> and <xref linkend="sect_05_03_01"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="groff">
    <glossterm>groff</glossterm>
    <glossdef>
      <para>Emulate nroff command with groff, see <xref linkend="sect_08_01_02"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="grub">
    <glossterm>grub</glossterm>
    <glossdef>
      <para>The grub shell, see <xref linkend="sect_04_02_03"></xref> and <xref linkend="sect_07_06_04"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="gv">
    <glossterm>gv</glossterm>
    <glossdef>
      <para>A PostScript and PDF viewer, see <xref linkend="sect_08_01_02_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="gzip">
    <glossterm>gzip</glossterm>
    <glossdef>
      <para>Compress or expand files, see <xref linkend="sect_09_01_01_03"></xref>.</para>
    </glossdef>
    </glossentry>
</glossdiv>
<glossdiv id="H"><title>H</title>

<glossentry id="halt">
    <glossterm>halt</glossterm>
    <glossdef>
      <para>Stop the system, see <xref linkend="sect_04_02_06"></xref>.</para>
    </glossdef>
    </glossentry>
<glossentry id="head">
    <glossterm>head</glossterm>
    <glossdef>
      <para>Output the first part of files, see <xref linkend="sect_03_03_04_03"></xref>.</para>
    </glossdef>
    </glossentry>


  <glossentry id="help">
    <glossterm>help</glossterm>
    <glossdef>
      <para>Display help on a shell built-in command.</para>
    </glossdef>
    </glossentry>
<glossentry id="host">
    <glossterm>host</glossterm>
    <glossdef>
      <para>DNS lookup utility, see <xref linkend="sect_10_01_02_06"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="httpd">
    <glossterm>httpd</glossterm>
    <glossdef>
      <para>Apache hypertext transfer protocol server, see <xref linkend="sect_10_02_03_01"></xref>.</para>
    </glossdef>
    </glossentry>

</glossdiv>
<glossdiv id="I"><title>I</title>

<glossentry id="id">
<glossterm>id</glossterm>
    <glossdef>
      <para>Print real and effective UIDs and GIDs, see <xref linkend="sect_03_04_01"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="ifconfig">
    <glossterm>ifconfig</glossterm>
    <glossdef>
      <para>Configure network interface or show configuration, see <xref linkend="sect_10_01_02_03"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="info">
<glossterm>info</glossterm>
<glossdef>
<para>Read Info documents, see <xref linkend="sect_02_03_03_01"></xref>.</para>
</glossdef>
</glossentry>

<glossentry id="init">
    <glossterm>init</glossterm>
    <glossdef>
      <para>Process control initialization, see <xref linkend="sect_04_01_05_01"></xref>, <xref linkend="sect_04_02_04"></xref> and <xref linkend="sect_04_02_05"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="iostat">
    <glossterm>iostat</glossterm>
    <glossdef>
      <para>Display I/O statistics, see <xref linkend="sect_04_03_05_04"></xref>.</para>
    </glossdef>
    </glossentry>


<glossentry id="ip">
    <glossterm>ip</glossterm>
    <glossdef>
      <para>Display/change network interface status, see <xref linkend="sect_10_01_02_03"></xref>.</para>
    </glossdef>
    </glossentry>


<glossentry id="ipchains">
    <glossterm>ipchains</glossterm>
    <glossdef>
      <para>IP firewall administration, see <xref linkend="sect_10_05_04_02"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="iptables">
    <glossterm>iptables</glossterm>
    <glossdef>
      <para>IP packet filter administration, see <xref linkend="sect_10_05_04_02"></xref>.</para>
    </glossdef>
    </glossentry>

</glossdiv>
<glossdiv id="J"><title>J</title>

  <glossentry id="jar">
    <glossterm>jar</glossterm>
    <glossdef>
      <para>Java archive tool, see <xref linkend="sect_09_01_01_04"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="jobs">
    <glossterm>jobs</glossterm>
    <glossdef>
      <para>List backgrounded tasks.</para>
    </glossdef>
    </glossentry>
</glossdiv>
<glossdiv id="K"><title>K</title>

<glossentry id="kdm">
    <glossterm>kdm</glossterm>
    <glossdef>
      <para>Desktop manager for KDE, see <xref linkend="sect_04_02_04"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="kill">
    <glossterm>kill(all)</glossterm>
    <glossdef>
      <para>Terminate process(es), see <xref linkend="sect_04_01_02_01"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="ksh">
    <glossterm>ksh</glossterm>
    <glossdef>
      <para>Open a Korn shell, see <xref linkend="sect_03_02_03_02"></xref>.</para>
    </glossdef>
    </glossentry>
</glossdiv>
<glossdiv id="L"><title>L</title>

  <glossentry id="ldapmodify">
    <glossterm>ldapmodify</glossterm>
    <glossdef>
      <para>Modify an LDAP entry, see <xref linkend="sect_10_02_09_03"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="ldapsearch">
    <glossterm>ldapsearch</glossterm>
    <glossdef>
      <para>LDAP search tool, see <xref linkend="sect_10_02_09_03"></xref>.</para>
    </glossdef>
    </glossentry>


<glossentry id="less">
<glossterm>less</glossterm>
<glossdef>
<para><command>more</command> with features, see <xref linkend="sect_03_03_04_02"></xref>.</para>
</glossdef>
</glossentry>

<glossentry id="lilo">
    <glossterm>lilo</glossterm>
    <glossdef>
      <para>Linux boot loader, see <xref linkend="sect_04_02"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="links">
    <glossterm>links</glossterm>
    <glossdef>
      <para>Text mode WWW browser, see <xref linkend="sect_10_02_03_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="ln">
    <glossterm>ln</glossterm>
    <glossdef>
      <para>Make links between files, see <xref linkend="sect_03_03_05"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="loadkeys">
    <glossterm>loadkeys</glossterm>
    <glossdef>
      <para>Load keyboard translation tables, see <xref linkend="sect_07_05_01"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="locate">
    <glossterm>locate</glossterm>
    <glossdef>
      <para>Find files, see <xref linkend="sect_03_03_03_03"></xref> and <xref linkend="sect_04_04_04"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="logout">
    <glossterm>logout</glossterm>
    <glossdef>
      <para>Close current shell, see <xref linkend="sect_02_01_03"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="lp">
    <glossterm>lp</glossterm>
    <glossdef>
      <para>Send requests to the LP print service, see <xref linkend="sect_08_01"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="lpc">
    <glossterm>lpc</glossterm>
    <glossdef>
      <para>Line printer control program, see <xref linkend="sect_08_01"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="lpq">
    <glossterm>lpq</glossterm>
    <glossdef>
      <para>Print spool queue examination program, see <xref linkend="sect_08_01"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="lpr">
    <glossterm>lpr</glossterm>
    <glossdef>
      <para>Offline print, see <xref linkend="sect_08_01"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="lprm">
    <glossterm>lprm</glossterm>
    <glossdef>
      <para>Remove print requests, see <xref linkend="sect_08_01"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="ls">
    <glossterm>ls</glossterm>
    <glossdef>
      <para>List directory content, see <xref linkend="sect_02_02"></xref>, <xref linkend="sect_03_01_01_02"></xref> and <xref linkend="sect_03_03_01_01"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="lynx">
    <glossterm>lynx</glossterm>
    <glossdef>
      <para>Text mode WWW browser, see <xref linkend="sect_10_02_03_02"></xref>.</para>
    </glossdef>
    </glossentry>

</glossdiv>
<glossdiv id="M"><title>M</title>
  <glossentry id="mail">
    <glossterm>mail</glossterm>
    <glossdef>
      <para>Send and receive mail, see <xref linkend="sect_10_02_02_03"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="man">
    <glossterm>man</glossterm>
    <glossdef>
      <para>Read man pages, see <xref linkend="sect_02_03_02"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="mcopy">
    <glossterm>mcopy</glossterm>
    <glossdef>
      <para>Copy MSDOS files to/from Unix.</para>
    </glossdef>
    </glossentry>

<glossentry id="mdir">
    <glossterm>mdir</glossterm>
    <glossdef>
      <para>Display an MSDOS directory.</para>
    </glossdef>
    </glossentry>

<glossentry id="memusage">
    <glossterm>memusage</glossterm>
    <glossdef>
      <para>Display memory usage, see <xref linkend="sect_04_03_05_03"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="memusagestat">
    <glossterm>memusagestat</glossterm>
    <glossdef>
      <para>Display memory usage statistics, see <xref linkend="sect_04_03_05_03"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="mesg">
    <glossterm>mesg</glossterm>
    <glossdef>
      <para>Control write access to your terminal, see <xref linkend="sect_04_01_06"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="mformat">
    <glossterm>mformat</glossterm>
    <glossdef>
      <para>Add an MSDOS file system to a low-level formatted floppy disk, see <xref linkend="sect_09_02_01_01"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="mkbootdisk">
    <glossterm>mkbootdisk</glossterm>
    <glossdef>
      <para>Creates a stand-alone boot floppy for the running system.</para>
    </glossdef>
    </glossentry>

  <glossentry id="mkdir">
    <glossterm>mkdir</glossterm>
    <glossdef>
      <para>Create directory, see <xref linkend="sect_03_03_02"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="mkisofs">
    <glossterm>mkisofs</glossterm>
    <glossdef>
      <para>Create a hybrid ISO9660 filesystem, see <xref linkend="sect_09_02_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="mplayer">
    <glossterm>mplayer</glossterm>
    <glossdef>
      <para>Movie player/encoder for Linux, see <xref linkend="sect_07_03_03_04"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="more">
    <glossterm>more</glossterm>
    <glossdef>
      <para>Filter for displaying text one screen at the time, see <xref linkend="sect_03_03_04_02"></xref>.</para>
    </glossdef>
    </glossentry>


<glossentry id="mount">
    <glossterm>mount</glossterm>
    <glossdef>
      <para>Mount a file system or display information about mounted file systems, see <xref linkend="sect_07_06_05_01"></xref>.</para>
    </glossdef>
    </glossentry>


<glossentry id="mozilla">
    <glossterm>mozilla</glossterm>
    <glossdef>
      <para>Web browser, see <xref linkend="sect_10_02_03_02"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="mt">
    <glossterm>mt</glossterm>
    <glossdef>
      <para>Control magnetic tape drive operation.</para>
    </glossdef>
    </glossentry>

<glossentry id="mtr">
    <glossterm>mtr</glossterm>
    <glossdef>
      <para>Network diagnostic tool.</para>
    </glossdef>
    </glossentry>

  <glossentry id="mv">
    <glossterm>mv</glossterm>
    <glossdef>
      <para>Rename files, <xref linkend="sect_03_03_02"></xref>.</para>
    </glossdef>
    </glossentry>
</glossdiv>
<glossdiv id="N"><title>N</title>

<glossentry id="named">
    <glossterm>named</glossterm>
    <glossdef>
      <para>Internet domain name server, see <xref linkend="sect_10_02_07"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="ncftp">
    <glossterm>ncftp</glossterm>
    <glossdef>
      <para>Browser program for ftp services (insecure!), see <xref linkend="sect_10_02_04_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="netstat">
    <glossterm>netstat</glossterm>
    <glossdef>
      <para>Print network connections, routing tables, interface statistics, masquerade connections, and multi-cast memberships, see <xref linkend="sect_10_01_02_05"></xref> and <xref linkend="sect_10_05_02"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="nfsstat">
    <glossterm>nfsstat</glossterm>
    <glossdef>
      <para>Print statistics about networked file systems.</para>
    </glossdef>
    </glossentry>
  <glossentry id="nice">
    <glossterm>nice</glossterm>
    <glossdef>
      <para>Run a program with modified scheduling priority, see <xref linkend="sect_04_03_05_01"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="nmap">
    <glossterm>nmap</glossterm>
    <glossdef>
      <para>Network exploration tool and security scanner.</para>
    </glossdef>
    </glossentry>

<glossentry id="ntsysv">
    <glossterm>ntsysv</glossterm>
    <glossdef>
      <para>Simple interface for configuring run levels, see <xref linkend="sect_04_02_05_01"></xref>.</para>
    </glossdef>
    </glossentry>

</glossdiv>

<glossdiv id="O"><title>O</title>
  <glossentry id="ogle">
    <glossterm>ogle</glossterm>
    <glossdef>
      <para>DVD player with support for DVD menus, see <xref linkend="sect_07_03_03_04"></xref>.</para>
    </glossdef>
    </glossentry>

</glossdiv>

<glossdiv id="P"><title>P</title>
  <glossentry id="passwd">
    <glossterm>passwd</glossterm>
    <glossdef>
      <para>Change password, see <xref linkend="sect_02_02"></xref> and <xref linkend="sect_04_01_06"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="pdf2ps">
    <glossterm>pdf2ps</glossterm>
    <glossdef>
      <para>Ghostscript PDF to PostScript translator, see <xref linkend="sect_08_01_02"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="perl">
    <glossterm>perl</glossterm>
    <glossdef>
      <para>Practical Extraction and Report Language.</para>
    </glossdef>
    </glossentry>

<glossentry id="pg">
    <glossterm>pg</glossterm>
    <glossdef>
      <para>Page through text output, see <xref linkend="sect_03_03_04_02"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="ping">
    <glossterm>ping</glossterm>
    <glossdef>
      <para>Send echo request to a host, see <xref linkend="sect_10_01_02_06"></xref>.</para>
    </glossdef>
    </glossentry>
<glossentry id="pr">
    <glossterm>pr</glossterm>
    <glossdef>
      <para>Convert text files for printing.</para>
    </glossdef>
    </glossentry>

<glossentry id="printenv">
    <glossterm>printenv</glossterm>
    <glossdef>
      <para>Print all or part of environment, see <xref linkend="sect_07_02_1"></xref>.</para>
    </glossdef>
    </glossentry>


  <glossentry id="procmail">
    <glossterm>procmail</glossterm>
    <glossdef>
      <para>Autonomous mail processor, see <xref linkend="sect_10_02_02_03"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="ps">
    <glossterm>ps</glossterm>
    <glossdef>
      <para>Report process status, see <xref linkend="sect_04_01_04"></xref> and <xref linkend="sect_04_03_05_04"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="pstree">
    <glossterm>pstree</glossterm>
    <glossdef>
      <para>Display a tree of processes, see <xref linkend="sect_04_01_04"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="pwd">
    <glossterm>pwd</glossterm>
    <glossdef>
      <para>Print present working directory, see <xref linkend="sect_02_02"></xref>.</para>
    </glossdef>
    </glossentry>
</glossdiv>
<glossdiv id="Q"><title>Q</title>
  <glossentry id="quota">
    <glossterm>quota</glossterm>
    <glossdef>
      <para>Display disk usage and limits, see <xref linkend="sect_03_02_03_03"></xref>.</para>
    </glossdef>
    </glossentry>
</glossdiv>
<glossdiv id="R"><title>R</title>

  <glossentry id="rcp">
    <glossterm>rcp</glossterm>
    <glossdef>
      <para>Remote copy (unsafe!)</para>
    </glossdef>
    </glossentry>

  <glossentry id="rdesktop">
	<glossterm>rdesktop</glossterm>
	<glossdef>
	<para>Remote Desktop Protocol client, see <xref linkend="sect_10_03_06"></xref>.</para>
	</glossdef>
	</glossentry>

<glossentry id="reboot">
    <glossterm>reboot</glossterm>
    <glossdef>
      <para>Stop the system, see <xref linkend="sect_04_02_06"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="renice">
    <glossterm>renice</glossterm>
    <glossdef>
      <para>Alter priority of a running process, see <xref linkend="sect_04_03_05_01"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="rlogin">
    <glossterm>rlogin</glossterm>
    <glossdef>
      <para>Remote login (telnet, insecure!), see <xref linkend="sect_10_03_02"></xref> and <xref linkend="sect_10_03_03_02"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="rm">
    <glossterm>rm</glossterm>
    <glossdef>
      <para>Remove a file, see <xref linkend="sect_03_03_02"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="rmdir">
    <glossterm>rmdir</glossterm>
    <glossdef>
      <para>Remove a directory, see <xref linkend="sect_03_03_02_03"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="roff">
    <glossterm>roff</glossterm>
    <glossdef>
      <para>A survey of the roff typesetting system, see <xref linkend="sect_08_01_02"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="rpm">
    <glossterm>rpm</glossterm>
    <glossdef>
      <para>RPM Package Manager, see <xref linkend="sect_07_06_02_01"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="rsh">
    <glossterm>rsh</glossterm>
    <glossdef>
      <para>Remote shell (insecure!), see <xref linkend="sect_10_03_02"></xref>.</para>
    </glossdef>
    </glossentry>
</glossdiv>
<glossdiv id="S"><title>S</title>
  <glossentry id="scp">
    <glossterm>scp</glossterm>
    <glossdef>
      <para>Secure remote copy, see <xref linkend="sect_10_03_04_04"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="screen">
    <glossterm>screen</glossterm>
    <glossdef>
      <para>Screen manager with VT100 emulation, see <xref linkend="sect_04_01_02_01"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="set">
    <glossterm>set</glossterm>
    <glossdef>
      <para>Display, set or change variable.</para>
    </glossdef>
    </glossentry>
  <glossentry id="setterm">
    <glossterm>setterm</glossterm>
    <glossdef>
      <para>Set terminal attributes.</para>
    </glossdef>
    </glossentry>

  <glossentry id="sftp">
    <glossterm>sftp</glossterm>
    <glossdef>
      <para>Secure (encrypted) ftp, see <xref linkend="sect_10_02_04_02"></xref> and <xref linkend="sect_10_03_04_04"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="sh">
    <glossterm>sh</glossterm>
    <glossdef>
      <para>Open a standard shell, see <xref linkend="sect_03_02_03_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="shutdown">
    <glossterm>shutdown</glossterm>
    <glossdef>
      <para>Bring the system down, see <xref linkend="sect_04_02_06"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="sleep">
    <glossterm>sleep</glossterm>
    <glossdef>
      <para>Wait for a given period, see <xref linkend="sect_04_04_01"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="slocate">
    <glossterm>slocate</glossterm>
    <glossdef>
      <para>Security Enhanced version of the GNU Locate, see <xref linkend="sect_03_03_03_03"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="slrnn">
    <glossterm>slrnn</glossterm>
    <glossdef>
      <para>text mode Usenet client, see <xref linkend="sect_10_02_06"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="snort">
    <glossterm>snort</glossterm>
    <glossdef>
      <para>Network intrusion detection tool.</para>
    </glossdef>
    </glossentry>

  <glossentry id="sort">
    <glossterm>sort</glossterm>
    <glossdef>
      <para>Sort lines of text files, see <xref linkend="sect_05_03_02"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="ssh">
    <glossterm>ssh</glossterm>
    <glossdef>
      <para>Secure shell, see <xref linkend="sect_10_03_04"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="ssh-keygen">
    <glossterm>ssh-keygen</glossterm>
    <glossdef>
      <para>Authentication key generation, management and conversion, see <xref linkend="sect_10_03_04_05"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="stty">
    <glossterm>stty</glossterm>
    <glossdef>
      <para>Change and print terminal line settings.</para>
    </glossdef>
    </glossentry>


  <glossentry id="su">
    <glossterm>su</glossterm>
    <glossdef>
      <para>Switch user, see <xref linkend="sect_03_02_01"></xref>, <xref linkend="sect_07_06_03_02"></xref> and <xref linkend="sect_10_05_06"></xref>.</para>
    </glossdef>
    </glossentry>
</glossdiv>
<glossdiv id="T"><title>T</title>

<glossentry id="tac">
    <glossterm>tac</glossterm>
    <glossdef>
      <para>Concatenate and print files in reverse, see <xref linkend="cat"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="tail">
    <glossterm>tail</glossterm>
    <glossdef>
      <para>Output the last part of files, see <xref linkend="sect_03_03_04_03"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="talk">
    <glossterm>talk</glossterm>
    <glossdef>
      <para>Talk to a user.</para>
    </glossdef>
    </glossentry>
  <glossentry id="tar">
    <glossterm>tar</glossterm>
    <glossdef>
      <para>Archiving utility, see <xref linkend="sect_09_01_01_01"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="tcsh">
    <glossterm>tcsh</glossterm>
    <glossdef>
      <para>Open a Turbo C shell, see <xref linkend="sect_03_02_03_02"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="telnet">
    <glossterm>telnet</glossterm>
    <glossdef>
      <para>User interface to the TELNET protocol (insecure!), see <xref linkend="sect_10_03_02"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="tex">
    <glossterm>tex</glossterm>
    <glossdef>
      <para>Text formatting and typesetting, see <xref linkend="sect_08_01_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="time">
    <glossterm>time</glossterm>
    <glossdef>
      <para>Time a simple command or give resource usage, see <xref linkend="sect_04_03_02"></xref>.</para>
    </glossdef>
    </glossentry>

 <glossentry id="tin">
    <glossterm>tin</glossterm>
    <glossdef>
      <para>News reading program, see <xref linkend="sect_10_02_06"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="top">
    <glossterm>top</glossterm>
    <glossdef>
      <para>Display top CPU processes, see <xref linkend="sect_04_01_04"></xref>, <xref linkend="sect_04_03_05_03"></xref> and <xref linkend="sect_04_03_05_04"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="touch">
    <glossterm>touch</glossterm>
    <glossdef>
      <para>Change file timestamps, see <xref linkend="sect_07_01_02"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="traceroute">
    <glossterm>traceroute</glossterm>
    <glossdef>
      <para>Print the route packets take to network host, see <xref linkend="sect_10_01_02_06"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="tripwire">
    <glossterm>tripwire</glossterm>
    <glossdef>
      <para>A file integrity checker for UNIX systems, see <xref linkend="sect_10_05_05"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="troff">
    <glossterm>troff</glossterm>
    <glossdef>
      <para>Format documents, see <xref linkend="sect_08_01_02"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="tvtime">
      <glossterm>tvime</glossterm>
    <glossdef>
      <para>A high quality television application.</para>
    </glossdef>
    </glossentry>

<glossentry id="twm">
    <glossterm>twm</glossterm>
    <glossdef>
      <para>Tab Window Manager for the X Window System.</para>
    </glossdef>
    </glossentry>


</glossdiv>
<glossdiv id="U"><title>U</title>
  <glossentry id="ulimit">
    <glossterm>ulimit</glossterm>
    <glossdef>
      <para>Controll resources, see <xref linkend="sect_07_01_02_05"></xref>.</para>
    </glossdef>
    </glossentry>
  <glossentry id="umask">
    <glossterm>umask</glossterm>
    <glossdef>
      <para>Set user file creation mask, see <xref linkend="sect_03_04_02_02"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="umount">
    <glossterm>umount</glossterm>
    <glossdef>
      <para>Unmount a file system.</para>
    </glossdef>
    </glossentry>

  <glossentry id="uncompress">
    <glossterm>uncompress</glossterm>
    <glossdef>
      <para>Decompress compressed files.</para>
    </glossdef>
    </glossentry>

<glossentry id="uniq">
    <glossterm>uniq</glossterm>
    <glossdef>
      <para>Remove duplicate lines from a sorted file, see <xref linkend="sect_05_03_02"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="update">
    <glossterm>update</glossterm>
    <glossdef>
      <para>Kernel daemon to flush dirty buffers back to disk.</para>
    </glossdef>
    </glossentry>

  <glossentry id="uptime">
    <glossterm>uptime</glossterm>
    <glossdef>
      <para>Display system uptime and average load, see <xref linkend="sect_04_01_04"></xref> and <xref linkend="sect_04_03_05_02"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="userdel">
    <glossterm>userdel</glossterm>
    <glossdef>
      <para>Delete a user account and related files.</para>
    </glossdef>
    </glossentry>

</glossdiv>
<glossdiv id="V"><title>V</title>
  <glossentry id="vi">
    <glossterm>vi(m)</glossterm>
    <glossdef>
      <para>Start the vi (improved) editor, see <xref linkend="sect_06_01_02_03"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="vimtutor">
    <glossterm>vimtutor</glossterm>
    <glossdef>
      <para>The Vim tutor.</para>
    </glossdef>
    </glossentry>


  <glossentry id="vmstat">
    <glossterm>vmstat</glossterm>
    <glossdef>
      <para>Report virtual memory statistics, see <xref linkend="sect_04_03_05_04"></xref>.</para>
    </glossdef>
    </glossentry>
</glossdiv>
<glossdiv id="W"><title>W</title>
  <glossentry id="w">
    <glossterm>w</glossterm>
    <glossdef>
      <para>Show who is logged on and what they are doing.</para>
    </glossdef>
    </glossentry>

<glossentry id="wall">
    <glossterm>wall</glossterm>
    <glossdef>
      <para>Send a message to everybody's terminal, see <xref linkend="sect_04_01_06"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="wc">
    <glossterm>wc</glossterm>
    <glossdef>
      <para>Print the number of bytes, words and lines in files, see <xref linkend="sect_03_02_01"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="which">
    <glossterm>which</glossterm>
    <glossdef>
      <para>Shows the full path of (shell) commands, see <xref linkend="sect_03_02_01"></xref> and <xref linkend="sect_03_03_03_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="who">
    <glossterm>who</glossterm>
    <glossdef>
      <para>Show who is logged on, see <xref linkend="sect_04_01_06"></xref>.</para>
    </glossdef>
    </glossentry>
                                                                                
  <glossentry id="whoami">
    <glossterm>who am i</glossterm>
    <glossdef>
      <para>Print effective user ID.</para>
    </glossdef>
    </glossentry>

  <glossentry id="whois">
    <glossterm>whois</glossterm>
    <glossdef>
      <para>Query a whois or nicname database, see <xref linkend="sect_10_01_02_06"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="write">
    <glossterm>write</glossterm>
    <glossdef>
      <para>Send a message to another user, see <xref linkend="sect_04_01_06"></xref>.</para>
    </glossdef>
    </glossentry>
</glossdiv>
<glossdiv id="X"><title>X</title>

<glossentry id="xauth">
    <glossterm>xauth</glossterm>
    <glossdef>
      <para>X authority file utility.</para>
    </glossdef>
    </glossentry>

<glossentry id="xawtv">
    <glossterm>xawtv</glossterm>
    <glossdef>
      <para>An X11 program for watching TV.</para>
    </glossdef>
    </glossentry>

  <glossentry id="xcdroast">
    <glossterm>xcdroast</glossterm>
    <glossdef>
      <para>Graphical front end to cdrecord, see <xref linkend="sect_09_02_02"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="xclock">
    <glossterm>xclock</glossterm>
    <glossdef>
      <para>Analog/digital clock for X.</para>
    </glossdef>
    </glossentry>

<glossentry id="xconsole">
    <glossterm>xconsole</glossterm>
    <glossdef>
      <para>Monitor system console messages with X.</para>
    </glossdef>
    </glossentry>

<glossentry id="xdm">
    <glossterm>xdm</glossterm>
    <glossdef>
      <para>X Display Manager with support for XDMCP, host chooser, see <xref linkend="sect_04_02_04"></xref> and <xref linkend="sect_07_03_02"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="xdvi">
    <glossterm>xdvi</glossterm>
    <glossdef>
      <para>DVI viewer, see <xref linkend="sect_08_01_02_02"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="xfs">
    <glossterm>xfs</glossterm>
    <glossdef>
      <para>X font server.</para>
    </glossdef>
    </glossentry>

  <glossentry id="xhost">
    <glossterm>xhost</glossterm>
    <glossdef>
      <para>Server access control program for X, see <xref linkend="sect_10_03_03_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="xine">
    <glossterm>xine</glossterm>
    <glossdef>
      <para>A free video player, see <xref linkend="sect_07_03_03_04"></xref>.</para>    </glossdef>
    </glossentry>


<glossentry id="xinetd">
    <glossterm>xinetd</glossterm>
    <glossdef>
      <para>The extended Internet services daemon, see <xref linkend="sect_10_02_01_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="xload">
    <glossterm>xload</glossterm>
    <glossdef>
      <para>System load average display for X, see <xref linkend="sect_04_03_05_06"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="xlsfonts">
    <glossterm>xlsfonts</glossterm>
    <glossdef>
      <para>Server font list displayer for X.</para>
    </glossdef>
    </glossentry>

<glossentry id="xmms">
    <glossterm>xmms</glossterm>
    <glossdef>
      <para>Audio player for X, see <xref linkend="sect_11_02_02_01"></xref>.</para>
    </glossdef>
    </glossentry>

<glossentry id="xpdf">
    <glossterm>xpdf</glossterm>
    <glossdef>
      <para>PDF viewer, see <xref linkend="sect_08_01_02_02"></xref>.</para>
    </glossdef>
    </glossentry>

  <glossentry id="xterm">
    <glossterm>xterm</glossterm>
    <glossdef>
      <para>Terminal emulator for X.</para>
    </glossdef>
    </glossentry>
</glossdiv>

<glossdiv id="Z"><title>Z</title>

  <glossentry id="zapping">
    <glossterm>zapping</glossterm>
    <glossdef>
      <para>A TV viewer for the Gnome environment.</para>
    </glossdef>
    </glossentry>

  <glossentry id="zcat">
    <glossterm>zcat</glossterm>
    <glossdef>
      <para>Compress or expand files.</para>
    </glossdef>
    </glossentry>
  <glossentry id="zgrep">
    <glossterm>zgrep</glossterm>
    <glossdef>
      <para>Search possibly compressed files for a regular expression.</para>
    </glossdef>
    </glossentry>
  <glossentry id="zmore">
    <glossterm>zmore</glossterm>
    <glossdef>
      <para>Filter for viewing compressed text.</para>
    </glossdef>
    </glossentry>
</glossdiv>
</glossary>
</book>
<!-- arch-tag: adb93bb4-3d62-4d69-b887-2914492b00a7
-->